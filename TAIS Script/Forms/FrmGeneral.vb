Option Explicit On
Imports System
Imports System.IO
Imports System.Data.OleDb
Imports System.Drawing.Printing
Imports System.Collections


Public Class FrmGeneral

    'Public Enumeration PlacementMode
    'Public Property Placement As PlacementMode

    '=====  Pre Booking Entry  ==============
    Dim col As New AutoCompleteStringCollection
    Dim colVessel As New AutoCompleteStringCollection
    Dim ColAir As New AutoCompleteStringCollection
    Dim ColAirLine As New AutoCompleteStringCollection

    '===== BSp to NON BSP Booking Entry  =============
    Dim colSupplier As New AutoCompleteStringCollection

    '===== Non Air Transactions =============
    Dim ProductCode As New AutoCompleteStringCollection
    Dim VendorCode As New AutoCompleteStringCollection
    Dim BookerCode As New AutoCompleteStringCollection
    Dim TicketAgentCode As New AutoCompleteStringCollection

  

    '===== BCD MIS ==========================
    Dim ClientSpecCode As New AutoCompleteStringCollection

    '    Private tt As ToolTip = New ToolTip()
    '======='PNR Parsing=====================

    Dim FlgtNo As New ArrayList
    Dim DepDate As New ArrayList
    Dim ArvlDAte As New ArrayList
    Dim StrArryBoard As New ArrayList
    Dim DepTime As New ArrayList
    Dim ArvlTime As New ArrayList
    Dim AirStatus As New ArrayList
    Dim RefNo As New ArrayList
    Dim airSegments As New ArrayList
    Dim AirSegmentsTxt As New ArrayList
    Dim AirSegmentsCon As New ArrayList
    Dim AirSegmentsConStat As New ArrayList
    Dim AirSegmentsRef As New ArrayList
    Dim myArrayBoard As New ArrayList
    Dim myArrayOff As New ArrayList
    Dim myArrayStatus As New ArrayList
    Dim Stat As String = ""

    Dim ALLLength As Integer
    Dim ItineraryInfo As New ArrayList

    Dim TcktNo As New ArrayList
    Dim PName As New ArrayList

    Dim MaxValBoard As Integer
    Dim MaxValOff As Integer
    Dim MaxValStat As Integer

    Dim iCtr As Integer = 0
    Dim proceed As Integer = 1

    '=================FOR SERVICE FEE AUTO CAPTURE=====================
    Dim SF_DOM As Decimal
    Dim SF_REG As Decimal
    Dim SF_INTL As Decimal
    Dim SF_DOM_LCC As Decimal
    Dim SF_DOM_LCC_CURR As String
    Dim SF_DOM_CURR As String
    Dim SF_REG_CURR As String
    Dim SF_INTL_CURR As String
    Dim IF_CONVERT As String
    Dim WITH_VAT As String
    Public SF_ADMIN As Boolean = False


    ' Dim shown As Integer
    Dim mPadding As String = Convert.ToChar(" ")

    Private Property FlightDetails As Object

    'Database Connection
    'Dim taisDB As New TAIS_SERVEREntities
    'Dim dbMIS = New BCDMISEntities()

    Dim taisDB As New TravComEntities()
    Dim dbMIS As New BCDMISLocalEntities()
    Dim taisLocal As New TAISLocalEntities()



    Public Sub FrmGeneral_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        taisDB = New TravComEntities()
        dbMIS = New BCDMISLocalEntities()
        taisLocal = New TAISLocalEntities()

        'If Connected = False Then

        '    If CONNECTDB() Then

        '        objSession = New k1aHostToolKit.HostSession
        '        Session = New k1aHostToolKit.HostSession

        '        Connected = True
        '        txtAgentId.Focus()

        '        CNN.Open()
        '        Call cltdropdown()              ' List of all clients
        '        Call DivDropDown()              ' List of Divisions
        '        Call Vesseldropdown()
        '        Call load_ClientSpec()

        '        '' Initialization for Pre and Post Script
        '        Call FrmMainIni()

        '        '' Initialization for MIS Data
        '        Call FieldMapping()
        '        Call MISINIT()
        '        cboClientName.Text = Nothing
        '        cboClientName.Enabled = True
        '        Call Init_GlobalStrings()

        '        ''===Load Entry for  Non Air Transactions
        '        Call load_productCode()
        '        Call load_VendorCode()
        '        '   Call load_Booker()
        '        Call load_AirlineCode()
        '        Call load_ticketAgent()

        '        Call AgentSet_MainInit()  ' Agent Init
        '        Call AgentSet_AccessInit()
        '        Call AgentSet_loadDivision()

        '    Else
        '        MsgBox("Data source name not found and no default driver specified..Please contact your administrator..", vbCritical, "Terminate")
        '        End
        '    End If

        'End If


    End Sub

    Public Sub ConnectDatabase()
        taisDB = New TravComEntities()
        dbMIS = New BCDMISLocalEntities()
        taisLocal = New TAISLocalEntities()
        If Connected = False Then

            If CONNECTDB() Then

                objSession = New k1aHostToolKit.HostSession
                Session = New k1aHostToolKit.HostSession

                Connected = True
                txtAgentId.Focus()

                CNN.Open()
                Call cltdropdown()              ' List of all clients
                Call DivDropDown()              ' List of Divisions
                Call Vesseldropdown()
                Call load_ClientSpec()

                '' Initialization for Pre and Post Script
                Call FrmMainIni()

                '' Initialization for MIS Data
                Call FieldMapping()
                Call MISINIT()
                cboClientName.Text = Nothing
                cboClientName.Enabled = True
                Call Init_GlobalStrings()

                ''===Load Entry for  Non Air Transactions
                Call load_productCode()
                Call load_VendorCode()
                '   Call load_Booker()
                Call load_AirlineCode()
                Call load_ticketAgent()

                Call AgentSet_MainInit()  ' Agent Init
                Call AgentSet_AccessInit()
                Call AgentSet_loadDivision()

            Else
                MsgBox("Data source name not found and no default driver specified..Please contact your administrator..", vbCritical, "Terminate")
                End
            End If

        End If
    End Sub


    '================Main Initialization==================

    Public Sub FrmMainIni()

        PCode = Nothing
        VCode = Nothing
        C_Curr = Nothing
        BCODE = Nothing

        '===clears all counters
        ctr = 0
        sendpnrError = 0
        SendMsg = 0

        ''====Clears On and Off Signers
        chkOffSigner.Checked = False
        chkOnSigner.Checked = False
        chkOffline.Checked = False


        'RdBtnAllEntries.Checked = True
        'RdBtnReIssue.Checked = False


        '=====BSP transactions Initialization ======

        RdDom.Checked = False
        RdReg.Checked = False
        RdIntl.Checked = False


        B_SF = Nothing       ' Selling Fare
        B_PF = Nothing       ' Publish Fare
        B_RF = Nothing       ' Reference Fare
        B_LF = Nothing       ' Lowest Fare
        B_EC = Nothing       ' Exception Code
        BF_FTypes = Nothing
        BF_SF = Nothing
        TOEGCheck = Nothing

        custSpecLowFare = Nothing
        custSpecLowFare = Nothing
        Com_A = Nothing
        Com_P = Nothing
        NetTicket = Nothing
        NonBSP = Nothing

        FlagS = Nothing
        SupCode = Nothing     ' Supplier Code
        AirCode = Nothing     ' Airline Code
        TktCode = Nothing ' Ticketing Agent Code

        txtSellingFare.Text = Nothing   ' Selling Fare
        txtPublishFare.Text = Nothing
        txtLowFare.Text = Nothing       ' Low Fare
        txtRefFare.Text = Nothing       ' Ref Fare
        txtCustSpecHighFare.Text = Nothing  ' Cust High Fare
        txtCustSpecLowFare.Text = Nothing   ' Cust Low Fare
        txtNetTicket.Text = Nothing
        txtTripType.Text = Nothing

        txtExpCode.Text = Nothing           ' Exceptional Code
        txtCommAmt.Text = Nothing       ' Commission Amount
        txtComPercentage.Text = Nothing ' Commission Percentage
        txtNoOfPax.Text = Nothing
        eticket = Nothing

        cboCurrAir.Text = Nothing
        txtNoofTkt.Text = "1"
        'txtNoOfPax.Text = Nothing


        cboSegment.Text = Nothing
        txtSFSegment.Text = Nothing
        RTSF.Text = Nothing
        RTFares.Text = Nothing

        cboAirlineCode.Text = Nothing
        cboSupplierCode.Text = Nothing
        cboTicketingAgent.Text = Nothing

        cboAlineCode.Text = Nothing
        txtTicketNumber.Text = Nothing

        '======End BSP======

        '====Non BCD transactions Initialization =====

        TFPCode = Nothing
        TFVCode = Nothing
        TFCPercentage = Nothing
        TFCurr = Nothing
        TFCostAmt = Nothing
        TFSFAmt = Nothing
        DIn = Nothing
        Dout = Nothing
        DTvl = Nothing
        MSRf = Nothing
        MSLf = Nothing
        MSEc = Nothing
        Tkt = Nothing
        Non_Tkt = Nothing
        NoPax = Nothing
        proType = Nothing
        TA = Nothing

        cboProductCode.Text = Nothing
        cboVendorCode.Text = Nothing
        cboProdTYpe.Items.Clear()
        cboProdTYpe.Text = Nothing
        txtComP.Text = Nothing
        cboCostCurr.Text = Nothing
        txtCostAmt.Text = Nothing
        txtSFAmt.Text = Nothing
        txtNoPax.Text = Nothing

        '==Clear all the products found in the list
        DGW1.Rows.Clear()
        DGW1.Columns.Clear()
        DGW1.ColumnHeadersVisible = False
        DGW1.RowHeadersVisible = False

        For i = 0 To Segment.Count - 1
            Segment(i) = Nothing
        Next

        For i = 0 To SegmentFareCode.Count - 1
            SegmentFareCode(i) = Nothing
        Next


        For i = 0 To TicketSegment.Count - 1
            TicketSegment(i) = Nothing
        Next


        MRdom.Checked = False                          ' For Non BSP Only
        MRIntl.Checked = False
        MRReg.Checked = False
        MRdom.Enabled = False
        MRIntl.Enabled = False
        MRReg.Enabled = False

        txtDatein.Text = Nothing
        txtDateOut.Text = Nothing
        txtDatein.Enabled = False
        txtDateOut.Enabled = False
        DTCheckIn.Enabled = False
        DTCheckOut.Enabled = False

        txtRMRefFare.Text = Nothing
        txtRMLF.Text = Nothing
        txtRMExpCode.Text = "SC"

        ''Remarks Fields

        cboConventionName.Text = Nothing
        txtConventionPlace.Text = Nothing

        txtDateofConvention.ReadOnly = True
        txtDateofConvention.Text = Nothing
        txtDateofConvention.BackColor = Color.White
        DateConvention.Enabled = True
        'DateConvention.Value = Date.Now

        cboBookerName.Text = Nothing
        txtHotelName.Text = Nothing
        txtAuthorizedNo.Text = Nothing
        txtTBSNo.Text = Nothing
        txtEmployee.Text = Nothing
        txtCCGL.Text = Nothing
        txtLnNo.Text = Nothing
        txtccDetails.Text = Nothing
        TxtTravEmail.Text = Nothing


        txtDateSegment.ReadOnly = True
        txtDateSegment.Text = Nothing
        txtDateSegment.BackColor = Color.White
        DateSegment.Enabled = True
        DateSegment.Value = Date.Now.AddMonths(11)


        'Remarks
        ConName = Nothing    ' Convention Name
        ConPlace = Nothing   ' Convention Place
        ConDate = Nothing    ' Convention Date
        HotelName = Nothing  ' Hotel Name
        BookName = Nothing   ' Booker Name

        Autho = Nothing      ' Authorizer Name
        EmpNo = Nothing      ' Employee Number
        TBS = Nothing        ' TBS number
        CCGL = Nothing       ' Cost center GL number
        LinNo = Nothing      ' Line Number
        TF = Nothing         ' Transaction Fees
        ccDetailsNew = Nothing ' Other CC Details
        TOEG = Nothing         ' TOEG Email

        MSRefFare = Nothing  ' Misc Reference Fare
        MSLowFare = Nothing  ' Misc Lowest Fare
        MSExpCode = Nothing  ' Misc Exp Code
        PNRDate = Nothing    ' Retain Segment
        PNRNoPax = Nothing   ' No of Pax Retain in Segment
        PNRSegment = Nothing ' COmbination of Segment (Date & No of Pax) 
        FSegmentType = Nothing


        txtRMRefFare.Enabled = False
        txtRMLF.Enabled = False
        txtRMExpCode.Enabled = False

    End Sub


    '=============================================
    '      Initialize Non-BSP transactions
    '=============================================

    Private Sub initproduct()

        cboProdTYpe.Text = Nothing
        cboVendorCode.Text = Nothing

        txtComP.Text = Nothing
        cboCostCurr.Text = Nothing
        cboCostCurr.Text = cboCurrAir.Text
        txtCostAmt.Text = Nothing
        txtSFAmt.Text = Nothing
        txtNoPax.Text = txtNoOfPax.Text
        NoPax = Nothing

        txtRMRefFare.Enabled = False
        txtRMLF.Enabled = False
        txtRMExpCode.Enabled = False

        MRdom.Enabled = False
        MRIntl.Enabled = False
        MRReg.Enabled = False

        MRdom.Checked = False
        MRIntl.Checked = False
        MRReg.Checked = False

        DTCheckIn.Enabled = False
        DTCheckOut.Enabled = False
        txtDatein.Text = Nothing
        txtDateOut.Text = Nothing

        txtDatein.Enabled = False
        txtDateOut.Enabled = False

        cboProdTYpe.Enabled = True
        cboVendorCode.Enabled = True
        txtComP.Enabled = True
        cboCostCurr.Enabled = True
        txtCostAmt.Enabled = True
        txtSFAmt.Enabled = True
        txtNoPax.Enabled = True


    End Sub


    '=======================Initialization =====================
    'Tab Page 1
    '===========================================================

    Private Sub btnTravPaxInit()

        txtRF.Text = Nothing             ' Received From
        txtRF.Enabled = True
        txtClientNo.Text = Nothing
        cboBillTo.Text = Nothing
        DivGroup = Nothing
        DivNumberPer = Nothing
        strClientNumber = Nothing
        strClientGlobalCustNo = Nothing
        strAccess = Nothing

        '---Traveller
        ListPax.Items.Clear()
        ListPax.Enabled = False
        RdMoveUpPax.Enabled = False
        RdMoveUpPax.Checked = False
        RdMoveDownPax.Enabled = False
        RdMoveDownPax.Checked = False
        RdPDMD.Enabled = False
        RdPDMD.Checked = False
        RdPDMu.Enabled = False
        RdPDMu.Checked = False
        ButtonOkPax.Enabled = False
        txtPaxNo.Enabled = False
        txtPaxNo.Text = Nothing
        btnPax.Enabled = False
        ListPax.Enabled = False

        '---Similar
        lstClient.Items.Clear()
        lstClient.Enabled = False
        btnSend.Enabled = False
        rdMoveD.Enabled = False
        rdMoveD.Checked = False
        rdMoveU.Enabled = False
        rdMoveU.Checked = False
        Rd_BtnOk.Enabled = False
        txtLineNo.Enabled = False
        txtLineNo.Text = Nothing
        VesselName.Checked = False

    End Sub


    Private Sub btnClearInit()

        '=====================================================
        '===Clears Data only from Pre Booking but not all
        '=====================================================

        strCommand = Nothing             ' Client Name (Temporary Storage)
        cboClient.Text = Nothing         ' DropDown list for Client 
        strCmdVessel = Nothing           ' Vessel Name (Temporary Storage)
        cboVessel.Text = Nothing
        cboBillTo.Text = Nothing


        txtClientNo.Text = Nothing       ' Client No   
        txtVessel.Text = Nothing         ' Vessel Name
        txtRF.Text = Nothing             ' Received From

        '---Traveller
        ListPax.Items.Clear()
        ListPax.Enabled = False
        RdMoveUpPax.Enabled = False
        RdMoveUpPax.Checked = False
        RdMoveDownPax.Enabled = False
        RdMoveDownPax.Checked = False
        RdPDMD.Enabled = False
        RdPDMD.Checked = False
        RdPDMu.Enabled = False
        RdPDMu.Checked = False
        ButtonOkPax.Enabled = False
        txtPaxNo.Enabled = False
        txtPaxNo.Text = Nothing
        btnPax.Enabled = False
        ListPax.Enabled = False

        '---Similar
        lstClient.Items.Clear()
        lstClient.Enabled = False
        btnSend.Enabled = False
        rdMoveD.Enabled = False
        rdMoveD.Checked = False
        rdMoveU.Enabled = False
        rdMoveU.Checked = False
        Rd_BtnOk.Enabled = False
        txtLineNo.Enabled = False
        txtLineNo.Text = Nothing

        VesselName.Checked = False

    End Sub


    '======Client List =======
    Private Sub cltdropdown()

        'CHECK_RS1()

        Dim profile As New List(Of String)
        profile = (From prof In taisDB.Profiles
                   Where prof.ProfileType = 0
                   Order By prof.FullName Ascending
                   Select prof.FullName).ToList()

        col.AddRange(profile.ToArray)

        cboClient.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboClient.AutoCompleteCustomSource = col
        cboClient.AutoCompleteMode = AutoCompleteMode.Suggest

        'RS1.Close()

    End Sub



    '====List of Division=====
    Private Sub DivDropDown()

        'CHECK_RS1()

        Dim division As New List(Of String)

        division = (From d In taisDB.Divisions
                    Order By d.Division Ascending
                    Select d.Name).ToList()

        cboDiv.Items.AddRange(division.ToArray)

        'SQL_QUERY = "Select * from TAIS_SERVER..Divisions"
        'RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        'With RS1

        '    Do While Not RS1.EOF
        '        cboDiv.Items.Add(RS1.Fields("Division").Value).ToString()
        '        RS1.MoveNext()
        '    Loop

        'End With

        'RS1.Close()

    End Sub


    '=====List of Vessel =====
    Private Sub Vesseldropdown()

        'CHECK_RS1()

        Dim profiles As New List(Of String)

        profiles = (From prof In taisDB.Profiles
                    Where prof.ProfileType = 0 And prof.ProfileNumber.Contains("100")
                    Order By prof.FullName Ascending
                    Select prof.FullName).ToList()

        colVessel.AddRange(profiles.ToArray)

        'SQL_QUERY = "Select * from TAIS_SERVER..PROFILES where profiletype= 0 and ProfileNumber like '%100%' "
        'RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        'With RS1

        '    Do While Not RS1.EOF
        '        colVessel.Add(RS1.Fields("FullName").Value).ToString()
        '        RS1.MoveNext()
        '    Loop

        'End With

        'RS1.Close()

        cboBillTo.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboBillTo.AutoCompleteCustomSource = colVessel
        cboBillTo.AutoCompleteMode = AutoCompleteMode.Suggest

    End Sub


    '=====Bill To Client =====
    Private Sub cboBillTo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboBillTo.KeyDown

        FieldMapping()
        Call Init_GlobalStrings()
        Call MISINIT()

        cboClientName.Text = Nothing
        cboClientName.Enabled = True

        txtClientNo.Text = Nothing

        If e.KeyCode = 13 Then

            strCmdVessel = Trim(cboBillTo.SelectedText)

            CHECK_RS()

            SQL_QUERY = "Select * from TAIS_SERVER..PROFILES where profiletype= 0 and fullname = '" & strCmdVessel & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    txtClientNo.Text = Trim("RM*CN/" & ((RS.Fields("ProfileNumber").Value)))
                    strClientNumber = (RS.Fields("ProfileNumber").Value)
                    strClientGlobalCustNo = ((RS.Fields("PhoneNumber4").Value))
                    txtClientN.Text = strCmdVessel
                    FrmSpecSettings.txtClientNumber.Text = RS.Fields("ProfileNumber").Value

                End If

            End With
            RS.Close()
            BCDMISfields()

        End If

    End Sub


    '=====Select Particular Client =====

    Private Sub cboClient_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboClient.KeyDown
        SF_DOM = 0

        SF_REG = 0

        SF_INTL = 0

        SF_DOM_CURR = 0

        SF_REG_CURR = 0

        SF_INTL_CURR = 0

        IF_CONVERT = 0

        WITH_VAT = 0

        SF_DOM_LCC = 0

        SF_DOM_LCC_CURR = 0


        If Trim(cboVessel.Text) <> Nothing Then
            Call FieldMapping()    ' Clear data
            Call MISINIT()
            Call FrmMainIni()
            ' Call load_Booker()
            cboClientName.Text = Nothing
            cboClientName.Enabled = True
            Call Init_GlobalStrings()

        Else
            Call btnTravPaxInit()
            Call FieldMapping()    ' Clear data
            Call MISINIT()
            Call FrmMainIni()

            cboClientName.Text = Nothing
            cboClientName.Enabled = True
            Call Init_GlobalStrings()

        End If



        If e.KeyCode = 13 Then

            strCommand = Trim(cboClient.SelectedText)

            'CHECK_RS()

            'SQL_QUERY = "Select * from TAIS_SERVER..PROFILES where profiletype= 0 and fullname = '" & strCommand & "'"
            'RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            'With RS

            '    If Not RS.EOF Then
            '        txtClientNo.Text = Trim("RM*CN/" & ((RS.Fields("ProfileNumber").Value)))
            '        strClientNumber = ((RS.Fields("ProfileNumber").Value))  'GLobal Customer Number
            '        strClientGlobalCustNo = ((RS.Fields("PhoneNumber4").Value))
            '        txtClientN.Text = strCommand
            '        FrmSpecSettings.txtClientNumber.Text = RS.Fields("ProfileNumber").Value


            '    End If

            'End With

            'RS.Close()

            Dim clientProfile = taisDB.Profiles.FirstOrDefault(Function(n) n.ProfileType = 0 And n.FullName = strCommand)

            txtClientNo.Text = Trim("RM*CN/" & clientProfile.ProfileNumber)
            strClientNumber = clientProfile.ProfileNumber
            strClientGlobalCustNo = clientProfile.PhoneNumber4
            txtClientN.Text = strCommand
            FrmSpecSettings.txtClientNumber.Text = clientProfile.ProfileNumber


            'SQL_QUERY = "SELECT * FROM TAIS_SERVER..ProfileAgentInfo where InitialSignIn='" & txtAgentId.Text & "'"
            'RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            'With RS
            '    If Not RS.EOF Then
            '        If (RS.Fields("Div").Value = "MICE") Then
            '            strClientGlobalCustNo = "400"
            '        End If
            '    End If
            'End With

            'RS.Close()

            Dim agentProf = taisLocal.ProfileAgentInfoes.FirstOrDefault(Function(n) n.InitialSignIn = txtAgentId.Text)

            If (agentProf.Div = "MICE") Then
                strClientGlobalCustNo = "400"
            End If

            Call BCDMISfields()
            Call load_Booker()

            '==============================SERVICE FEE AUTO CAPTURE============================================
            SQL_QUERY = "Select * from BCDMIS..ClientSpecificFee where ProfileNumber ='" & strClientNumber & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    SF_DOM = RS.Fields("SF_DOM").Value

                    SF_REG = RS.Fields("SF_REG").Value

                    SF_INTL = RS.Fields("SF_INTL").Value

                    SF_DOM_CURR = RS.Fields("SF_DOM_CURR").Value

                    SF_REG_CURR = RS.Fields("SF_REG_CURR").Value

                    SF_INTL_CURR = RS.Fields("SF_INTL_CURR").Value

                    IF_CONVERT = RS.Fields("IF_CONVERT").Value

                    WITH_VAT = RS.Fields("WITH_VAT").Value

                    SF_DOM_LCC = RS.Fields("SF_DOM_LCC").Value

                    SF_DOM_LCC_CURR = RS.Fields("SF_DOM_LCC_CURR").Value
                End If
            End With

            RS.Close()

            '=============CONVERT USD TO PHP WITH BUFFER AMOUNT OF (1.50)==================
            If (IF_CONVERT = "Y") Then
                Dim ExchangeRate As Decimal

                SQL_QUERY = "Select * from TAIS_SERVER..Currencies where CurrencyCode = 'USD'"
                RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS
                    If Not RS.EOF Then
                        ExchangeRate = RS.Fields("ExchangeRate").Value - 1.5

                    End If

                    If (SF_DOM_CURR = "USD") Then
                        SF_DOM = Math.Round((SF_DOM / ExchangeRate), 2)
                    End If

                    If (SF_INTL_CURR = "USD") Then
                        SF_INTL = Math.Round((SF_INTL / ExchangeRate), 2)
                    End If


                    If (SF_REG_CURR = "USD") Then
                        SF_REG = Math.Round((SF_REG / ExchangeRate), 2)
                    End If

                    If (SF_DOM_LCC_CURR = "USD") Then
                        SF_DOM_LCC = Math.Round((SF_DOM_LCC / ExchangeRate), 2)
                    End If

                End With

            End If

            '=============VAT INCLUSIVE========================
            If (WITH_VAT = "Y") Then
                SF_DOM = Math.Round((SF_DOM / 1.12), 2)

                SF_INTL = Math.Round((SF_INTL / 1.12), 2)

                SF_REG = Math.Round((SF_REG / 1.12), 2)

                SF_DOM_LCC = Math.Round((SF_DOM_LCC / 1.12), 2)
            End If
        End If


    End Sub



    Private Sub cboVessel_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboVessel.KeyDown

        btnTravPaxInit()
        'Clear MIS Fields
        FieldMapping()
        Init_GlobalStrings()
        MISINIT()

        cboClientName.Text = Nothing
        cboClientName.Enabled = True

        txtVessel.Text = Nothing
        VesselName.Checked = False

    End Sub



    Private Sub cboDiv_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboDiv.KeyDown

        lblDivName.Text = Nothing
        txtDiv.Text = Trim("RM*DIV/" & Trim(txtDivNo.Text))

    End Sub



    Private Sub cboDiv_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboDiv.SelectedIndexChanged

        lblDivName.Text = Nothing

        Dim divName As String = Trim(cboDiv.Text)

        CHECK_RS()

        SQL_QUERY = "Select * from TAIS_SERVER..Divisions where Division = '" & Trim(divName) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                lblDivName.Text = (RS.Fields("Name").Value)
                txtDiv.Text = Trim("RM*DIV/" & Trim(RS.Fields("Division").Value).ToString())
            End If

        End With

        RS.Close()

    End Sub



    Private Sub cmdSend_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmdSend.Click

        If Len(Trim(strCommand)) = 0 Then
            MsgBox("Please select Client Name first before proceeding..Thanks!", MsgBoxStyle.Information + vbOKOnly, ":::TAIS:::")
            cboClient.Focus()
            Me.Cursor = Cursors.Default
        Else

            If txtAccess.Text = 1 Or txtAccess.Text = 4 Then 'And txtAccess.Text = 4 

                If Trim(txtAPEle.Text) <> Nothing Then
                    objSession.Send(Trim(txtAPEle.Text))
                End If

                If Trim(txtAP.Text) <> Nothing Then
                    objSession.Send(Trim(txtAP.Text))
                End If

                strAccess = 1

            End If


            If Len(Trim(strCommand)) <> 0 Then

                strSplit = strCommand.Split(" ")

                If strSplit.Count >= 1 Then

                    objResponse = objSession.Send("PDN/" + Trim(strSplit(0).ToString)) ' + " " + Trim(strSplit(1).ToString))
                    strErrorCheck = objResponse.GetLineFromBuffer(2)
                    strErrorCheckNew = objResponse.GetLineFromBuffer(1)
                    strStatus = strErrorCheck.Split(" ")
                    strStatusNew = strErrorCheckNew.Split(" ")
                    Call ErrorCheck()
                End If

            End If

        End If

        txtRF.Enabled = True


    End Sub



    Private Sub ErrorCheck()

        If Trim(UCase(strStatus(0).ToString)) = "DEACTIVATED" Then

            MsgBox("Deactivated Company Profile..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            objSession = Nothing
            objResponse = Nothing
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatus(0).ToString)) = "INVALID" Then

            MsgBox("Invalid Entry..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            objSession = Nothing
            objResponse = Nothing
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatusNew(0).ToString)) = "CHECK" Then

            MsgBox("Check Input..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            objSession = Nothing
            objResponse = Nothing
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatus(0).ToString)) = "NO" Then ' And Trim(UCase(strStatus(1).ToString)) = "COMPANY" Then

            MsgBox("No Company Profile Found..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            objSession = Nothing
            objResponse = Nothing
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatus(0).ToString)) = "INACTIVITY" Then

            MsgBox("Inactivity Time Out-Sign In!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            objSession = Nothing
            objResponse = Nothing
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatus(0).ToString)) = "SIGN" Then

            MsgBox("Please Sign-In....", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            objSession = Nothing
            objResponse = Nothing
            Me.Cursor = Cursors.Default

        Else

            strErrorCheck = objResponse.GetLineFromBuffer(1)
            strErrorSim = objResponse.GetLineFromBuffer(3)

            strStatus = strErrorCheck.Split(" ")
            strStatusSim = strErrorSim.Split(" ")


            If Trim(UCase(strStatus(0).ToString)) = "INPUT:" And Trim(UCase(strStatusSim(0).ToString)) = "SIMILAR" Then

                lstClient.Items.Clear()

                If Trim((cboVessel.Text).IndexOf("-")) <> -1 Then

                    For i = 6 To objResponse.NumberOfLines - 1
                        ListPax.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(2, 26))
                    Next

                    Me.Cursor = Cursors.Default

                    '---Traveller
                    RdMoveUpPax.Enabled = True
                    RdMoveUpPax.Checked = False
                    RdMoveDownPax.Enabled = True
                    RdMoveDownPax.Checked = False
                    RdPDMD.Enabled = True
                    RdPDMD.Checked = False
                    RdPDMu.Enabled = True
                    RdPDMu.Checked = False
                    ButtonOkPax.Enabled = True
                    btnPax.Enabled = True
                    ListPax.Enabled = True

                    '---Similar
                    lstClient.Enabled = False
                    btnSend.Enabled = False
                    rdMoveD.Enabled = False
                    rdMoveD.Checked = False
                    rdMoveU.Enabled = False
                    rdMoveU.Checked = False
                    Rd_BtnOk.Enabled = False

                ElseIf Trim((cboVessel.Text).IndexOf("-")) < 0 Or Trim((cboVessel.Text) = Nothing) Then

                    '====List down similar company name
                    For i = 6 To objResponse.NumberOfLines - 1
                        lstClient.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(2, 26))
                    Next

                    '---Traveller
                    RdMoveUpPax.Enabled = False
                    RdMoveUpPax.Checked = False
                    RdMoveDownPax.Enabled = False
                    RdMoveDownPax.Checked = False
                    RdPDMD.Enabled = False
                    RdPDMD.Checked = False
                    RdPDMu.Enabled = False
                    RdPDMu.Checked = False
                    ButtonOkPax.Enabled = False
                    ' txtPaxNo.Enabled = False
                    btnPax.Enabled = False
                    ListPax.Enabled = False

                    '---Similar
                    lstClient.Enabled = True
                    btnSend.Enabled = True
                    rdMoveD.Enabled = True
                    rdMoveD.Checked = False
                    rdMoveU.Enabled = True
                    rdMoveU.Checked = False
                    Rd_BtnOk.Enabled = True
                    ' txtLineNo.Enabled = True

                    input = 0

                    If Trim(txtAccess.Text) = "2" Then
                        VesselName.Checked = True
                    End If

                End If

            End If



            If Trim(UCase(strStatus(0).ToString)) <> "INPUT:" And Trim(UCase(strStatusSim(0).ToString)) <> "SIMILAR" Then

                objResponse = objSession.Send("PT*")
                strErrorCheck = objResponse.GetLineFromBuffer(1)
                strStatus = strErrorCheck.Split(" ")

                If Trim(UCase(strStatus(0).ToString)) = "INVALID/NOT" Then
                    objResponse = objSession.Send("RT")
                End If

                ctrErrorChecking = 1
                input = 1

                If Trim(txtAccess.Text) = "2" Then
                    VesselName.Checked = False
                    txtVessel.Text = Nothing
                End If

            End If



            If ctrErrorChecking = 1 And input = 1 And txtAccess.Text = "1" Then

                objResponse = objSession.Send("PLT//" + Trim(strSplit(0).ToString))
                strErrorCheck = objResponse.GetLineFromBuffer(2)
                strStatus = strErrorCheck.Split(" ")

                If Trim(UCase(strStatus(0).ToString)) = "NO" And Trim(UCase(strStatus(1).ToString)) = "TRAVELLER" Then

                    MsgBox("No Traveller Profile Found!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " :: TAIS ::")
                    objSession.Send("RT")

                    '---Traveller
                    RdMoveUpPax.Enabled = False
                    RdMoveUpPax.Checked = False
                    RdMoveDownPax.Enabled = False
                    RdMoveDownPax.Checked = False
                    RdPDMD.Enabled = False
                    RdPDMD.Checked = False
                    RdPDMu.Enabled = False
                    RdPDMu.Checked = False
                    ButtonOkPax.Enabled = False
                    btnPax.Enabled = False
                    ListPax.Enabled = False

                    '---Similar
                    lstClient.Enabled = True
                    btnSend.Enabled = True
                    rdMoveD.Enabled = True
                    rdMoveD.Checked = False
                    rdMoveU.Enabled = True
                    rdMoveU.Checked = False
                    Rd_BtnOk.Enabled = True

                Else

                    '===List down the Traveller List
                    For i = 6 To objResponse.NumberOfLines - 1
                        ListPax.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(2, 26))
                    Next

                    Me.Cursor = Cursors.Default

                    '---Traveller
                    RdMoveUpPax.Enabled = True
                    RdMoveUpPax.Checked = False
                    RdMoveDownPax.Enabled = True
                    RdMoveDownPax.Checked = False
                    RdPDMD.Enabled = True
                    RdPDMD.Checked = False
                    RdPDMu.Enabled = True
                    RdPDMu.Checked = False
                    ButtonOkPax.Enabled = True
                    btnPax.Enabled = True
                    ListPax.Enabled = True

                    '---Similar
                    lstClient.Enabled = False
                    btnSend.Enabled = False
                    rdMoveD.Enabled = False
                    rdMoveD.Checked = False
                    rdMoveU.Enabled = False
                    rdMoveU.Checked = False
                    Rd_BtnOk.Enabled = False

                End If

            End If


            If ctrErrorChecking = 1 And input = 1 And txtAccess.Text = "2" Then

                objResponse = objSession.Send("PLT//" + Trim(cboVessel.Text))
                strErrorCheck = objResponse.GetLineFromBuffer(2)
                strVesseCheck = objResponse.GetLineFromBuffer(1) 'Check for Traveller Profile *T*

                strStatus = strErrorCheck.Split(" ")
                strVess = strVesseCheck.Split(" ")

                If Trim(UCase(strStatus(0).ToString)) = "NO" And Trim(UCase(strStatus(1).ToString)) = "TRAVELLER" Then

                    MsgBox("No Traveller Profile Found!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " :: TAIS ::")

                    objSession.Send("RT")

                    '---Traveller
                    RdMoveUpPax.Enabled = False
                    RdMoveUpPax.Checked = False
                    RdMoveDownPax.Enabled = False
                    RdMoveDownPax.Checked = False
                    RdPDMD.Enabled = False
                    RdPDMD.Checked = False
                    RdPDMu.Enabled = False
                    RdPDMu.Checked = False
                    ButtonOkPax.Enabled = False
                    btnPax.Enabled = False
                    ListPax.Enabled = False

                    '---Similar
                    lstClient.Enabled = False
                    btnSend.Enabled = False
                    rdMoveD.Enabled = False
                    rdMoveD.Checked = False
                    rdMoveU.Enabled = False
                    rdMoveU.Checked = False
                    Rd_BtnOk.Enabled = False


                ElseIf Trim(UCase(strVess(0).ToString)) = "*T*" Then

                    MsgBox("No Traveller Profile Found!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " :: TAIS ::")

                    objSession.Send("RT")

                    '---Traveller
                    RdMoveUpPax.Enabled = False
                    RdMoveUpPax.Checked = False
                    RdMoveDownPax.Enabled = False
                    RdMoveDownPax.Checked = False
                    RdPDMD.Enabled = False
                    RdPDMD.Checked = False
                    RdPDMu.Enabled = False
                    RdPDMu.Checked = False
                    ButtonOkPax.Enabled = False
                    btnPax.Enabled = False
                    ListPax.Enabled = False

                    '---Similar
                    lstClient.Enabled = False
                    btnSend.Enabled = False
                    rdMoveD.Enabled = False
                    rdMoveD.Checked = False
                    rdMoveU.Enabled = False
                    rdMoveU.Checked = False
                    Rd_BtnOk.Enabled = False

                Else

                    ListPax.Items.Clear()

                    '===List down the Traveller List
                    For i = 6 To objResponse.NumberOfLines - 1
                        ListPax.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(2, 26))
                    Next

                    Me.Cursor = Cursors.Default

                    '---Traveller
                    RdMoveUpPax.Enabled = True
                    RdMoveUpPax.Checked = False
                    RdMoveDownPax.Enabled = True
                    RdMoveDownPax.Checked = False
                    RdPDMD.Enabled = True
                    RdPDMD.Checked = False
                    RdPDMu.Enabled = True
                    RdPDMu.Checked = False
                    ButtonOkPax.Enabled = True
                    btnPax.Enabled = True
                    ListPax.Enabled = True

                    '---Similar
                    lstClient.Enabled = False
                    btnSend.Enabled = False
                    rdMoveD.Enabled = False
                    rdMoveD.Checked = False
                    rdMoveU.Enabled = False
                    rdMoveU.Checked = False
                    Rd_BtnOk.Enabled = False

                End If

            End If

        End If


    End Sub


    '=================================================
    ' Get the Travel Consultant Profile from TAIS db
    '=================================================

    Private Sub btnLogIn_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnLogIn.Click

        strAccess = Nothing

        Dim inc As New Integer


        If Trim(UCase(txtAgentId.Text)) <> Nothing Then

            ConnectDatabase()

            Dim profileAgent = taisLocal.ProfileAgentInfoes.FirstOrDefault(Function(n) n.InitialSignIn = Trim(txtAgentId.Text))

            If Not profileAgent Is Nothing Then
                ComName = profileAgent.CompanyName

                ContactNo = profileAgent.ContactNo

                FirstName = profileAgent.First_Name

                QueueNo = profileAgent.QueueNo

                TeamGroup = profileAgent.TeamGroup

                APEle = profileAgent.AP

                Level = profileAgent.AccessLevel

                DivGroup = profileAgent.Div

                BA = profileAgent.Others

                If BA <> Nothing Then
                    txtBA.Text = Trim("RM*BA/" & BA)
                End If

                txtAP.Text = Trim(ComName) & " " & Trim(ContactNo) & " " & Trim(FirstName) & " " & Trim(QueueNo) & " " & Trim(TeamGroup)
                txtAPEle.Text = Trim(APEle)
                txtAccess.Text = Level
            End If
            '==========================================================================================
            '================================== Access Level ==========================================
            '==========================================================================================

            'If Trim(Level) <> Nothing Then

            '        CHECK_RS2()

            '        SQL_QUERY = "Select * from TAIS_SERVER..UserAccess where ltrim(Accesslevel) = '" & Trim(Level) & "'"
            '        RS2.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            '        With RS2

            '            If Not RS2.EOF Then

            '                If Trim((RS2.Fields("ClientNo").Value).ToString()) = "True" Then
            '                    chkClientNo.Checked = True
            '                    chkClientNo.Enabled = False

            '                Else
            '                    chkClientNo.Checked = False
            '                    chkClientNo.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("DivisionNo").Value).ToString()) = "True" Then
            '                    DivNo.Checked = True
            '                    DivNo.Enabled = False
            '                Else
            '                    DivNo.Checked = False
            '                    DivNo.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("BookingAgent").Value).ToString()) = "True" Then
            '                    BookingAgent.Checked = True
            '                    BookingAgent.Enabled = False
            '                Else
            '                    BookingAgent.Checked = False
            '                    BookingAgent.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("VesselName").Value).ToString()) = "True" Then
            '                    VesselName.Checked = True
            '                    VesselName.Enabled = False
            '                Else
            '                    VesselName.Checked = False
            '                    VesselName.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("PhoneElement").Value).ToString()) = "True" Then
            '                    PhoneEle.Checked = True
            '                    PhoneEle.Enabled = False
            '                Else
            '                    PhoneEle.Checked = False
            '                    PhoneEle.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("Compleat").Value).ToString()) = "True" Then
            '                    Compleat.Checked = True
            '                    Compleat.Enabled = False
            '                Else
            '                    Compleat.Checked = False
            '                    Compleat.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("ReceivedFrom").Value).ToString()) = "True" Then
            '                    RF.Checked = True
            '                    RF.Enabled = False
            '                    txtRF.Enabled = True
            '                Else
            '                    txtRF.Enabled = False
            '                    RF.Checked = False
            '                    RF.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("TKTL").Value).ToString()) = "True" Then
            '                    TKTL.Checked = True
            '                    TKTL.Enabled = False
            '                Else
            '                    TKTL.Checked = False
            '                    TKTL.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("ClientName").Value).ToString()) = "True" Then
            '                    cboClient.Enabled = True
            '                    cmdSend.Enabled = True

            '                Else
            '                    cboClient.Enabled = False
            '                    cmdSend.Enabled = False

            '                End If

            '                If Trim((RS2.Fields("VName").Value).ToString()) = "True" Then
            '                    cboVessel.Enabled = True
            '                    btnVessel.Enabled = True
            '                Else
            '                    cboVessel.Enabled = False
            '                    btnVessel.Enabled = False
            '                End If

            '                If Trim((RS2.Fields("BillTo").Value).ToString()) = "True" Then
            '                    cboBillTo.Enabled = True
            '                Else
            '                    cboBillTo.Enabled = False
            '                End If

            '                txtRF.Enabled = True


            '            End If

            '        End With

            '        RS2.Close()
            '    End If

            Dim userAccess = taisLocal.UserAccesses.FirstOrDefault(Function(n) n.AccessLevel = Trim(Level))

            If Not userAccess Is Nothing Then
                If userAccess.ClientNo <> Nothing Then
                    chkClientNo.Checked = True
                    chkClientNo.Enabled = False
                Else
                    chkClientNo.Checked = False
                    chkClientNo.Enabled = False
                End If

                If userAccess.BookingAgent <> Nothing Then
                    DivNo.Checked = True
                    DivNo.Enabled = False

                Else
                    DivNo.Checked = False
                    DivNo.Enabled = False
                End If

                If userAccess.VesselName <> Nothing Then
                    VesselName.Checked = True
                    VesselName.Enabled = False
                Else
                    VesselName.Checked = False
                    VesselName.Enabled = False
                End If

                If userAccess.PhoneElement <> Nothing Then
                    PhoneEle.Checked = True
                    PhoneEle.Enabled = False
                Else
                    PhoneEle.Checked = False
                    PhoneEle.Enabled = False
                End If

                If userAccess.Compleat <> Nothing Then
                    Compleat.Checked = True
                    Compleat.Enabled = False
                Else
                    Compleat.Checked = False
                    Compleat.Enabled = False
                End If

                If userAccess.ReceivedFrom <> Nothing Then
                    RF.Checked = True
                    RF.Enabled = False
                    txtRF.Enabled = True
                Else
                    RF.Checked = False
                    RF.Enabled = False
                    txtRF.Enabled = False
                End If

                If userAccess.TKTL <> Nothing Then
                    TKTL.Checked = True
                    TKTL.Enabled = False
                Else
                    TKTL.Checked = False
                    TKTL.Enabled = False
                End If

                If userAccess.ClientName <> Nothing Then
                    cboClient.Enabled = True
                    cmdSend.Enabled = True
                Else
                    cboClient.Enabled = False
                    cmdSend.Enabled = False
                End If

                If userAccess.VName <> Nothing Then
                    cboVessel.Enabled = True
                    btnVessel.Enabled = True
                Else
                    cboVessel.Enabled = False
                    btnVessel.Enabled = False
                End If

                If userAccess.BillTo <> Nothing Then
                    cboBillTo.Enabled = True
                Else
                    cboBillTo.Enabled = False
                End If
                txtRF.Enabled = True
            End If

            '==========================================================================================
            '================================== END of Access Level ===================================
            '==========================================================================================

            If Trim(DivGroup) <> Nothing Then

                '    CHECK_RS()

                '    SQL_QUERY = "Select * from TAIS_SERVER..Divisions where ltrim(Name) = '" & Trim(DivGroup) & "'"
                '    RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                '    With RS

                '        If Not RS.EOF Then

                '            If String.IsNullOrEmpty(Trim(RS.Fields("Division").Value).ToString()) = False Then
                '                txtDivNo.Text = Trim(RS.Fields("Division").Value).ToString()
                '                DivNumberPer = Trim(RS.Fields("Division").Value).ToString()
                '                txtDiv.Text = Trim("RM*DIV/" & Trim(RS.Fields("Division").Value).ToString())
                '            End If

                '        End If
                '    End With

                '    RS.Close()

                Dim division = taisDB.Divisions.FirstOrDefault(Function(n) n.Name = Trim(DivGroup))

                If Not division Is Nothing Then
                    txtDivNo.Text = division.Division
                    DivNumberPer = division.Division
                    txtDiv.Text = Trim("RM*DIV/" & division.Division)
                End If
            End If


            lstClient.Enabled = True


        Else
                MsgBox("Agent Sign-In ID not found!..", , "Log-In Failed!")
                    txtAgentId.Text = ""
                    txtAgentId.Focus()

                End If


            cboDiv.Enabled = True

        'RS1.Close()


    End Sub



    '====Send PDN entry to ASP for Vessel Name
    Private Sub btnVessel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnVessel.Click

        If Trim(cboVessel.Text) = Nothing Then
            MsgBox("Please Input Vessel or Traveller's Name..", MsgBoxStyle.Information + vbOKOnly, ":::TAIS:::")
            cboVessel.Focus()
            Me.Cursor = Cursors.Default
        Else
            objResponse = objSession.Send(Trim("PDN/" + Trim(cboVessel.Text)))
            strErrorCheck = objResponse.GetLineFromBuffer(2)
            strErrorCheckNew = objResponse.GetLineFromBuffer(1)
            strStatus = strErrorCheck.Split(" ")
            strStatusNew = strErrorCheckNew.Split(" ")
            Call ErrorCheck()

        End If

        txtRF.Enabled = True

    End Sub

    '                              ===================Traveller Profile=============================

    '=====Select the Line No for Traveller's Name

    Private Sub ListPax_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListPax.SelectedIndexChanged


        Dim I_Pax As String = ListPax.SelectedItem.ToString()
        Dim W_Split As String() = I_Pax.Split(" ")

        If Trim(W_Split(0).ToString()) = "" Or Trim(W_Split(0).ToString()) = Nothing Then
            txtPaxNo.Text = (Trim(W_Split(1).ToString()))
        End If

        If (Trim(W_Split(1).ToString()) = "" Or Trim(W_Split(1).ToString()) = Nothing) And (Trim(W_Split(0).ToString()) = "" Or Trim(W_Split(0).ToString()) = Nothing) Then
            txtPaxNo.Text = (Trim(W_Split(2).ToString()))
        End If

        If Trim(W_Split(0).ToString()) <> "" Then
            txtPaxNo.Text = (Trim(W_Split(0).ToString()))
        End If

    End Sub



    Private Sub txtPaxNo_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtPaxNo.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

        End

    End Sub



    Private Sub btnPax_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPax.Click

        If Trim(txtClientNo.Text) <> Nothing Then


            Me.Cursor = Cursors.WaitCursor

            If IsNumeric(Trim(txtPaxNo.Text)) = True Then

                objResponse = objSession.Send("PD" + txtPaxNo.Text)
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                RichTextBox2.Text = objResponse.Text

                strStatus = strErrorCheck.Split(" ")

                If Trim(UCase(strStatus(0).ToString)) = "ELEMENT" Then
                    MsgBox("Element does not exist..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                    txtLineNo.Text = ""
                    txtLineNo.Focus()
                ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
                    MsgBox("Invalid input..Please check your entry..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                    txtLineNo.Text = ""
                    txtLineNo.Focus()
                ElseIf Trim(UCase(strStatus(0).ToString)) = "NO" Then
                    MsgBox("No Profile Found....", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                    txtLineNo.Text = ""
                    txtLineNo.Focus()
                ElseIf Trim(UCase(strStatus(0).ToString)) = "REQUESTED" Then
                    MsgBox("Requested Display Not Scrollable...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                ElseIf Trim(UCase(strStatus(0).ToString)) = "TRANSACTION" Then
                    MsgBox("Transaction Code Not Supported...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
                    MsgBox("Check Transaction Code...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                Else

                    '========BL Department=====
                    'If Trim(txtAccess.Text) = "1" Then

                    Dim i As Integer
                    Dim x As Integer

                    x = RichTextBox2.Lines.Length - 1

                    For i = 0 To x - 2

                        COD1 = Trim((RichTextBox2.Lines(i)).IndexOf("COD1*"))
                        COD2 = Trim((RichTextBox2.Lines(i)).IndexOf("COD2*"))
                        COD3 = Trim((RichTextBox2.Lines(i)).IndexOf("COD3*"))
                        COD4 = Trim((RichTextBox2.Lines(i)).IndexOf("COD4*"))
                        COD5 = Trim((RichTextBox2.Lines(i)).IndexOf("COD5*"))
                        COD6 = Trim((RichTextBox2.Lines(i)).IndexOf("COD6*"))
                        COD7 = Trim((RichTextBox2.Lines(i)).IndexOf("COD7*"))
                        COD8 = Trim((RichTextBox2.Lines(i)).IndexOf("COD8*"))
                        COD9 = Trim((RichTextBox2.Lines(i)).IndexOf("COD9*"))
                        COD10 = Trim((RichTextBox2.Lines(i)).IndexOf("COD10*"))
                        COD11 = Trim((RichTextBox2.Lines(i)).IndexOf("COD11*"))
                        COD12 = Trim((RichTextBox2.Lines(i)).IndexOf("COD12*"))
                        COD13 = Trim((RichTextBox2.Lines(i)).IndexOf("COD13*"))
                        COD14 = Trim((RichTextBox2.Lines(i)).IndexOf("COD14*"))
                        COD15 = Trim((RichTextBox2.Lines(i)).IndexOf("COD15*"))
                        COD16 = Trim((RichTextBox2.Lines(i)).IndexOf("COD16*"))
                        COD17 = Trim((RichTextBox2.Lines(i)).IndexOf("COD17*"))
                        COD18 = Trim((RichTextBox2.Lines(i)).IndexOf("COD18*"))
                        COD19 = Trim((RichTextBox2.Lines(i)).IndexOf("COD19*"))
                        COD20 = Trim((RichTextBox2.Lines(i)).IndexOf("COD20*"))
                        COD21 = Trim((RichTextBox2.Lines(i)).IndexOf("TOEG"))

                        If COD1 > 0 Then
                            Dim C1 As Integer
                            C1 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD1 = (Mid(RichTextBox2.Lines(i), C1 + 2))
                            COD = COD + "COD1"
                        End If

                        If COD2 > 0 Then
                            Dim C2 As Integer
                            C2 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD2 = (Mid(RichTextBox2.Lines(i), C2 + 2))
                            COD = COD + "COD2"
                        End If

                        If COD3 > 0 Then
                            Dim C3 As Integer
                            C3 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD3 = (Mid(RichTextBox2.Lines(i), C3 + 2))
                            COD = COD + "COD3"
                        End If

                        If COD4 > 0 Then
                            Dim C4 As Integer
                            C4 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD4 = (Mid(RichTextBox2.Lines(i), C4 + 2))
                            COD = COD + "COD4"

                        End If

                        If COD5 > 0 Then
                            Dim C5 As Integer
                            C5 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD5 = (Mid(RichTextBox2.Lines(i), C5 + 2))
                            COD = COD + "COD5"
                        End If


                        If COD6 > 0 Then
                            Dim C6 As Integer
                            C6 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD6 = (Mid(RichTextBox2.Lines(i), C6 + 2))
                            COD = COD + "COD6"
                        End If


                        If COD7 > 0 Then
                            Dim C7 As Integer
                            C7 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD7 = (Mid(RichTextBox2.Lines(i), C7 + 2))
                            COD = COD + "COD7"
                        End If

                        If COD8 > 0 Then
                            Dim C8 As Integer
                            C8 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD8 = (Mid(RichTextBox2.Lines(i), C8 + 2))
                            COD = COD + "COD8"
                        End If

                        If COD9 > 0 Then
                            Dim C9 As Integer
                            C9 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD9 = (Mid(RichTextBox2.Lines(i), C9 + 2))
                            COD = COD + "COD9"
                        End If

                        If COD10 > 0 Then
                            Dim C10 As Integer
                            C10 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD10 = (Mid(RichTextBox2.Lines(i), C10 + 2))
                            COD = COD + "COD10"
                        End If


                        If COD11 > 0 Then
                            Dim C11 As Integer
                            C11 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD11 = (Mid(RichTextBox2.Lines(i), C11 + 2))
                            COD = COD + "COD11"
                        End If

                        If COD12 > 0 Then
                            Dim C12 As Integer
                            C12 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD12 = (Mid(RichTextBox2.Lines(i), C12 + 2))
                            COD = COD + "COD12"
                        End If


                        If COD13 > 0 Then
                            Dim C13 As Integer
                            C13 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD13 = (Mid(RichTextBox2.Lines(i), C13 + 2))
                            COD = COD + "COD13"
                        End If

                        If COD14 > 0 Then
                            Dim C14 As Integer
                            C14 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD14 = (Mid(RichTextBox2.Lines(i), C14 + 2))
                            COD = COD + "COD14"
                        End If

                        If COD15 > 0 Then
                            Dim C15 As Integer
                            C15 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD15 = (Mid(RichTextBox2.Lines(i), C15 + 2))
                            COD = COD + "COD15"
                        End If

                        If COD16 > 0 Then
                            Dim C16 As Integer
                            C16 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD16 = (Mid(RichTextBox2.Lines(i), C16 + 2))
                            COD = COD + "COD16"
                        End If

                        If COD17 > 0 Then
                            Dim C17 As Integer
                            C17 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD17 = (Mid(RichTextBox2.Lines(i), C17 + 2))
                            COD = COD + "COD17"
                        End If


                        If COD18 > 0 Then
                            Dim C18 As Integer
                            C18 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD18 = (Mid(RichTextBox2.Lines(i), C18 + 2))
                            COD = COD + "COD18"
                        End If

                        If COD19 > 0 Then
                            Dim C19 As Integer
                            C19 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD19 = (Mid(RichTextBox2.Lines(i), C19 + 2))
                            COD = COD + "COD19"
                        End If

                        If COD20 > 0 Then
                            Dim C20 As Integer
                            C20 = RichTextBox2.Lines(i).LastIndexOf("/")
                            strCOD20 = (Mid(RichTextBox2.Lines(i), C20 + 2))
                            COD = COD + "COD20"
                        End If



                        If COD21 > 0 Then
                            Dim C21 As Integer
                            C21 = RichTextBox2.Lines(i).LastIndexOf("TOEG-")
                            strCOD21 = (Mid(RichTextBox2.Lines(i), C21 + 6))
                            TxtTravEmail.Text = strCOD21
                            TOEGCheck = 1
                        ElseIf COD21 < 0 Then
                            TOEGCheck = 0
                        End If



                        If i = x - 2 And RichTextBox2.Lines(i) = "END OF DISPLAY" Then

                            'Call TOEG_Trav()
                            objResponse = objSession.Send("PT*")
                            strErrorCheck = objResponse.GetLineFromBuffer(1)
                            strStatus = strErrorCheck.Split(" ")

                            If Trim(UCase(strStatus(0).ToString)) = "INVALID/NOT" Then
                                objResponse = objSession.Send("RT")
                                Me.Cursor = Cursors.Default
                            End If

                        ElseIf i = x - 2 And RichTextBox2.Lines(i) <> "END OF DISPLAY" Then
                            objResponse = objSession.Send("MD")
                            RichTextBox2.Text = objResponse.Text
                            x = RichTextBox2.Lines.Length - 1
                            i = 0
                        End If

                    Next

                    Dim fAccomodatkonReasonCD = dbMIS.F_AccomodationReasonCD.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                    If Not fAccomodatkonReasonCD Is Nothing Then
                        If (Trim(fAccomodatkonReasonCD.Required) = "Mandatory" Or Trim(fAccomodatkonReasonCD.Required) = "Required") Then
                            txtAirNoReasonCD.BackColor = Color.Yellow
                        End If

                        Select Case fAccomodatkonReasonCD.CODs
                            Case "COD1"
                                txtAirNoReasonCD.Text = strCOD1
                            Case "COD2"
                                txtAirNoReasonCD.Text = strCOD2
                            Case "COD3"
                                txtAirNoReasonCD.Text = strCOD3
                            Case "COD4"
                                txtAirNoReasonCD.Text = strCOD4
                            Case "COD4"
                                txtAirNoReasonCD.Text = strCOD4
                            Case "COD5"
                                txtAirNoReasonCD.Text = strCOD5
                            Case "COD6"
                                txtAirNoReasonCD.Text = strCOD6
                            Case "COD7"
                                txtAirNoReasonCD.Text = strCOD7
                            Case "COD8"
                                txtAirNoReasonCD.Text = strCOD8
                            Case "COD9"
                                txtAirNoReasonCD.Text = strCOD9
                            Case "COD10"
                                txtAirNoReasonCD.Text = strCOD10
                            Case "COD11"
                                txtAirNoReasonCD.Text = strCOD11
                            Case "COD12"
                                txtAirNoReasonCD.Text = strCOD12
                            Case "COD13"
                                txtAirNoReasonCD.Text = strCOD13
                            Case "COD14"
                                txtAirNoReasonCD.Text = strCOD14
                            Case "COD15"
                                txtAirNoReasonCD.Text = strCOD15
                        End Select

                        Dim fApprover = dbMIS.F_Approver.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fApprover Is Nothing Then
                            If Trim(fApprover.Required) = "Mandatory" Or Trim(fApprover.Required) = "Required" Then
                                txtApprover.BackColor = Color.Yellow
                            End If

                            Select Case fApprover.CODs
                                Case "COD1"
                                    txtApprover.Text = strCOD1
                                Case "COD2"
                                    txtApprover.Text = strCOD2
                                Case "COD3"
                                    txtApprover.Text = strCOD3
                                Case "COD4"
                                    txtApprover.Text = strCOD4
                                Case "COD5"
                                    txtApprover.Text = strCOD5
                                Case "COD6"
                                    txtApprover.Text = strCOD6
                                Case "COD7"
                                    txtApprover.Text = strCOD7
                                Case "COD8"
                                    txtApprover.Text = strCOD8
                                Case "COD9"
                                    txtApprover.Text = strCOD9
                                Case "COD10"
                                    txtApprover.Text = strCOD10
                                Case "COD11"
                                    txtApprover.Text = strCOD11
                                Case "COD12"
                                    txtApprover.Text = strCOD12
                                Case "COD13"
                                    txtApprover.Text = strCOD13
                                Case "COD14"
                                    txtApprover.Text = strCOD14
                                Case "COD15"
                                    txtApprover.Text = strCOD15

                            End Select
                        End If

                        Dim fApprovalCode = dbMIS.F_ApprovalCode.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fApprovalCode Is Nothing Then
                            If Trim(fApprovalCode.Required) = "Mandatory" Or Trim(fApprovalCode.Required) = "Required" Then
                                txtApprover.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fApprovalCode.CODS)
                                Case "COD1"
                                    txtApproverCode.Text = strCOD1
                                Case "COD2"
                                    txtApproverCode.Text = strCOD2
                                Case "COD3"
                                    txtApproverCode.Text = strCOD3
                                Case "COD4"
                                    txtApproverCode.Text = strCOD4
                                Case "COD5"
                                    txtApproverCode.Text = strCOD5
                                Case "COD6"
                                    txtApproverCode.Text = strCOD6
                                Case "COD7"
                                    txtApproverCode.Text = strCOD7
                                Case "COD8"
                                    txtApproverCode.Text = strCOD8
                                Case "COD9"
                                    txtApproverCode.Text = strCOD9
                                Case "COD10"
                                    txtApproverCode.Text = strCOD10
                                Case "COD11"
                                    txtApproverCode.Text = strCOD11
                                Case "COD12"
                                    txtApproverCode.Text = strCOD12
                                Case "COD13"
                                    txtApproverCode.Text = strCOD13
                                Case "COD14"
                                    txtApproverCode.Text = strCOD14
                                Case "COD15"
                                    txtApproverCode.Text = strCOD15
                            End Select
                        End If


                        Dim fCostCenterCode = dbMIS.F_CostCenterCode.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fCostCenterCode Is Nothing Then

                            If Trim(fCostCenterCode.Required) = "Mandatory" Or Trim(fCostCenterCode.Required) = "Required" Then
                                txtCostCenterCode.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fCostCenterCode.CODs)
                                Case "COD1"
                                    txtCostCenterCode.Text = strCOD1
                                Case "COD2"
                                    txtCostCenterCode.Text = strCOD2
                                Case "COD3"
                                    txtCostCenterCode.Text = strCOD3
                                Case "COD4"
                                    txtCostCenterCode.Text = strCOD4
                                Case "COD5"
                                    txtCostCenterCode.Text = strCOD5
                                Case "COD6"
                                    txtCostCenterCode.Text = strCOD6
                                Case "COD7"
                                    txtCostCenterCode.Text = strCOD7
                                Case "COD8"
                                    txtCostCenterCode.Text = strCOD8
                                Case "COD9"
                                    txtCostCenterCode.Text = strCOD9
                                Case "COD10"
                                    txtCostCenterCode.Text = strCOD10
                                Case "COD11"
                                    txtCostCenterCode.Text = strCOD11
                                Case "COD12"
                                    txtCostCenterCode.Text = strCOD12
                                Case "COD13"
                                    txtCostCenterCode.Text = strCOD13
                                Case "COD14"
                                    txtCostCenterCode.Text = strCOD14
                                Case "COD15"
                                    txtCostCenterCode.Text = strCOD15
                            End Select
                        End If

                        Dim fDepartmentNo = dbMIS.F_DepartmentNo.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fDepartmentNo Is Nothing Then
                            If Trim(fDepartmentNo.Required) = "Mandatory" Or Trim(fDepartmentNo.Required) = "Required" Then
                                txtDeptNo.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fDepartmentNo.CODs)
                                Case "COD1"
                                    txtDeptNo.Text = strCOD1
                                Case "COD2"
                                    txtDeptNo.Text = strCOD2
                                Case "COD3"
                                    txtDeptNo.Text = strCOD3
                                Case "COD4"
                                    txtDeptNo.Text = strCOD4
                                Case "COD5"
                                    txtDeptNo.Text = strCOD5
                                Case "COD6"
                                    txtDeptNo.Text = strCOD6
                                Case "COD7"
                                    txtDeptNo.Text = strCOD7
                                Case "COD8"
                                    txtDeptNo.Text = strCOD8
                                Case "COD9"
                                    txtDeptNo.Text = strCOD9
                                Case "COD10"
                                    txtDeptNo.Text = strCOD10
                                Case "COD11"
                                    txtDeptNo.Text = strCOD11
                                Case "COD12"
                                    txtDeptNo.Text = strCOD12
                                Case "COD13"
                                    txtDeptNo.Text = strCOD13
                                Case "COD14"
                                    txtDeptNo.Text = strCOD14
                                Case "COD15"
                                    txtDeptNo.Text = strCOD15
                            End Select
                        End If

                        Dim fEmployeeNo = dbMIS.F_EmployeeNo.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fEmployeeNo Is Nothing Then
                            If Trim(fEmployeeNo.Required) = "Mandatory" Or Trim(fEmployeeNo.Required) = "Required" Then
                                txtEmployee.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fEmployeeNo.CODs)
                                Case "COD1"
                                    txtEmployee.Text = strCOD1
                                Case "COD2"
                                    txtEmployee.Text = strCOD2
                                Case "COD3"
                                    txtEmployee.Text = strCOD3
                                Case "COD4"
                                    txtEmployee.Text = strCOD4
                                Case "COD5"
                                    txtEmployee.Text = strCOD5
                                Case "COD6"
                                    txtEmployee.Text = strCOD6
                                Case "COD7"
                                    txtEmployee.Text = strCOD7
                                Case "COD8"
                                    txtEmployee.Text = strCOD8
                                Case "COD9"
                                    txtEmployee.Text = strCOD9
                                Case "COD10"
                                    txtEmployee.Text = strCOD10
                                Case "COD11"
                                    txtEmployee.Text = strCOD11
                                Case "COD12"
                                    txtEmployee.Text = strCOD12
                                Case "COD13"
                                    txtEmployee.Text = strCOD13
                                Case "COD14"
                                    txtEmployee.Text = strCOD14
                                Case "COD15"
                                    txtEmployee.Text = strCOD15
                            End Select
                        End If

                        Dim fMgrSuperior = dbMIS.F_MgrSuperior.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fMgrSuperior Is Nothing Then
                            If Trim(fMgrSuperior.CODs) Then
                                txtMgrSuperior.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fMgrSuperior.CODs)
                                Case "COD1"
                                    txtMgrSuperior.Text = strCOD1
                                Case "COD2"
                                    txtMgrSuperior.Text = strCOD2
                                Case "COD3"
                                    txtMgrSuperior.Text = strCOD3
                                Case "COD4"
                                    txtMgrSuperior.Text = strCOD4
                                Case "COD5"
                                    txtMgrSuperior.Text = strCOD5
                                Case "COD6"
                                    txtMgrSuperior.Text = strCOD6
                                Case "COD7"
                                    txtMgrSuperior.Text = strCOD7
                                Case "COD8"
                                    txtMgrSuperior.Text = strCOD8
                                Case "COD9"
                                    txtMgrSuperior.Text = strCOD9
                                Case "COD10"
                                    txtMgrSuperior.Text = strCOD10
                                Case "COD11"
                                    txtMgrSuperior.Text = strCOD11
                                Case "COD12"
                                    txtMgrSuperior.Text = strCOD12
                                Case "COD13"
                                    txtMgrSuperior.Text = strCOD13
                                Case "COD14"
                                    txtMgrSuperior.Text = strCOD14
                                Case "COD15"
                                    txtMgrSuperior.Text = strCOD15
                            End Select
                        End If


                        Dim fOrderReference = dbMIS.F_OrderReference.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fOrderReference Is Nothing Then
                            If Trim(fOrderReference.Required) = "Mandatory" Or Trim(fOrderReference.Required) = "Required" Then
                                txtOrderRef.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fOrderReference.CODs)
                                Case "COD1"
                                    txtOrderRef.Text = strCOD1
                                Case "COD2"
                                    txtOrderRef.Text = strCOD2
                                Case "COD3"
                                    txtOrderRef.Text = strCOD3
                                Case "COD4"
                                    txtOrderRef.Text = strCOD4
                                Case "COD5"
                                    txtOrderRef.Text = strCOD5
                                Case "COD6"
                                    txtOrderRef.Text = strCOD6
                                Case "COD7"
                                    txtOrderRef.Text = strCOD7
                                Case "COD8"
                                    txtOrderRef.Text = strCOD8
                                Case "COD9"
                                    txtOrderRef.Text = strCOD9
                                Case "COD10"
                                    txtOrderRef.Text = strCOD10
                                Case "COD11"
                                    txtOrderRef.Text = strCOD11
                                Case "COD12"
                                    txtOrderRef.Text = strCOD12
                                Case "COD13"
                                    txtOrderRef.Text = strCOD13
                                Case "COD14"
                                    txtOrderRef.Text = strCOD14
                                Case "COD15"
                                    txtOrderRef.Text = strCOD15
                            End Select
                        End If


                        Dim fProjectNo = dbMIS.F_ProjectNumber.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fProjectNo Is Nothing Then
                            If Trim(fProjectNo.Required) = "Mandatory" Or Trim(fProjectNo.Required) = "Required" Then
                                txtProjectNo.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fProjectNo.CODs)
                                Case "COD1"
                                    txtProjectNo.Text = strCOD1
                                Case "COD2"
                                    txtProjectNo.Text = strCOD2
                                Case "COD3"
                                    txtProjectNo.Text = strCOD3
                                Case "COD4"
                                    txtProjectNo.Text = strCOD4
                                Case "COD5"
                                    txtProjectNo.Text = strCOD5
                                Case "COD6"
                                    txtProjectNo.Text = strCOD6
                                Case "COD7"
                                    txtProjectNo.Text = strCOD7
                                Case "COD8"
                                    txtProjectNo.Text = strCOD8
                                Case "COD9"
                                    txtProjectNo.Text = strCOD9
                                Case "COD10"
                                    txtProjectNo.Text = strCOD10
                                Case "COD11"
                                    txtProjectNo.Text = strCOD11
                                Case "COD12"
                                    txtProjectNo.Text = strCOD12
                                Case "COD13"
                                    txtProjectNo.Text = strCOD13
                                Case "COD14"
                                    txtProjectNo.Text = strCOD14
                                Case "COD15"
                                    txtProjectNo.Text = strCOD15
                            End Select
                        End If


                        Dim fReasonTrip = dbMIS.F_ReasonOfTrip.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fReasonTrip Is Nothing Then
                            If Trim(fReasonTrip.Required) = "Mandatory" Or Trim(fReasonTrip.Required) = "Required" Then
                                txtReasonofTrip.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fReasonTrip.CODs)
                                Case "COD1"
                                    txtReasonofTrip.Text = strCOD1
                                Case "COD2"
                                    txtReasonofTrip.Text = strCOD2
                                Case "COD3"
                                    txtReasonofTrip.Text = strCOD3
                                Case "COD4"
                                    txtReasonofTrip.Text = strCOD4
                                Case "COD5"
                                    txtReasonofTrip.Text = strCOD5
                                Case "COD6"
                                    txtReasonofTrip.Text = strCOD6
                                Case "COD7"
                                    txtReasonofTrip.Text = strCOD7
                                Case "COD8"
                                    txtReasonofTrip.Text = strCOD8
                                Case "COD9"
                                    txtReasonofTrip.Text = strCOD9
                                Case "COD10"
                                    txtReasonofTrip.Text = strCOD10
                                Case "COD11"
                                    txtReasonofTrip.Text = strCOD11
                                Case "COD12"
                                    txtReasonofTrip.Text = strCOD12
                                Case "COD13"
                                    txtReasonofTrip.Text = strCOD13
                                Case "COD14"
                                    txtReasonofTrip.Text = strCOD14
                                Case "COD15"
                                    txtReasonofTrip.Text = strCOD15
                            End Select
                        End If

                        Dim fTravellerStatus = dbMIS.F_TravellerStatus.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fTravellerStatus Is Nothing Then
                            If Trim(fTravellerStatus.Required) = "Mandatory" Or Trim(fTravellerStatus.Required) = "Required" Then
                                txtTravellerStat.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fTravellerStatus.CODs)
                                Case "COD1"
                                    txtTravellerStat.Text = strCOD1
                                Case "COD2"
                                    txtTravellerStat.Text = strCOD2
                                Case "COD3"
                                    txtTravellerStat.Text = strCOD3
                                Case "COD4"
                                    txtTravellerStat.Text = strCOD4
                                Case "COD5"
                                    txtTravellerStat.Text = strCOD5
                                Case "COD6"
                                    txtTravellerStat.Text = strCOD6
                                Case "COD7"
                                    txtTravellerStat.Text = strCOD7
                                Case "COD8"
                                    txtTravellerStat.Text = strCOD8
                                Case "COD9"
                                    txtTravellerStat.Text = strCOD9
                                Case "COD10"
                                    txtTravellerStat.Text = strCOD10
                                Case "COD11"
                                    txtTravellerStat.Text = strCOD11
                                Case "COD12"
                                    txtTravellerStat.Text = strCOD12
                                Case "COD13"
                                    txtTravellerStat.Text = strCOD13
                                Case "COD14"
                                    txtTravellerStat.Text = strCOD14
                                Case "COD15"
                                    txtTravellerStat.Text = strCOD15
                            End Select
                        End If


                        Dim fClientData1 = dbMIS.F_ClientData1.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData1 Is Nothing Then
                            If Trim(fClientData1.Required) = "Mandatory" Or Trim(fClientData1.Required) = "Required" Then
                                txtCSData1.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData1.CODs)
                                Case "COD1"
                                    txtCSData1.Text = strCOD1
                                Case "COD2"
                                    txtCSData1.Text = strCOD2
                                Case "COD3"
                                    txtCSData1.Text = strCOD3
                                Case "COD4"
                                    txtCSData1.Text = strCOD4
                                Case "COD5"
                                    txtCSData1.Text = strCOD5
                                Case "COD6"
                                    txtCSData1.Text = strCOD6
                                Case "COD7"
                                    txtCSData1.Text = strCOD7
                                Case "COD8"
                                    txtCSData1.Text = strCOD8
                                Case "COD9"
                                    txtCSData1.Text = strCOD9
                                Case "COD10"
                                    txtCSData1.Text = strCOD10
                                Case "COD11"
                                    txtCSData1.Text = strCOD11
                                Case "COD12"
                                    txtCSData1.Text = strCOD12
                                Case "COD13"
                                    txtCSData1.Text = strCOD13
                                Case "COD14"
                                    txtCSData1.Text = strCOD14
                                Case "COD15"
                                    txtCSData1.Text = strCOD15
                            End Select
                        End If

                        Dim fClientData2 = dbMIS.F_ClientData2.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData2 Is Nothing Then
                            If Trim(fClientData2.Required) = "Mandatory" Or Trim(fClientData2.Required) = "Required" Then
                                txtCSData2.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData2.CODs)
                                Case "COD1"
                                    txtCSData2.Text = strCOD1
                                Case "COD2"
                                    txtCSData2.Text = strCOD2
                                Case "COD3"
                                    txtCSData2.Text = strCOD3
                                Case "COD4"
                                    txtCSData2.Text = strCOD4
                                Case "COD5"
                                    txtCSData2.Text = strCOD5
                                Case "COD6"
                                    txtCSData2.Text = strCOD6
                                Case "COD7"
                                    txtCSData2.Text = strCOD7
                                Case "COD8"
                                    txtCSData2.Text = strCOD8
                                Case "COD9"
                                    txtCSData2.Text = strCOD9
                                Case "COD10"
                                    txtCSData2.Text = strCOD10
                                Case "COD11"
                                    txtCSData2.Text = strCOD11
                                Case "COD12"
                                    txtCSData2.Text = strCOD12
                                Case "COD13"
                                    txtCSData2.Text = strCOD13
                                Case "COD14"
                                    txtCSData2.Text = strCOD14
                                Case "COD15"
                                    txtCSData2.Text = strCOD15
                            End Select
                        End If

                        Dim fClientData3 = dbMIS.F_ClientData3.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData3 Is Nothing Then
                            If Trim(fClientData3.Required) = "Mandatory" Or Trim(fClientData3.Required) = "Required" Then
                                txtCSData3.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData3.CODs)
                                Case "COD1"
                                    txtCSData3.Text = strCOD1
                                Case "COD2"
                                    txtCSData3.Text = strCOD2
                                Case "COD3"
                                    txtCSData3.Text = strCOD3
                                Case "COD4"
                                    txtCSData3.Text = strCOD4
                                Case "COD5"
                                    txtCSData3.Text = strCOD5
                                Case "COD6"
                                    txtCSData3.Text = strCOD6
                                Case "COD7"
                                    txtCSData3.Text = strCOD7
                                Case "COD8"
                                    txtCSData3.Text = strCOD8
                                Case "COD9"
                                    txtCSData3.Text = strCOD9
                                Case "COD10"
                                    txtCSData3.Text = strCOD10
                                Case "COD11"
                                    txtCSData3.Text = strCOD11
                                Case "COD12"
                                    txtCSData3.Text = strCOD12
                                Case "COD13"
                                    txtCSData3.Text = strCOD13
                                Case "COD14"
                                    txtCSData3.Text = strCOD14
                                Case "COD15"
                                    txtCSData3.Text = strCOD15
                            End Select
                        End If

                        Dim fClientData4 = dbMIS.F_ClientData4.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData4 Is Nothing Then
                            If Trim(fClientData4.Required) = "Mandatory" Or Trim(fClientData4.Required) = "Required" Then
                                txtCSData4.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData4.CODs)
                                Case "COD1"
                                    txtCSData4.Text = strCOD1
                                Case "COD2"
                                    txtCSData4.Text = strCOD2
                                Case "COD3"
                                    txtCSData4.Text = strCOD3
                                Case "COD4"
                                    txtCSData4.Text = strCOD4
                                Case "COD5"
                                    txtCSData4.Text = strCOD5
                                Case "COD6"
                                    txtCSData4.Text = strCOD6
                                Case "COD7"
                                    txtCSData4.Text = strCOD7
                                Case "COD8"
                                    txtCSData4.Text = strCOD8
                                Case "COD9"
                                    txtCSData4.Text = strCOD9
                                Case "COD10"
                                    txtCSData4.Text = strCOD10
                                Case "COD11"
                                    txtCSData4.Text = strCOD11
                                Case "COD12"
                                    txtCSData4.Text = strCOD12
                                Case "COD13"
                                    txtCSData4.Text = strCOD13
                                Case "COD14"
                                    txtCSData4.Text = strCOD14
                                Case "COD15"
                                    txtCSData4.Text = strCOD15
                            End Select
                        End If


                        Dim fClientData5 = dbMIS.F_ClientData5.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData5 Is Nothing Then
                            If Trim(fClientData5.Required) = "Mandatory" Or Trim(fClientData5.Required) = "Required" Then
                                txtCSData5.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData5.CODs)
                                Case "COD1"
                                    txtCSData5.Text = strCOD1
                                Case "COD2"
                                    txtCSData5.Text = strCOD2
                                Case "COD3"
                                    txtCSData5.Text = strCOD3
                                Case "COD4"
                                    txtCSData5.Text = strCOD4
                                Case "COD5"
                                    txtCSData5.Text = strCOD5
                                Case "COD6"
                                    txtCSData5.Text = strCOD6
                                Case "COD7"
                                    txtCSData5.Text = strCOD7
                                Case "COD8"
                                    txtCSData5.Text = strCOD8
                                Case "COD9"
                                    txtCSData5.Text = strCOD9
                                Case "COD10"
                                    txtCSData5.Text = strCOD10
                                Case "COD11"
                                    txtCSData5.Text = strCOD11
                                Case "COD12"
                                    txtCSData5.Text = strCOD12
                                Case "COD13"
                                    txtCSData5.Text = strCOD13
                                Case "COD14"
                                    txtCSData5.Text = strCOD14
                                Case "COD15"
                                    txtCSData5.Text = strCOD15
                            End Select
                        End If

                        Dim fClientData6 = dbMIS.F_ClientData6.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData6 Is Nothing Then
                            If Trim(fClientData6.Required) = "Mandatory" Or Trim(fClientData6.Required) = "Required" Then
                                txtCSData6.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData6.CODs)
                                Case "COD1"
                                    txtCSData6.Text = strCOD1
                                Case "COD2"
                                    txtCSData6.Text = strCOD2
                                Case "COD3"
                                    txtCSData6.Text = strCOD3
                                Case "COD4"
                                    txtCSData6.Text = strCOD4
                                Case "COD5"
                                    txtCSData6.Text = strCOD5
                                Case "COD6"
                                    txtCSData6.Text = strCOD6
                                Case "COD7"
                                    txtCSData6.Text = strCOD7
                                Case "COD8"
                                    txtCSData6.Text = strCOD8
                                Case "COD9"
                                    txtCSData6.Text = strCOD9
                                Case "COD10"
                                    txtCSData6.Text = strCOD10
                                Case "COD11"
                                    txtCSData6.Text = strCOD11
                                Case "COD12"
                                    txtCSData6.Text = strCOD12
                                Case "COD13"
                                    txtCSData6.Text = strCOD13
                                Case "COD14"
                                    txtCSData6.Text = strCOD14
                                Case "COD15"
                                    txtCSData6.Text = strCOD15
                            End Select
                        End If

                        Dim fClientData7 = dbMIS.F_ClientData7.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData7 Is Nothing Then
                            If Trim(fClientData7.Required) = "Mandatory" Or Trim(fClientData7.Required) = "Required" Then
                                txtCSData7.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData7.CODs)
                                Case "COD1"
                                    txtCSData7.Text = strCOD1
                                Case "COD2"
                                    txtCSData7.Text = strCOD2
                                Case "COD3"
                                    txtCSData7.Text = strCOD3
                                Case "COD4"
                                    txtCSData7.Text = strCOD4
                                Case "COD5"
                                    txtCSData7.Text = strCOD5
                                Case "COD6"
                                    txtCSData7.Text = strCOD6
                                Case "COD7"
                                    txtCSData7.Text = strCOD7
                                Case "COD8"
                                    txtCSData7.Text = strCOD8
                                Case "COD9"
                                    txtCSData7.Text = strCOD9
                                Case "COD10"
                                    txtCSData7.Text = strCOD10
                                Case "COD11"
                                    txtCSData7.Text = strCOD11
                                Case "COD12"
                                    txtCSData7.Text = strCOD12
                                Case "COD13"
                                    txtCSData7.Text = strCOD13
                                Case "COD14"
                                    txtCSData7.Text = strCOD14
                                Case "COD15"
                                    txtCSData7.Text = strCOD15
                            End Select
                        End If

                        Dim fClientData8 = dbMIS.F_ClientData8.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData8 Is Nothing Then
                            If Trim(fClientData8.Required) = "Mandatory" Or Trim(fClientData8.Required) = "Required" Then
                                txtCSData8.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData8.CODs)
                                Case "COD1"
                                    txtCSData8.Text = strCOD1
                                Case "COD2"
                                    txtCSData8.Text = strCOD2
                                Case "COD3"
                                    txtCSData8.Text = strCOD3
                                Case "COD4"
                                    txtCSData8.Text = strCOD4
                                Case "COD5"
                                    txtCSData8.Text = strCOD5
                                Case "COD6"
                                    txtCSData8.Text = strCOD6
                                Case "COD7"
                                    txtCSData8.Text = strCOD7
                                Case "COD8"
                                    txtCSData8.Text = strCOD8
                                Case "COD9"
                                    txtCSData8.Text = strCOD9
                                Case "COD10"
                                    txtCSData8.Text = strCOD10
                                Case "COD11"
                                    txtCSData8.Text = strCOD11
                                Case "COD12"
                                    txtCSData8.Text = strCOD12
                                Case "COD13"
                                    txtCSData8.Text = strCOD13
                                Case "COD14"
                                    txtCSData8.Text = strCOD14
                                Case "COD15"
                                    txtCSData8.Text = strCOD15
                            End Select
                        End If


                        Dim fClientData12 = dbMIS.F_ClientData12.FirstOrDefault(Function(n) n.GlobalCustNo = Trim(txtGlobalCustNo.Text))

                        If Not fClientData12 Is Nothing Then
                            If Trim(fClientData12.Required) = "Mandatory" Or Trim(fClientData12.Required) = "Required" Then
                                txtCSData12.BackColor = Color.Yellow
                            End If

                            Select Case Trim(fClientData12.CODs)
                                Case "COD1"
                                    txtCSData12.Text = strCOD1
                                Case "COD2"
                                    txtCSData12.Text = strCOD2
                                Case "COD3"
                                    txtCSData12.Text = strCOD3
                                Case "COD4"
                                    txtCSData12.Text = strCOD4
                                Case "COD5"
                                    txtCSData12.Text = strCOD5
                                Case "COD6"
                                    txtCSData12.Text = strCOD6
                                Case "COD7"
                                    txtCSData12.Text = strCOD7
                                Case "COD8"
                                    txtCSData12.Text = strCOD8
                                Case "COD9"
                                    txtCSData12.Text = strCOD9
                                Case "COD10"
                                    txtCSData12.Text = strCOD10
                                Case "COD11"
                                    txtCSData12.Text = strCOD11
                                Case "COD12"
                                    txtCSData12.Text = strCOD12
                                Case "COD13"
                                    txtCSData12.Text = strCOD13
                                Case "COD14"
                                    txtCSData12.Text = strCOD14
                                Case "COD15"
                                    txtCSData12.Text = strCOD15
                            End Select
                        End If



                        Me.Cursor = Cursors.Default


                        MsgBox("Invalid input..Please check your entry..", MsgBoxStyle.OkOnly, " TAIS - Traveller Profile?")
                        Me.Cursor = Cursors.Default
                        txtLineNo.Text = ""
                        txtLineNo.Focus()
                    End If
                End If

            End If

        Else
            MsgBox("Please select Client Name..", MsgBoxStyle.Information + vbOKOnly, ":::TAIS:::")
            cboClient.Focus()
        End If
    End Sub

    '=====Move button from the Traveller's List
    Private Sub ButtonOkPax_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ButtonOkPax.Click

        ListPax.Items.Clear()

        If RdMoveDownPax.Checked <> False Or RdMoveUpPax.Checked <> False Or RdPDMD.Checked <> False Or RdPDMu.Checked <> False Then


            If RdMoveDownPax.Checked = True Then

                ListPax.Items.Clear()
                objResponse = objSession.Send("MD")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    ListPax.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(0, 25))
                Next

            End If

            If RdMoveUpPax.Checked = True Then

                ListPax.Items.Clear()

                objResponse = objSession.Send("MU")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    ListPax.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(0, 25))
                Next

            End If

            If RdPDMD.Checked = True Then

                ListPax.Items.Clear()

                objResponse = objSession.Send("PDMD")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    ListPax.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(0, 25))
                Next
            End If


            If RdPDMu.Checked = True Then

                ListPax.Items.Clear()

                objResponse = objSession.Send("PDMU")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    ListPax.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(0, 25))
                Next

            End If

        Else
            MsgBox("Please choose a parameter from the option box..Thanks!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "::TAIS::")
        End If

    End Sub


    Private Sub lstClient_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lstClient.SelectedIndexChanged

        Dim I_Pax As String = Nothing

        If Trim(lstClient.SelectedItem.ToString()).Count > 0 Then
            I_Pax = Trim(lstClient.SelectedItem.ToString())
        End If



        Dim W_Split As String() = I_Pax.Split(" ")

        If Trim(W_Split(0).ToString()) = "" Or Trim(W_Split(0).ToString()) = Nothing Then

            txtLineNo.Text = (Trim(W_Split(1).ToString()))

            If Trim(txtAccess.Text) = "2" Then

                If VesselName.Checked = True Then
                    Dim xVes As String = Nothing
                    For i = 3 To W_Split.Count - 1
                        If W_Split(i) <> Nothing Then
                            xVes = Trim(xVes + " " + W_Split(i))
                        End If
                    Next
                    txtVessel.Text = Trim("RM*CD/" & Trim(xVes))

                End If
            End If

        End If



        If (Trim(W_Split(1).ToString()) = "" Or Trim(W_Split(1).ToString()) = Nothing) And (Trim(W_Split(0).ToString()) = "" Or Trim(W_Split(0).ToString()) = Nothing) Then
            txtLineNo.Text = (Trim(W_Split(2).ToString()))
        End If


        If Trim(W_Split(0).ToString()) <> "" Then
            txtLineNo.Text = (Trim(W_Split(0).ToString()))

            If Trim(txtAccess.Text) = "2" Then
                If VesselName.Checked = True Then
                    Dim xVes As String = Nothing
                    For i = 2 To W_Split.Count - 1
                        If W_Split(i) <> Nothing Then
                            xVes = Trim(xVes + " " + W_Split(i))
                        End If
                    Next
                    txtVessel.Text = Trim("RM*CD/" & Trim(xVes))
                End If

                If Trim(W_Split.Count) = 2 Then
                    txtVessel.Text = Trim("RM*CD/" & Trim(W_Split(1)))
                End If
            End If

        End If

        ilen = Len(Trim(lstClient.SelectedItem.ToString()))
        temp = lstClient.SelectedItem.ToString()
        tryN = Mid(temp, 3, ilen)


    End Sub


    Private Sub txtLnNo_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtLnNo.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '=====Move Button from Similar Company Name
    Private Sub Rd_BtnOk_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Rd_BtnOk.Click

        lstClient.Items.Clear()

        If rdMoveD.Checked <> False Or rdMoveU.Checked <> False Then

            If rdMoveD.Checked = True Then

                lstClient.Items.Clear()
                objResponse = objSession.Send("MD")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    lstClient.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(1, 25))
                Next

            End If

            If rdMoveU.Checked = True Then

                lstClient.Items.Clear()

                objResponse = objSession.Send("MU")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    lstClient.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(1, 25))
                Next

            End If

        Else
            MsgBox("Please choose a parameter from the option box..Thanks!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "::TAIS::")
        End If



    End Sub



    '===========================================
    ' Send the "PD" command entry to ASP
    '===========================================

    Private Sub btnSend_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSend.Click


        Me.Cursor = Cursors.WaitCursor

        If IsNumeric(Trim(txtLineNo.Text)) = True Then

            objResponse = objSession.Send("PD" + txtLineNo.Text)
            strErrorCheck = objResponse.GetLineFromBuffer(1)
            strStatus = strErrorCheck.Split(" ")

            If Trim(UCase(strStatus(0).ToString)) = "ELEMENT" Then
                MsgBox("Element does not exist..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
            ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
                MsgBox("Invalid input..Please check your entry..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
            ElseIf Trim(UCase(strStatus(0).ToString)) = "NO" Then
                MsgBox("No Profile Found..Please check your entry..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
            Else

                '========BL Department=====
                If Trim(txtAccess.Text) = "1" Or Trim(txtAccess.Text) = "4" Then

                    objResponse = objSession.Send("PT*")
                    strErrorCheck = objResponse.GetLineFromBuffer(1)
                    strStatus = strErrorCheck.Split(" ")

                    If Trim(UCase(strStatus(0).ToString)) = "INVALID/NOT" Then
                        objResponse = objSession.Send("RT")
                        Me.Cursor = Cursors.Default
                    End If

                    If input = 0 Then

                        objResponse = objSession.Send(Trim("PLT//" + Trim(tryN)))
                        strErrorCheck = objResponse.GetLineFromBuffer(2)
                        strErrorSim = objResponse.GetLineFromBuffer(3)
                        strStatus = strErrorCheck.Split(" ")
                        strStatusSim = strErrorSim.Split(" ")

                        If Trim(UCase(strStatus(0).ToString)) = "NO" And Trim(UCase(strStatus(1).ToString)) = "TRAVELLER" Then

                            ListPax.Items.Clear()

                            MsgBox("No Traveller Profile Found!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " :: TAIS ::")
                            objSession.Send("RT")

                            '---Traveller
                            RdMoveUpPax.Enabled = False
                            RdMoveUpPax.Checked = False
                            RdMoveDownPax.Enabled = False
                            RdMoveDownPax.Checked = False
                            RdPDMD.Enabled = False
                            RdPDMD.Checked = False
                            RdPDMu.Enabled = False
                            RdPDMu.Checked = False

                            ButtonOkPax.Enabled = False
                            btnPax.Enabled = False
                            ListPax.Enabled = False

                            '---Similar
                            lstClient.Enabled = True
                            btnSend.Enabled = True
                            rdMoveD.Enabled = True
                            rdMoveD.Checked = False
                            rdMoveU.Enabled = True
                            rdMoveU.Checked = False
                            Rd_BtnOk.Enabled = True


                        Else

                            If Trim(UCase(strStatusSim(0).ToString)) = "SIMILAR" And Trim(UCase(strStatusSim(1).ToString)) = "COMPANY" Then

                                ListPax.Items.Clear()
                                lstClient.Items.Clear()

                                '====List down similar company name
                                For i = 6 To objResponse.NumberOfLines - 1
                                    lstClient.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(2, 26))
                                Next


                                '---Traveller
                                RdMoveUpPax.Enabled = False
                                RdMoveUpPax.Checked = False
                                RdMoveDownPax.Enabled = False
                                RdMoveDownPax.Checked = False
                                RdPDMD.Enabled = False
                                RdPDMD.Checked = False
                                RdPDMu.Enabled = False
                                RdPDMu.Checked = False
                                ButtonOkPax.Enabled = False
                                ' txtPaxNo.Enabled = False
                                btnPax.Enabled = False
                                ListPax.Enabled = False

                                '---Similar
                                lstClient.Enabled = True
                                btnSend.Enabled = True
                                rdMoveD.Enabled = True
                                rdMoveD.Checked = False
                                rdMoveU.Enabled = True
                                rdMoveU.Checked = False
                                Rd_BtnOk.Enabled = True

                            Else 'If 'Trim(UCase(strStatusSim(0).ToString)) = "TRAVELLER" And Trim(UCase(strStatusSim(1).ToString)) = "LIST" Then


                                '===List down the Traveller List
                                For i = 6 To objResponse.NumberOfLines - 1
                                    ListPax.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(2, 25))
                                Next

                                Me.Cursor = Cursors.Default

                                '---Traveller
                                RdMoveUpPax.Enabled = True
                                RdMoveUpPax.Checked = False
                                RdMoveDownPax.Enabled = True
                                RdMoveDownPax.Checked = False
                                RdPDMD.Enabled = True
                                RdPDMD.Checked = False
                                RdPDMu.Enabled = True
                                RdPDMu.Checked = False
                                ButtonOkPax.Enabled = True
                                btnPax.Enabled = True
                                ListPax.Enabled = True

                                '---Similar
                                lstClient.Enabled = False
                                btnSend.Enabled = False
                                rdMoveD.Enabled = False
                                rdMoveD.Checked = False
                                rdMoveU.Enabled = False
                                rdMoveU.Checked = False
                                Rd_BtnOk.Enabled = False

                            End If

                        End If
                    End If
                End If

                '========Marine Department=====
                If Trim(txtAccess.Text) = "2" Then

                    objResponse = objSession.Send("PT*")
                    strErrorCheck = objResponse.GetLineFromBuffer(1)
                    strStatus = strErrorCheck.Split(" ")

                    If Trim(UCase(strStatus(0).ToString)) = "INVALID/NOT" Then
                        objResponse = objSession.Send("RT")
                        Me.Cursor = Cursors.Default
                    End If

                End If

            End If

            Me.Cursor = Cursors.Default

        Else
            MsgBox("Invalid input..Please select an item from the list..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            Me.Cursor = Cursors.Default

        End If

    End Sub

    '============= End Client List =============================  
    '===========================================================


    '==========================================================================================================
    '     End Travcom Entries to ASP Here
    '==========================================================================================================


    '============ Clears all Data ================
    Private Sub btnClearPre_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClearPre.Click

        Call btnClearInit()
        Call FieldMapping()
        Call Init_GlobalStrings()
        Call MISINIT()
        cboClientName.Text = Nothing
        cboClientName.Enabled = True

    End Sub


    '============ Exit Application ===============
    Private Sub btnExit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnExit.Click

        Dim Response As MsgBoxResult

        Response = MsgBox(" Are you sure you want to close this Application? ", MsgBoxStyle.Question + MsgBoxStyle.YesNo, "Close TAIS ? ")

        If Response = MsgBoxResult.Yes Then
            Me.Dispose()
            End
        ElseIf Response = MsgBoxResult.No Then
            Exit Sub
        End If

    End Sub


    '===========================AIR TRANSACTIONS & Non Air Transactions ================================

    '====Get all the product code from Travcom database
    Public Sub load_productCode()

        Dim pc As String = "0"
        Dim pcDisable = "25"

        Dim descriptions As New List(Of String)

        descriptions = (From desc In taisDB.ProductCodes
                        Where desc.ProductCode <> 0 And desc.ProductCode <> 25
                        Order By desc.Description Ascending
                        Select desc.Description).ToList()

        ProductCode.AddRange(descriptions.ToArray)

        cboProductCode.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboProductCode.AutoCompleteCustomSource = ProductCode
        cboProductCode.AutoCompleteMode = AutoCompleteMode.Suggest

        cboProductName_Set.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboProductName_Set.AutoCompleteCustomSource = ProductCode
        cboProductName_Set.AutoCompleteMode = AutoCompleteMode.Suggest


    End Sub


    Public Sub cboProductCode_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboProductCode.KeyDown

        initproduct()

        If e.KeyCode = 13 Then

            PCode = Trim(cboProductCode.SelectedText).Replace("'", " ")

            Dim prodCode = taisDB.ProductCodes.FirstOrDefault(Function(n) n.Description.Replace("", " ") = PCode)

            If Not prodCode Is Nothing Then
                cboProductCode.Text = prodCode.ProductCode

                If Trim(PCode) <> "" Or Trim(PCode) <> Nothing Then
                    Dim nonAirTrans = taisLocal.NonAirTransactions.FirstOrDefault(Function(n) n.ProductCode = Trim(cboProductCode.Text))

                    If Not nonAirTrans Is Nothing Then
                        cboProdTYpe.Enabled = If(Trim(nonAirTrans.SubProduct) = "Enabled", True, False)

                        If Trim(nonAirTrans.VendorAccess) = "Enabled" Then
                            cboVendorCode.Enabled = True
                        Else
                            cboVendorCode.Enabled = False
                            cboVendorCode.Text = nonAirTrans.VendorCode
                        End If

                        If Trim(nonAirTrans.CostAccess) = "Enabled" Then
                            txtComP.Enabled = True
                        Else
                            txtComP.Enabled = False
                            txtComP.Text = Trim(nonAirTrans.Cost)
                        End If

                        If Trim(nonAirTrans.SAAccess) = "Enabled" Then
                            txtSFAmt.Enabled = True
                        Else
                            txtSFAmt.Enabled = False
                            txtSFAmt.Text = Trim(nonAirTrans.SAAmount)
                        End If

                        If Trim(nonAirTrans.CPAccess) = "Enabled" Then
                            txtComP.Enabled = True
                        Else
                            txtComP.Enabled = False
                            txtComP.Text = Trim(nonAirTrans.CP)
                        End If


                        MRdom.Checked = False
                        MRIntl.Checked = False
                        MRReg.Checked = False

                        If Trim(nonAirTrans.travelType) = "Enabled" Then
                            MRdom.Enabled = True
                            MRIntl.Enabled = True
                            MRReg.Enabled = True
                        Else
                            MRdom.Enabled = False
                            MRIntl.Enabled = False
                            MRReg.Enabled = False
                        End If

                        txtRMRefFare.Enabled = If(Trim(nonAirTrans.RefFare) = "Enabled", True, False)
                        txtRMLF.Enabled = If(Trim(nonAirTrans.LowFare) = "Enabled", True, False)
                        txtRMExpCode.Enabled = If(Trim(nonAirTrans.EC) = "Enabled", True, False)

                        txtDatein.Enabled = False
                        txtDateOut.Enabled = False
                        txtDatein.Text = Nothing
                        txtDateOut.Text = Nothing
                        If Trim(nonAirTrans.DateHotel) = "Enabled" Then
                            DTCheckIn.Enabled = True
                            DTCheckOut.Enabled = True
                        Else
                            DTCheckIn.Enabled = False
                            DTCheckOut.Enabled = False
                        End If
                    End If
                End If
            End If

            Call protypeload()
        End If

    End Sub


    Private Sub protypeload()

        cboProdTYpe.Text = ""
        cboProdTYpe.Items.Clear()

        Dim taisLocal = New TAISLocalEntities()

        Dim ProductCodePType As New AutoCompleteStringCollection

        Dim prodSetting = (From prod In taisLocal.ProductSettings
                           Where prod.ProductCategory = Trim(cboProductCode.Text)
                           Order By prod.ProductName
                           Select prod.ProductName).ToList()

        cboProdTYpe.Items.AddRange(prodSetting.ToArray)


    End Sub

    '=====Get all the vendor code from Travcom database
    Public Sub load_VendorCode()

        Dim profile As New List(Of String)

        profile = (From prof In taisDB.Profiles
                   Where prof.ProfileType = 2
                   Order By prof.FullName Ascending
                   Select prof.FullName).ToList()

        VendorCode.AddRange(profile.ToArray)

        cboVendorCode.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboVendorCode.AutoCompleteCustomSource = VendorCode
        cboVendorCode.AutoCompleteMode = AutoCompleteMode.Suggest

        cboSupplierCode.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboSupplierCode.AutoCompleteCustomSource = VendorCode
        cboSupplierCode.AutoCompleteMode = AutoCompleteMode.Suggest

        cboVendorName_Set.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboVendorName_Set.AutoCompleteCustomSource = VendorCode
        cboVendorName_Set.AutoCompleteMode = AutoCompleteMode.Suggest


    End Sub



    Public Sub cboVendorCode_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboVendorCode.KeyDown

        If e.KeyCode = 13 Then

            VCode = Trim(cboVendorCode.SelectedText).Replace("'", " ")

            Dim profileNo = taisDB.Profiles.FirstOrDefault(Function(n) n.ProfileType = 2 And n.FullName = VCode)

            cboVendorCode.Text = profileNo.ProfileNumber

        End If

    End Sub



    '====Load Nestle Booker

    Public Sub load_Booker()

        Dim PN As String = strClientNumber

        CHECK_RS()

        SQL_QUERY = "Select DepartmentName from TAIS_SERVER..Departments where profilenumber ='" & PN & "' "
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            Do While Not RS.EOF
                BookerCode.Add(RS.Fields("DepartmentName").Value).ToString()
                RS.MoveNext()
            Loop

        End With

        RS.Close()

        cboBookerName.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboBookerName.AutoCompleteCustomSource = BookerCode
        cboBookerName.AutoCompleteMode = AutoCompleteMode.Suggest

    End Sub


    Private Sub cboBookername_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboBookerName.KeyDown

        If e.KeyCode = 13 Then

            BCODE = Trim(cboBookerName.SelectedText).Replace("'", " ")

            CHECK_RS()

            SQL_QUERY = "Select departmentcode,departmentname from TAIS_SERVER..departments where replace(departmentname,'''', ' ') = '" & BCODE & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    cboBookerName.Text = (RS.Fields("DepartmentName").Value).ToString
                    RS.MoveNext()
                End If
            End With

            RS.Close()

        End If

    End Sub


    '======Airline List =======
    Private Sub load_AirlineCode()
        Dim airlines As New List(Of String)

        airlines = (From air In taisDB.Airlines
                    Order By air.AirlineName Ascending
                    Select air.AirlineName).ToList()

        ColAir.AddRange(airlines.ToArray)

        cboAirlineCode.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboAirlineCode.AutoCompleteCustomSource = ColAir
        cboAirlineCode.AutoCompleteMode = AutoCompleteMode.Suggest

        cboAlineCode.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboAlineCode.AutoCompleteCustomSource = ColAir
        cboAlineCode.AutoCompleteMode = AutoCompleteMode.Suggest

    End Sub


    Private Sub cboAirlineCode_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboAirlineCode.KeyDown

        If e.KeyCode = 13 Then

            Dim airlineNo = taisDB.Airlines.FirstOrDefault(Function(n) n.AirlineName = Trim(cboAirlineCode.SelectedText))

            If Not airlineNo Is Nothing Then
                cboAirlineCode.Text = airlineNo.AirlineNumber
            End If

        End If

    End Sub


    '======Airline List =======
    Private Sub load_AlineCode()

    End Sub



    Private Sub cboAlineCode_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboAlineCode.KeyDown

        If e.KeyCode = 13 Then

            Dim airlineNo = taisDB.Airlines.FirstOrDefault(Function(n) n.AirlineName = Trim(cboAirlineCode.SelectedText))

            If Not airlineNo Is Nothing Then
                cboAirlineCode.Text = airlineNo.AirlineNumber
            End If


        End If

    End Sub



    Public Sub cboSupplierCode_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboSupplierCode.KeyDown

        If e.KeyCode = 13 Then

            Dim profileNo = taisDB.Profiles.FirstOrDefault(Function(n) n.ProfileType = 2 And n.FullName = Trim(cboSupplierCode.SelectedText))

            If Not profileNo Is Nothing Then
                cboSupplierCode.Text = profileNo.ProfileNumber
            End If

        End If

    End Sub


    '=====Get all the vendor code from Travcom database
    Public Sub load_ticketAgent()

        Dim tktAgents As New List(Of String)

        tktAgents = (From agent In taisDB.Profiles
                     Where agent.ProfileType = 3
                     Order By agent.FullName Ascending
                     Select agent.FullName).ToList()

        TicketAgentCode.AddRange(tktAgents.ToArray)

        cboTicketingAgent.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboTicketingAgent.AutoCompleteCustomSource = TicketAgentCode
        cboTicketingAgent.AutoCompleteMode = AutoCompleteMode.Suggest

    End Sub



    Public Sub cboTicketingAgent_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboTicketingAgent.KeyDown

        If e.KeyCode = 13 Then
            Dim profileNo = taisDB.Profiles.FirstOrDefault(Function(n) n.ProfileType = 3 And n.FullName = Trim(cboTicketingAgent.Text))

            If Not profileNo Is Nothing Then
                cboTicketingAgent.Text = profileNo.ProfileNumber
            End If

        End If

    End Sub




    Private Sub cboCostCurr_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboCostCurr.SelectedIndexChanged

        If cboCostCurr.SelectedIndex = "0" Then
            C_Curr = "PHP"
        Else
            C_Curr = "USD"
        End If

    End Sub


    Private Sub cboCostCurr_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboCostCurr.KeyPress

        Try
            If Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid character value..")
            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '====Check entry for Selling Fare value ( only numeric value is acceptable)
    Private Sub txtSellingFare_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtSellingFare.KeyPress

        txtSFSegment.Text = Nothing
        cboSegment.Text = Nothing
        txtDescRCode.Text = Nothing
        txtRCodeDenied.Text = Nothing
        txtRCodeDenied.BackColor = Color.LightBlue
        txtReasonCode.Text = Nothing
        txtReasonCode.BackColor = Color.LightBlue
        txtLowFare.Text = Nothing
        txtLowFare.BackColor = Color.LightBlue
        txtRefFare.Text = Nothing
        txtRefFare.BackColor = Color.LightBlue
        txtCustSpecLowFare.Text = Nothing
        txtCustSpecLowFare.BackColor = Color.LightBlue
        txtCustSpecHighFare.Text = Nothing
        txtCustSpecHighFare.BackColor = Color.LightBlue
        txtMajorClass.Text = Nothing
        txtMajorClass.BackColor = Color.LightBlue



        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try


    End Sub




    '====Check entry for Publish Fare value ( only numeric value is acceptable)
    Private Sub txtPublishfare_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtPublishFare.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try
    End Sub


    '====Check entry for Customer Spec high Fare value ( only numeric value is acceptable)
    Private Sub txtCustSpecHighFare_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCustSpecHighFare.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try


    End Sub


    '====Check entry for Commission Amount ( only numeric value is acceptable)
    Private Sub txtCommAmt_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCommAmt.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try


    End Sub


    '====Check entry for Commission Amount ( only numeric value is acceptable)
    Private Sub txtComPercentage_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtComPercentage.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub




    '====Check entry for Customer Spec high Fare value ( only numeric value is acceptable)
    Private Sub txtCustSpecLowFare_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCustSpecLowFare.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try


    End Sub


    '===Check entry for Reference Fare value( only numeric value is acceptable)
    Private Sub txtRefFare_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtRefFare.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check entry for lowest fare value ( only numeric value is acceptable)
    Private Sub txtLowFare_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtLowFare.KeyPress

        'txtReasonCode.Text = Nothing
        'txtDescRCode.Text = Nothing
        txtRCodeDenied.Text = Nothing

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check entry for exception code value (only characters value is acceptable)
    Private Sub txtExpCode_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtExpCode.KeyPress

        Try

            If Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid character value..")
            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub

    '===Check entry for Number of pax value (only numeric value is acceptable)
    Private Sub txtNoPax_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtNoOfPax.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check entry for Number of pax value (only numeric value is acceptable)
    Private Sub txtNoOfPax_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtNoOfPax.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub




    '===Check entry for Ticket Number value (only numeric value is acceptable)
    Private Sub txtNoofTkt_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtNoofTkt.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub



    '===Check entry for Segment value (only numeric value is acceptable)
    Private Sub txtSFSegment_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtSFSegment.KeyPress

        txtPublishFare.Text = Nothing
        txtSellingFare.Text = Nothing
        txtDescRCode.Text = Nothing
        txtRCodeDenied.Text = Nothing
        txtRCodeDenied.BackColor = Color.SkyBlue
        txtReasonCode.Text = Nothing
        txtReasonCode.BackColor = Color.SkyBlue
        txtLowFare.Text = Nothing
        txtLowFare.BackColor = Color.SkyBlue
        txtRefFare.Text = Nothing
        txtRefFare.BackColor = Color.SkyBlue
        txtCustSpecLowFare.Text = Nothing
        txtCustSpecLowFare.BackColor = Color.SkyBlue
        txtCustSpecHighFare.Text = Nothing
        txtCustSpecHighFare.BackColor = Color.SkyBlue
        txtMajorClass.Text = Nothing
        txtMajorClass.BackColor = Color.SkyBlue



        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub

    '===Check entry for Segment value (only numeric value is acceptable)
    Private Sub cbosegment_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboSegment.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub
    '===Check entry for Commission Percentage value (only numeric value is acceptable)
    Private Sub txtComP_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtComP.KeyPress
        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check entry for Cost Amount value (only numeric value is acceptable)
    Private Sub txtCostAmt_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCostAmt.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check entry for Selling Amount value (only numeric value is acceptable)
    Private Sub txtSFAmt_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtSFAmt.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check the amount entry for reference fare under product type (only numeric value is acceptable)
    Private Sub txtRMRefFare_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtRMRefFare.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub



    '===Check the amount entry for lowest fare under product type (only numeric value is acceptable)
    Private Sub txtRMLF_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtRMLF.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check entry for exception code value (only characters value is acceptable)
    Private Sub txtRMExpCode_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtRMExpCode.KeyPress

        Try
            If Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid character value..")
            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub

    '===Check entry for currency value (only characters value is acceptable)
    Private Sub cbocurrair_keypress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboCurrAir.KeyPress

        Try
            If Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid character value..")
            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub

    '===Check the line entry number (only numeric value is acceptable)
    Private Sub txtLineNo_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtLineNo.KeyPress

        Try
            If [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 Then
                e.Handled = True
                Throw New Exception("Please enter a valid numeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check the employee entry number (only numeric value is acceptable)
    Private Sub txtEmployee_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtEmployee.KeyPress

        Try
            If Not [Char].IsDigit(e.KeyChar) And Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 And Not AscW(e.KeyChar) = 32 Then
                e.Handled = True
                Throw New Exception("Please enter a valid alphanumeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub



    Private Sub txtAuthorizedNo_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtAuthorizedNo.KeyPress

        Try
            If Not [Char].IsDigit(e.KeyChar) And Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 And Not AscW(e.KeyChar) = 32 Then
                e.Handled = True
                Throw New Exception("Please enter a valid alphanumeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check the TBS number entry (only numeric value is acceptable)
    Private Sub txtTBSNo_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtTBSNo.KeyPress

        Try
            If Not [Char].IsDigit(e.KeyChar) And Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 And Not AscW(e.KeyChar) = 32 Then
                e.Handled = True
                Throw New Exception("Please enter a valid alphanumeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check the CCGL number entry (only alpha numeric value is acceptable)
    Private Sub txtCCGL_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtCCGL.KeyPress

        Try
            If Not [Char].IsDigit(e.KeyChar) And Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 And Not AscW(e.KeyChar) = 32 Then
                e.Handled = True
                Throw New Exception("Please enter a valid alphanumeric value..")
            End If
        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub


    '===Check entry if valid alpha character entry

    Private Sub cboConventionName_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboConventionName.KeyPress

        Try
            If Not [Char].IsDigit(e.KeyChar) And Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 And Not AscW(e.KeyChar) = 32 Then
                e.Handled = True
                Throw New Exception("Please enter a valid alphanumeric value..")
            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        End Try

    End Sub



    '===Check entry if valid alpha character entry

    Private Sub txtConventionPlace_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtConventionPlace.KeyPress

        Try

            If Not [Char].IsDigit(e.KeyChar) And Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 And Not AscW(e.KeyChar) = 32 Then
                e.Handled = True
                Throw New Exception("Please enter a valid alphanumeric value..")
            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        End Try
    End Sub


    '=====Check entry for bookers name if valid
    Private Sub cboBookerName_keypress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cboBookerName.KeyPress

        Try

            If Not [Char].IsDigit(e.KeyChar) And Not [Char].IsLetter(e.KeyChar) And Not AscW(e.KeyChar) = 8 And Not AscW(e.KeyChar) = 32 Then
                e.Handled = True
                Throw New Exception("Please enter a valid alphanumeric value..")
            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        End Try
    End Sub


    Private Sub btnAddTrans_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddTrans.Click

        Call createGridViewHeader()

        If (cboProductCode.Text <> "" Or cboProductCode.Text <> Nothing) And (cboVendorCode.Text <> "" Or cboVendorCode.Text <> Nothing) And (Trim(txtNoPax.Text <> Nothing)) And (Trim(cboCostCurr.Text) <> Nothing) And (Trim(txtCostAmt.Text) <> Nothing Or Trim(txtSFAmt.Text) <> Nothing) Then

            If Trim(cboProductCode.Text) = "17" Then
                MRIntl.Checked = True
            End If

            If MRdom.Checked = False And MRIntl.Checked = False And MRReg.Checked = False Then
                MsgBox("Please flag a segment if Domestic, Regional Or International. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
            Else

                DGW1.Rows.Add()
                ctr = DGW1.Rows.Count - 1

                If txtNoPax.Text <> " " Or txtNoPax.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(0).Value = Trim(txtNoPax.Text)
                End If

                '===Product Number
                If cboProductCode.Text <> " " Or cboProductCode.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(1).Value = Trim(cboProductCode.Text)
                End If

                '===Vendor Code
                If cboVendorCode.Text <> " " Or cboVendorCode.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(2).Value = Trim(cboVendorCode.Text)
                End If

                '===Commission Percentage
                If txtComP.Text <> " " Or txtComP.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(3).Value = Trim(txtComP.Text)
                End If

                '===Currency
                If C_Curr <> " " Or C_Curr <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(4).Value = Trim(C_Curr)
                End If

                '===Cost Amount
                If txtCostAmt.Text <> " " Or txtCostAmt.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(5).Value = Trim(txtCostAmt.Text)
                End If


                '===Selling Fare Amount
                If txtSFAmt.Text <> "" Or txtSFAmt.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(6).Value = Trim(txtSFAmt.Text)
                Else
                    If txtSFAmt.Text = "" Or txtSFAmt.Text = Nothing Then
                        DGW1.Rows.Item(ctr).Cells(6).Value = Trim(txtCostAmt.Text)
                    End If
                End If

                '=========End SF Conditions================


                '===For Hotel Product Only

                If Trim(txtDatein.Text) <> "  " Then
                    DGW1.Rows.Item(ctr).Cells(7).Value = Trim(txtDatein.Text)
                Else
                    DGW1.Rows.Item(ctr).Cells(7).Value = Nothing
                End If

                If Trim(txtDateOut.Text) <> "  " Then
                    DGW1.Rows.Item(ctr).Cells(8).Value = Trim(txtDateOut.Text)
                Else
                    DGW1.Rows.Item(ctr).Cells(8).Value = Nothing
                End If


                If txtRMRefFare.Text <> "" Or txtRMRefFare.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(9).Value = Trim(txtRMRefFare.Text)
                Else
                    DGW1.Rows.Item(ctr).Cells(9).Value = "0"
                End If

                If txtRMLF.Text <> "" Or txtRMLF.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(10).Value = Trim(txtRMLF.Text)
                Else
                    DGW1.Rows.Item(ctr).Cells(10).Value = "0"
                End If

                If txtRMExpCode.Text <> "" Or txtRMExpCode.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(11).Value = Trim(txtRMExpCode.Text)
                Else
                    DGW1.Rows.Item(ctr).Cells(11).Value = Nothing
                End If

                If cboProdTYpe.Text <> "" Or cboProdTYpe.Text <> Nothing Then
                    DGW1.Rows.Item(ctr).Cells(12).Value = Trim(cboProdTYpe.Text)
                Else
                    DGW1.Rows.Item(ctr).Cells(12).Value = ""
                End If

                If MRdom.Checked = True Then
                    DGW1.Rows.Item(ctr).Cells(13).Value = "Non-BSP Domestic"
                End If

                If MRReg.Checked = True Then
                    DGW1.Rows.Item(ctr).Cells(13).Value = "Non-BSP Domestic"
                End If

                If MRIntl.Checked = True Then
                    DGW1.Rows.Item(ctr).Cells(13).Value = "Non-BSP International"
                End If

                Call initBSPAll()
                Call initproduct()


            End If

            checkboxBoxLCC.Checked = False
        Else
            MsgBox("Incomplete details kindly check your entry..Thanks! ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
        End If

    End Sub


    Private Sub createGridViewHeader()

        DGW1.ColumnCount = 14
        DGW1.ColumnHeadersVisible = True

        ' Set the column header style.
        Dim columnHeaderStyle As New DataGridViewCellStyle()

        columnHeaderStyle.BackColor = Color.CadetBlue

        columnHeaderStyle.Font = New Font("Arial", 7, FontStyle.Regular)

        DGW1.ColumnHeadersDefaultCellStyle = columnHeaderStyle
        DGW1.RowTemplate.Height = 15
        DGW1.RowsDefaultCellStyle.Font = New Font("Arial", 7, FontStyle.Regular)

        ' Set the column header names.
        DGW1.Columns(0).Name = "No of PAX"
        DGW1.Columns(0).Width = 70
        DGW1.Columns(1).Name = "Product Code"
        DGW1.Columns(1).Width = 80

        DGW1.Columns(2).Name = "Vendor Code"
        DGW1.Columns(2).Width = 80
        DGW1.Columns(3).Name = "Comm Percentage"
        DGW1.Columns(3).Width = 105
        DGW1.Columns(4).Name = "Currency"
        DGW1.Columns(4).Width = 70
        DGW1.Columns(5).Name = "Cost Amount"
        DGW1.Columns(5).Width = 80
        DGW1.Columns(6).Name = "SF Amount"
        DGW1.Columns(6).Width = 70
        DGW1.Columns(7).Name = "Check-In"
        DGW1.Columns(7).Width = 70
        DGW1.Columns(8).Name = "Check-Out"
        DGW1.Columns(8).Width = 70
        DGW1.Columns(9).Name = "Ref. Fare"
        DGW1.Columns(9).Width = 70
        DGW1.Columns(10).Name = "Low Fare"
        DGW1.Columns(10).Width = 70
        DGW1.Columns(11).Name = "Exp. Code"
        DGW1.Columns(11).Width = 70
        DGW1.Columns(12).Name = "Product Type"
        DGW1.Columns(12).Width = 180
        DGW1.Columns(13).Name = "Flag Segment"
        DGW1.Columns(13).Width = 180


    End Sub


    Private Sub btnDel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDel.Click

        Dim res As MsgBoxResult

        If DGW1.Rows.Count <> 0 Then

            res = MsgBox(" Are you sure you want to delete this product? ", MsgBoxStyle.Question + MsgBoxStyle.YesNo, "::TAIS::")

            If res = MsgBoxResult.Yes Then
                DGW1.Rows.Remove(DGW1.SelectedRows(0))
            Else
                Exit Sub
            End If


        Else
            MsgBox("Nothing to delete ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
        End If

    End Sub


    Private Sub initBSPAll()

        C_Curr = Nothing
        Non_Tkt = Nothing
        TFPCode = Nothing
        TFVCode = Nothing
        TFCPercentage = Nothing
        TFCurr = Nothing
        TFCostAmt = Nothing
        TFSFAmt = Nothing
        DIn = Nothing
        Dout = Nothing
        DTvl = Nothing
        MSRf = Nothing
        MSLf = Nothing
        MSEc = Nothing
        proType = Nothing
        NoPax = Nothing
        TA = Nothing

        txtNoPax.Text = Nothing
        cboProductCode.Text = Nothing
        cboVendorCode.Text = Nothing

        cboCostCurr.Text = Nothing
        txtCostAmt.Text = Nothing
        cboProdTYpe.Text = Nothing
        cboProdTYpe.Items.Clear()

        txtSFAmt.Text = Nothing
        txtSFAmt.ReadOnly = False
        txtSFAmt.Enabled = True

        txtComP.Text = Nothing
        txtComP.ReadOnly = False
        txtComP.Enabled = True

        DTCheckIn.Enabled = False
        DTCheckOut.Enabled = False

        txtDatein.Text = Nothing
        txtDateOut.Text = Nothing

        txtDatein.Enabled = False
        txtDateOut.Enabled = False

        txtRMRefFare.Enabled = False
        txtRMLF.Enabled = False

        txtRMRefFare.Text = Nothing
        txtRMLF.Text = Nothing
        txtRMExpCode.Enabled = False

        MRdom.Checked = False
        MRIntl.Checked = False
        MRReg.Checked = False

        MRdom.Enabled = False
        MRIntl.Enabled = False
        MRReg.Enabled = False

    End Sub



    '==================================================================
    '=================Button to Send all Interface entries to ASP
    '==================================================================
    Private Sub BtnPNRNon_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BtnPNRNon.Click


        validateMISfields()

        sendpnrError = 0
        '=====Pre Booking
        ClientNo = Trim(txtClientNo.Text)
        BAgent = Trim(txtBA.Text)
        VName = Trim(txtVessel.Text)
        ReceiveFrm = Trim(txtRF.Text)
        DivNumber = Trim(txtDiv.Text)
        TicketTL = "TKTL"
        eticket = Trim(txt_eticket.Text)

        '======Air and Non-Air Transactions
        B_SF = Trim(txtSellingFare.Text)
        B_PF = Trim(txtPublishFare.Text)
        B_RF = Trim(txtRefFare.Text)
        B_LF = Trim(txtLowFare.Text)
        B_EC = txtExpCode.Text
        Com_A = Trim(txtCommAmt.Text)
        Com_P = Trim(txtComPercentage.Text)
        custSpecHighFare = Trim(txtCustSpecHighFare.Text)
        custSpecLowFare = Trim(txtCustSpecLowFare.Text)
        NetTicket = Trim(txtNetTicket.Text)
        TripType = Trim(txtTripType.Text)

        If Trim(cboAirlineCode.Text) <> Nothing And Trim(cboSupplierCode.Text) <> Nothing Then
            NonBSP = Trim(cboAirlineCode.Text) & "/PC1/V" & Trim(cboSupplierCode.Text)
        End If


        ConName = cboConventionName.Text
        ConPlace = txtConventionPlace.Text
        ConDate = Trim(txtDateofConvention.Text)
        HotelName = Trim(txtHotelName.Text)

        BookName = cboBookerName.Text
        Autho = txtAuthorizedNo.Text
        TBS = Trim(txtTBSNo.Text)
        EmpNo = Trim(txtEmployee.Text)
        CCGL = Trim(txtCCGL.Text)
        LinNo = Trim(txtLnNo.Text)
        PNRDate = Trim(txtDateSegment.Text)
        PNRNoPax = Trim(txtNoOfPax.Text)
        ccDetailsNew = Trim(txtccDetails.Text)
        TOEG = TxtTravEmail.Text

        MSRefFare = Trim(txtRMRefFare.Text)
        MSLowFare = Trim(txtRMLF.Text)
        MSExpCode = Trim(txtRMExpCode.Text)
        TA = Trim(cboTicketingAgent.Text)

        '=====Check Flag Segment========
        If RdDom.Checked = True Then
            Tkt = "BSP-Domestic"
        ElseIf RdIntl.Checked = True Then
            Tkt = "BSP-International"
        ElseIf RdReg.Checked = True Then
            Tkt = "BSP-Regional"
        End If

        ''=====Check travel Type Segment========
        'If MRdom.Checked = True Then
        '    Non_Tkt = "Non BSP-Domestic"
        'ElseIf MRIntl.Checked = True Then
        '    Non_Tkt = "Non BSP-International"
        'ElseIf MRReg.Checked = True Then
        '    Non_Tkt = "Non BSP-Regional"
        'End If
        '=====Flag Segment=====================


        If chkOffSigner.Checked = True Then
            FlagS = "Off-Signer"
        ElseIf chkOnSigner.Checked = True Then
            FlagS = "On-Signer"
        ElseIf chkOffline.Checked = True Then
            FlagS = "Offline"
        End If


        '=================Starts Here =====================
        '====Load class function to send entry in ASP
        '==================================================


        If RdBtnReIssue.Checked = True Then

            'If (Trim(txtSellingFare.Text) = "" Or Trim(txtSellingFare.Text) = Nothing) And (Trim(RTSF.Text) = Nothing And Trim(RTFares.Text) = Nothing) Then

            '    MsgBox("Selling Fare must not be empty.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
            '    TabControl1.SelectedIndex = 0
            '    txtSellingFare.Focus()
            '    sendpnrError = 1

            'Else
            If (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 0) And (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 13) Then
                MsgBox("Incomplete details for Non-Air Transactions.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 1
                sendpnrError = 1
            Else


                If sendpnrError <> 1 Then

                    'If chkClientNo.Checked = True Then
                    '    If Trim(ClientNo) <> Nothing And iCtr <> 1 Then
                    '        Dim p_Client As ClassPNR
                    '        p_Client = New ClassPNR
                    '        p_Client.SendPNR_CClientNo = ClientNo
                    '    End If
                    'End If

                    'If DivNo.Checked = True Then
                    '    If Trim(DivNumber) <> Nothing Then
                    '        Dim p_DivNO As ClassPNR
                    '        p_DivNO = New ClassPNR
                    '        p_DivNO.SendPNR_CDivNumber = DivNumber
                    '    End If
                    'End If

                    'If BookingAgent.Checked = True Then
                    '    If Trim(BAgent) <> Nothing Then
                    '        Dim p_BookingAgent As ClassPNR
                    '        p_BookingAgent = New ClassPNR
                    '        p_BookingAgent.SendPNR_CBookingAgent = BAgent
                    '    End If
                    'End If

                    'If Trim(TA) <> "" Or Trim(TA) <> Nothing Then
                    '    SendMsg = 1
                    '    Dim TAResult As ClassPNR
                    '    TAResult = New ClassPNR
                    '    TAResult.sendPNR_TA = TA
                    'End If


                    'If VesselName.Checked = True And iCtr <> 1 Then
                    '    If Trim(VName) <> Nothing Then
                    '        Dim p_VesselName As ClassPNR
                    '        p_VesselName = New ClassPNR
                    '        p_VesselName.SendPNR_CVesselName = VName
                    '    End If
                    'End If

                    If IsNumeric(Trim(B_PF)) = True Then
                        Dim pfResult As ClassPNR
                        pfResult = New ClassPNR
                        pfResult.SendPNR_PF = B_PF
                    End If


                    If IsNumeric(Trim(B_SF)) = True Then
                        Dim sfResult As ClassPNR
                        sfResult = New ClassPNR
                        sfResult.SendPNR_SF = B_SF
                    End If

                    If NetFareSegment.Count > 0 Then
                        For i = 0 To NetFareSegment.Count - 1
                            Dim netFareResult As ClassPNR
                            netFareResult = New ClassPNR
                            BF_NF = NetFareSegment(i)
                            netFareResult.SendPNR_BNF = BF_NF
                        Next
                    End If

                    If Segment.Count > 0 Then                      ' Per Segment
                        For i = 0 To Segment.Count - 1
                            Dim bsfResult As ClassPNR
                            bsfResult = New ClassPNR
                            BF_SF = Segment(i)
                            bsfResult.SendPNR_BSF = BF_SF
                        Next
                    End If


                    If SegmentFareCode.Count > 0 Then                      ' Per Segment Fares
                        For i = 0 To SegmentFareCode.Count - 1
                            Dim SgmentFaresResult As ClassPNR
                            SgmentFaresResult = New ClassPNR
                            BF_FTypes = SegmentFareCode(i)
                            SgmentFaresResult.SendPNR_Ftypes = BF_FTypes
                        Next
                    End If


                    If TicketSegment.Count > 0 Then                ' TicketNumber
                        For i = 0 To TicketSegment.Count - 1
                            Dim tckResult As ClassPNR
                            tckResult = New ClassPNR
                            ETCK = TicketSegment(i)
                            tckResult.SendPNR_ETCK = ETCK
                        Next
                    End If

                    If NonBSP <> Nothing Then
                        Dim tckNonBSP As ClassPNR
                        tckNonBSP = New ClassPNR
                        tckNonBSP.SendPNR_NonBSP = NonBSP
                    End If



                    If IsNumeric(Trim(B_RF)) = True Then
                        Dim rfResult As ClassPNR
                        rfResult = New ClassPNR
                        rfResult.SendPNR_RF = B_RF
                    End If


                    If IsNumeric(Trim(B_LF)) = True Then
                        Dim lfResult As ClassPNR
                        lfResult = New ClassPNR
                        lfResult.SendPNR_LF = B_LF
                    End If


                    If Trim(B_EC) <> "" Or Trim(B_EC) <> Nothing Then
                        Dim ecResult As ClassPNR
                        ecResult = New ClassPNR
                        ecResult.sendPNR_EC = B_EC
                    End If


                    If Trim(Com_A) <> "" Or Trim(Com_A) <> Nothing Then
                        Dim caResult As ClassPNR
                        caResult = New ClassPNR
                        caResult.sendPNR_CA = Com_A
                    End If


                    If Trim(Com_P) <> "" Or Trim(Com_P) <> Nothing Then
                        Dim cpResult As ClassPNR
                        cpResult = New ClassPNR
                        cpResult.sendPNR_CP = Com_P
                    End If


                    '================================
                    '           REMARKS
                    '================================



                    '=================================
                    '  MISCELLANEOUS TRANSACTIONS
                    '=================================
                    If DGW1.Rows.Count <> 0 And DGW1.Columns.Count <> 0 And sendpnrError <> 1 Then

                        For i = 0 To DGW1.Rows.Count - 1

                            For x = 0 To DGW1.Columns.Count - 1

                                If x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    NoPax = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    NoPax = ""
                                End If

                                If x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFPCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFPCode = ""
                                End If

                                If x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFVCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFVCode = ""
                                End If

                                If x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFCPercentage = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFCPercentage = ""

                                End If

                                If x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFCurr = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFCurr = ""
                                End If

                                If x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFCostAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFCostAmt = ""

                                End If

                                If x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFSFAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFSFAmt = ""
                                End If

                                If x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    DIn = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf (x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "") Then
                                    DIn = ""
                                End If

                                If x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    Dout = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    Dout = ""
                                End If

                                If DIn <> "" And Dout <> "" Then
                                    DTvl = "/TVL" & Trim(DIn) & "-" & Trim(Dout)
                                ElseIf DIn <> "" And Dout = "" Then
                                    DTvl = "/TVL" & Trim(DIn)
                                Else
                                    DTvl = ""
                                End If

                                If x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    MSRf = "/R" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    MSRf = ""
                                End If

                                If x = 10 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    MSLf = "/L" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    MSLf = ""
                                End If

                                If x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    MSEc = "/E" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    MSEc = ""
                                End If

                                If x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then

                                    proType = "*" & Trim(txtNoofTkt.Text) + i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)

                                ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    proType = ""
                                End If


                                If x = 12 Then

                                    TF = Trim("PC" & TFPCode & "/V" & TFVCode & "/CP" & TFCPercentage & "/A" & TFCurr & TFCostAmt & "/SF" & TFSFAmt & MSRf & MSLf & MSEc & DTvl & "/NP" & NoPax)

                                    Dim tfResult As ClassPNR
                                    tfResult = New ClassPNR
                                    tfResult.sendPNR_TFs = TF

                                    If Trim(proType) <> Nothing Then
                                        Dim ProTResult As ClassPNR
                                        ProTResult = New ClassPNR
                                        ProTResult.sendPNR_ProTypeName = proType
                                        SendMsg = 1
                                    End If

                                End If


                                If x = 13 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then

                                    FSegmentType = "*" & Trim(txtNoofTkt.Text) + i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)

                                    If Trim(FSegmentType) <> Nothing Then

                                        Dim nontktResult As ClassPNR
                                        nontktResult = New ClassPNR
                                        nontktResult.sendPNR_NonTkt = FSegmentType
                                        SendMsg = 1

                                    End If

                                ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    FSegmentType = ""
                                End If

                                proType = ""

                            Next

                        Next

                    Else
                        sendpnrError = 0
                    End If


                    '=================================
                    '  END MISCELLANEOUS TRANSACTIONS
                    '=================================

                    If Trim(ConName) <> "" Or Trim(ConName) <> Nothing Then
                        SendMsg = 1
                        Dim cnResult As ClassPNR
                        cnResult = New ClassPNR
                        cnResult.sendPNR_CName = ConName
                    End If

                    If Trim(HotelName) <> "" Or Trim(HotelName) <> Nothing Then
                        SendMsg = 1
                        Dim hNameResult As ClassPNR
                        hNameResult = New ClassPNR
                        hNameResult.sendPNR_hName = HotelName
                    End If

                    If Trim(ConPlace) <> "" Or Trim(ConPlace) <> Nothing Then
                        SendMsg = 1
                        Dim conResult As ClassPNR
                        conResult = New ClassPNR
                        conResult.sendPNR_ConPlace = ConPlace
                    End If

                    If Trim(ConDate) <> "" Or Trim(ConDate) <> Nothing Then
                        SendMsg = 1
                        Dim conDResult As ClassPNR
                        conDResult = New ClassPNR
                        conDResult.sendPNR_ConDate = ConDate
                    End If


                    'If Trim(CCGL) <> "" Or Trim(CCGL) <> Nothing Then
                    '    SendMsg = 1
                    '    Dim ccglResult As ClassPNR
                    '    ccglResult = New ClassPNR
                    '    ccglResult.sendPNR_CCGL = CCGL
                    'End If


                    If Trim(LinNo) <> "" Or Trim(LinNo) <> Nothing Then
                        SendMsg = 1
                        Dim lnResult As ClassPNR
                        lnResult = New ClassPNR
                        lnResult.sendPNR_lineNo = LinNo
                    End If


                    If Trim(BookName) <> "" Or Trim(BookName) <> Nothing Then
                        SendMsg = 1
                        Dim bnResult As ClassPNR
                        bnResult = New ClassPNR
                        bnResult.sendPNR_BName = BookName
                    End If


                    If Trim(Autho) <> "" Or Trim(Autho) <> Nothing Then
                        SendMsg = 1
                        Dim auResult As ClassPNR
                        auResult = New ClassPNR
                        auResult.sendPNR_AuthoName = Autho
                    End If


                    If Trim(Tkt) <> "" Or Trim(Tkt) <> Nothing Then
                        SendMsg = 1
                        Dim tktResult As ClassPNR
                        tktResult = New ClassPNR
                        tktResult.sendPNR_Tkt = Tkt
                    End If


                    If Trim(TBS) <> "" Or Trim(TBS) <> Nothing Then
                        SendMsg = 1
                        Dim tbsResult As ClassPNR
                        tbsResult = New ClassPNR
                        tbsResult.sendPNR_TBS = TBS
                    End If


                    'If Trim(EmpNo) <> "" Or Trim(EmpNo) <> Nothing Then
                    '    SendMsg = 1
                    '    Dim empResult As ClassPNR
                    '    empResult = New ClassPNR
                    '    empResult.sendPNR_EMP = EmpNo
                    'End If


                    If Trim(FlagS) <> "" Or Trim(FlagS) <> Nothing Then
                        SendMsg = 1
                        Dim nontktFlag As ClassPNR
                        nontktFlag = New ClassPNR
                        nontktFlag.sendPNR_FlagS = FlagS
                    End If

                    If Trim(ccDetailsNew) <> "" Or Trim(ccDetailsNew) <> Nothing Then
                        SendMsg = 1
                        Dim ccDetails As ClassPNR
                        ccDetails = New ClassPNR
                        ccDetails.sendPNR_CDetails = ccDetailsNew
                    End If






                    '=================================
                    '             END REMARKS
                    '=================================

                End If

            End If

        End If


        If RdBtnAllEntries.Checked = True Then

            If Trim(txtBA.Text) = Nothing Or Trim(txtBA.Text) = "" Then
                MsgBox("Please Log-In or Contact Administrator...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 0
                txtAgentId.Focus()
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(ClientNo) = Nothing Or Trim(ClientNo) = "") Then
                MsgBox("Client Number must not be Empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 0
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(txtSellingFare.Text) = "" Or Trim(txtSellingFare.Text) = Nothing) And (Trim(RTSF.Text) = Nothing And Trim(RTFares.Text) = Nothing) Then

                MsgBox("Selling Fare must not be empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 1
                txtSellingFare.Focus()
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(txtNetTicket.Text) = "" Or Trim(txtNetTicket.Text) = Nothing) Then
                MsgBox("Net Ticket must not be empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 1
                txtNetTicket.Focus()
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(txt_eticket.Text) = "" Or Trim(txt_eticket.Text) = Nothing) Then
                MsgBox(" E-ticket Indicator must not be empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 1
                txtNetTicket.Focus()
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(txtTripType.Text) = "" Or Trim(txtTripType.Text) = Nothing) Then
                MsgBox("Trip Type must not be empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 1
                txtTripType.Focus()
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(txtDateSegment.Text) = "" Or Trim(txtDateSegment.Text) = Nothing) Then
                MsgBox("Retain Date segment must not be empty..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                sendpnrError = 1
                proceed = 1

            ElseIf ((RdDom.Checked = False And RdIntl.Checked = False And RdReg.Checked = False)) Then
                MsgBox("Please flag a segment if Domestic, Regional or International for AIR transaction. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 1
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(txtNoOfPax.Text) = Nothing Or Trim(txtNoOfPax.Text) = "") Then
                MsgBox("Number of Pax must not be empty..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 1
                txtNoOfPax.Focus()
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(cboCurrAir.Text) = Nothing Or Trim(cboCurrAir.Text) = "") Then
                MsgBox("Currency must not be empty..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 1
                cboCurrAir.Focus()
                sendpnrError = 1
                proceed = 1

            ElseIf (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 0) And (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 13) Then
                MsgBox("Incomplete details Non-Air Transactions.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 2
                sendpnrError = 1
                proceed = 1

            ElseIf (Trim(txtRF.Text) = Nothing Or Trim(txtRF.Text) = "") Then

                MsgBox("RF Element Must Not Be Empty...", , ":::TAIS:::")
                sendpnrError = 1
                TabCAPI.SelectedIndex = 0
                txtRF.Focus()
                proceed = 1

            ElseIf (Trim(TxtTravEmail.Text) = Nothing Or Trim(TxtTravEmail.Text) = "") And TOEGCheck <> 1 Then

                MsgBox("TOEG entry must not be Empty...", , ":::TAIS:::")
                sendpnrError = 1
                TabCAPI.SelectedIndex = 3
                TxtTravEmail.Focus()
                proceed = 1



            ElseIf ((txtEmployeeNo.BackColor = Color.Yellow And Trim(txtEmployeeNo.Text) = Nothing) Or
                          (txtTravellerName.BackColor = Color.Yellow And Trim(txtTravellerName.Text) = Nothing) Or
                          (txtLowFare.BackColor = Color.Yellow And Trim(txtLowFare.Text) = Nothing) Or
                          (txtCustSpecLowFare.BackColor = Color.Yellow And Trim(txtCustSpecLowFare.Text) = Nothing) Or
                          (txtCustSpecHighFare.BackColor = Color.Yellow And Trim(txtCustSpecHighFare.Text) = Nothing) Or
                          (txtRefFare.BackColor = Color.Yellow And Trim(txtRefFare.Text) = Nothing) Or
                           (txtTravellerStat.BackColor = Color.Yellow And Trim(txtTravellerStat.Text) = Nothing) Or
                          (txtCostCenterCode.BackColor = Color.Yellow And Trim(txtCostCenterCode.Text) = Nothing) Or
                          (txtProjectNo.BackColor = Color.Yellow And Trim(txtProjectNo.Text) = Nothing) Or
                          (txtDeptNo.BackColor = Color.Yellow And Trim(txtDeptNo.Text) = Nothing) Or
                          (txtOrderRef.BackColor = Color.Yellow And Trim(txtOrderRef.Text) = Nothing) Or
                          (txtApprover.BackColor = Color.Yellow And Trim(txtApprover.Text) = Nothing) Or
                          (txtApproverCode.BackColor = Color.Yellow And Trim(txtApproverCode.Text) = Nothing) Or
                          (txtMgrSuperior.BackColor = Color.Yellow And Trim(txtMgrSuperior.Text) = Nothing) Or
                          (txtReasonofTrip.BackColor = Color.Yellow And Trim(txtReasonofTrip.Text) = Nothing) Or
                          (txtMajorClass.BackColor = Color.Yellow And Trim(txtMajorClass.Text) = Nothing) Or
                          (txtStopOverTRF.BackColor = Color.Yellow And Trim(txtStopOverTRF.Text) = Nothing) Or
                          (txtTourCode.BackColor = Color.Yellow And Trim(txtTourCode.Text) = Nothing) Or
                          (txtFFLYR.BackColor = Color.Yellow And Trim(txtFFLYR.Text) = Nothing) Or
                          (txtHotelReasonCD.BackColor = Color.Yellow And Trim(txtHotelReasonCD.Text) = Nothing) Or
                          (txtHotelBookedF_N.BackColor = Color.Yellow And Trim(txtHotelBookedF_N.Text) = Nothing) Or
                          (txtAirNoReasonCD.BackColor = Color.Yellow And Trim(txtAirNoReasonCD.Text) = Nothing) Or
                          (txtCarBookedFlag.BackColor = Color.Yellow And Trim(txtCarBookedFlag.Text) = Nothing) Or
                          (txtSalesChannel.BackColor = Color.Yellow And Trim(txtSalesChannel.Text) = Nothing) Or
                          (txtRecordType.BackColor = Color.Yellow And Trim(txtRecordType.Text) = Nothing) Or
                          (txtCSData1.BackColor = Color.Yellow And Trim(txtCSData1.Text) = Nothing) Or
                          (txtCSData2.BackColor = Color.Yellow And Trim(txtCSData2.Text) = Nothing) Or
                          (txtCSData3.BackColor = Color.Yellow And Trim(txtCSData3.Text) = Nothing) Or
                          (txtCSData4.BackColor = Color.Yellow And Trim(txtCSData4.Text) = Nothing) Or
                          (txtCSData5.BackColor = Color.Yellow And Trim(txtCSData5.Text) = Nothing) Or
                          (txtCSData6.BackColor = Color.Yellow And Trim(txtCSData6.Text) = Nothing) Or
                          (txtCSData7.BackColor = Color.Yellow And Trim(txtCSData7.Text) = Nothing) Or
                          (txtCSData8.BackColor = Color.Yellow And Trim(txtCSData8.Text) = Nothing) Or
                          (txtCSData12.BackColor = Color.Yellow And Trim(txtCSData12.Text) = Nothing)) And (Trim(txtAccess.Text) = "1") Then

                MsgBox("kindly fill up all MIS Mandatory Fields and please double check the conditional statement..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 4
                sendpnrError = 1
                proceed = 1

            ElseIf ((txtReasonCode.BackColor = Color.Yellow And Trim(txtReasonCode.Text) = Nothing) Or
                   (txtRCodeDenied.BackColor = Color.Yellow And Trim(txtRCodeDenied.Text) = Nothing)) And (Trim(txtAccess.Text) = "1") Then

                MsgBox("Please fill up Fare Type Reason Codes..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 1
                sendpnrError = 1
                proceed = 1

            Else



                If strAccess <> 1 Then

                    If txtAccess.Text = 1 Or txtAccess.Text = 4 Then 'And txtAccess.Text = 4 
                        If Trim(txtAPEle.Text) <> Nothing Then
                            objSession.Send(Trim(txtAPEle.Text))
                        End If

                        If Trim(txtAP.Text) <> Nothing Then
                            objSession.Send(Trim(txtAP.Text))
                        End If
                    End If

                End If

                Dim classPNR = New ClassPNR
                Dim trimGCN = Trim(GlobalCustNO)
                'RAMPENDING
                If sendpnrError <> 1 Then

                    If COD <> Nothing Then

                        If COD.Length > 0 Then

                            Dim midField = dbMIS.MIDFields.Where(Function(n) n.ClientGCN = trimGCN).ToList()

                            For Each item As MIDFields In midField

                                If COD.IndexOf(UCase(Trim(item.Gems))) < 0 Then
                                    'LOW FARE

                                    If Trim(item.DataItem) = "D19" Then
                                        If Trim(txtSellingFare.Text) <> Nothing And Trim(txtLowFare.Text) <> Nothing Then

                                            Dim tLowFare = dbMIS.T_LowFare.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tLowFare Is Nothing Then
                                                classPNR.sendFares = Trim(tLowFare.BCD_Code & cboCurrAir.Text & "/" & txtSellingFare.Text & "/" &
                                                                  txtLowFare.Text)

                                                classPNR.sendFaresAddtl = "RM*LOW FARE*/" & Trim(cboCurrAir.Text) & "/" & Trim(txtLowFare.Text)
                                            End If

                                        End If
                                    End If

                                    If Trim(item.DataItem) = "D18" Then
                                        If Trim(txtSellingFare.Text) <> Nothing And Trim(txtLowFare.Text) <> Nothing Then
                                            Dim tCurrCode = dbMIS.T_CurrCode.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tCurrCode Is Nothing Then
                                                classPNR.sendCurrCode = Trim(tCurrCode.BCD_Code) & "/" & Trim(cboCurrAir.Text) & "/" & Trim(txtSellingFare.Text) & "/" &
                                                    Trim(txtLowFare.Text)
                                            End If
                                        End If
                                    End If

                                    If Trim(item.DataItem) = "D17" Then
                                        If Trim(txtRCodeDenied.Text) <> Nothing Then
                                            Dim tReasonCodeDen = dbMIS.T_ReasonCodeDen.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tReasonCodeDen Is Nothing Then
                                                classPNR.sendReasonCodeDen = Trim(tReasonCodeDen.BCD_Code) & Trim(txtRCodeDenied.Text)
                                            End If
                                        End If
                                    End If

                                    If Trim(item.DataItem) = "D01" Then
                                        If Trim(txtAirNoReasonCD.Text) <> Nothing Then
                                            Dim tAirNoAccomReasonCode = dbMIS.T_AirNoAccomReasonCD.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tAirNoAccomReasonCode Is Nothing Then
                                                classPNR.SendPNR_strAccomCode = Trim(tAirNoAccomReasonCode.BCD_Code) & Trim(txtAirNoReasonCD.Text)
                                            End If
                                        End If
                                    End If

                                    If Trim(item.DataItem) = "D02" Then
                                        If Trim(txtApproverCode.Text) <> Nothing Then
                                            Dim tApprovalCode = dbMIS.T_ApprovalCode.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tApprovalCode Is Nothing Then
                                                classPNR.SendPNR_ApprovalCode = Trim(tApprovalCode.BCD_Code) & Trim(txtApproverCode.Text)
                                            End If
                                        End If
                                    End If

                                    If Trim(item.DataItem) = "D03" Then
                                        If Trim(txtApprover.Text) <> Nothing Then
                                            Dim tApprover = dbMIS.T_Approver.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tApprover Is Nothing Then
                                                classPNR.SendPNR_Approver = Trim(tApprover.BCD_Code) & Trim(txtApprover.Text)
                                            End If
                                        End If
                                    End If

                                    'Client Data 1
                                    If Trim(item.DataItem) = "D04" Then
                                        If Trim(txtCSData1.Text) <> Nothing Then
                                            Dim tClientData1 = dbMIS.T_ClientData1.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData1 Is Nothing Then
                                                classPNR.SendPNR_CODData1 = Trim(tClientData1.BCD_Code) & Trim(txtCSData1.Text)
                                            End If
                                        End If
                                    End If

                                    'Client Data 2
                                    If Trim(item.DataItem) = "D05" Then
                                        If Trim(txtCSData2.Text) <> Nothing Then
                                            Dim tClientData2 = dbMIS.T_ClientData2.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData2 Is Nothing Then
                                                classPNR.SendPNR_CODData2 = Trim(tClientData2.BCD_Code) & Trim(txtCSData2.Text)
                                            End If
                                        End If
                                    End If

                                    'ClientData 3
                                    If Trim(item.DataItem) = "D06" Then
                                        If Trim(txtCSData3.Text) <> Nothing Then
                                            Dim tClientData3 = dbMIS.T_ClientData3.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData3 Is Nothing Then
                                                classPNR.SendPNR_CODData3 = Trim(tClientData3.BCD_Code) & Trim(txtCSData3.Text)
                                            End If
                                        End If
                                    End If

                                    'ClientData 4
                                    If Trim(item.DataItem) = "D07" Then
                                        If Trim(txtCSData4.Text) <> Nothing Then
                                            Dim tClientData4 = dbMIS.T_ClientData4.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData4 Is Nothing Then
                                                classPNR.SendPNR_CODData4 = Trim(tClientData4.BCD_Code) & Trim(txtCSData4.Text)
                                            End If
                                        End If
                                    End If

                                    'ClientData 5
                                    If Trim(item.DataItem) = "D20" Then
                                        If Trim(txtCSData5.Text) <> Nothing Then
                                            Dim tClientData5 = dbMIS.T_ClientData5.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData5 Is Nothing Then
                                                classPNR.SendPNR_CODData5 = Trim(tClientData5.BCD_Code) & Trim(txtCSData5.Text)
                                            End If
                                        End If
                                    End If

                                    'ClientData 6
                                    If Trim(item.DataItem) = "D21" Then
                                        If Trim(txtCSData6.Text) <> Nothing Then
                                            Dim tClientData6 = dbMIS.T_ClientData6.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData6 Is Nothing Then
                                                classPNR.SendPNR_CODData6 = Trim(tClientData6.BCD_Code) & Trim(txtCSData6.Text)
                                            End If
                                        End If
                                    End If

                                    'ClientData 7
                                    If Trim(item.DataItem) = "D22" Then
                                        If Trim(txtCSData7.Text) <> Nothing Then
                                            Dim tClientData7 = dbMIS.T_ClientData7.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData7 Is Nothing Then
                                                classPNR.SendPNR_CODData7 = Trim(tClientData7.BCD_Code) & Trim(txtCSData7.Text)
                                            End If
                                        End If
                                    End If

                                    'ClientData 8
                                    If Trim(item.DataItem) = "D23" Then
                                        If Trim(txtCSData8.Text) <> Nothing Then
                                            Dim tClientData8 = dbMIS.T_ClientData8.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData8 Is Nothing Then
                                                classPNR.SendPNR_CODData8 = Trim(tClientData8.BCD_Code) & Trim(txtCSData8.Text)
                                            End If
                                        End If
                                    End If

                                    'ClientData 12
                                    If Trim(item.DataItem) = "D24" Then
                                        If Trim(txtCSData12.Text) <> Nothing Then
                                            Dim tClientData12 = dbMIS.T_ClientData12.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tClientData12 Is Nothing Then
                                                classPNR.SendPNR_CODData12 = Trim(tClientData12.BCD_Code) & Trim(txtCSData12.Text)
                                            End If
                                        End If
                                    End If

                                    'Cost Center Code
                                    If Trim(item.DataItem) = "D08" Then
                                        If Trim(txtCostCenterCode.Text) <> Nothing Then
                                            Dim tCostCenter = dbMIS.T_CostCenter.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tCostCenter Is Nothing Then
                                                classPNR.SendPNR_DeptNo = Trim(tCostCenter.BCD_Code) & Trim(txtDeptNo.Text)
                                            End If
                                        End If
                                    End If

                                    'Manager Superior
                                    If Trim(item.DataItem) = "D11" Then
                                        If Trim(txtMgrSuperior.Text) <> Nothing Then
                                            Dim tMgrSup = dbMIS.T_MgrSup.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tMgrSup Is Nothing Then
                                                classPNR.SendPNR_MgrSup = Trim(tMgrSup.BCD_Code) & Trim(txtMgrSuperior.Text)
                                            End If
                                        End If
                                    End If

                                    'Order Reference
                                    If Trim(item.DataItem) = "D12" Then
                                        If Trim(txtOrderRef.Text) <> Nothing Then
                                            Dim tOrderRef = dbMIS.T_OrderRef.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not tOrderRef Is Nothing Then
                                                classPNR.SendPNR_Ordr = Trim(tOrderRef.BCD_Code) & Trim(txtOrderRef.Text)
                                            End If
                                        End If
                                    End If

                                    'Project Number
                                    If Trim(item.DataItem) = "D13" Then
                                        If Trim(txtProjectNo.Text) <> Nothing Then
                                            Dim tProjNo = dbMIS.T_ProjNo.FirstOrDefault(Function(n) n.GCN)

                                            If Not tProjNo Is Nothing Then
                                                classPNR.SendPNR_ProjNo = Trim(tProjNo.BCD_Code) & Trim(txtProjectNo.Text)
                                            End If
                                        End If
                                    End If

                                    'Reason Of Trip
                                    If Trim(item.DataItem) = "D14" Then
                                        If Trim(txtReasonofTrip.Text) <> Nothing Then
                                            Dim reasonOfTrip = dbMIS.T_ReasonofTrip.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not reasonOfTrip Is Nothing Then
                                                classPNR.SendPNR_ReasonTrip = Trim(reasonOfTrip.BCD_CODE) & Trim(txtReasonofTrip.Text)
                                            End If
                                        End If
                                    End If

                                    'Traveller Status
                                    If Trim(item.DataItem) = "D15" Then
                                        If Trim(txtTravellerStat.Text) <> Nothing Then
                                            Dim travStat = dbMIS.T_TravStatus.FirstOrDefault(Function(n) n.GCN = trimGCN)

                                            If Not travStat Is Nothing Then
                                                classPNR.SendPNR_ReasonTrip = Trim(travStat.BCD_Code) & Trim(txtTravellerStat.Text)
                                            End If
                                        End If
                                    End If

                                End If
                            Next
                        End If
                    End If

                Else


                End If

                If TOEGCheck <> 1 Then
                    SendMsg = 1
                    classPNR.sendTOEG = TOEG
                End If


                If RF.Checked = True Then
                    If Trim(ReceiveFrm) <> Nothing And iCtr <> 1 Then
                        classPNR.SendPNR_CReceivedFrom = ReceiveFrm
                    End If
                End If



                If chkClientNo.Checked = True Then
                    If Trim(ClientNo) <> Nothing And iCtr <> 1 Then
                        classPNR.SendPNR_CClientNo = ClientNo
                    End If
                End If

                If DivNo.Checked = True Then
                    If Trim(DivNumber) <> Nothing Then
                        classPNR.SendPNR_CDivNumber = DivNumber
                    End If
                End If

                If BookingAgent.Checked = True Then
                    If Trim(BAgent) <> Nothing Then
                        classPNR.SendPNR_CBookingAgent = BAgent
                    End If
                End If

                If Trim(TA) <> "" Or Trim(TA) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_TA = TA
                End If

                If VesselName.Checked = True And iCtr <> 1 Then
                    If Trim(VName) <> Nothing Then
                        classPNR.SendPNR_CVesselName = VName
                    End If
                End If

                If TKTL.Checked = True Then                   'TKTL Element
                    classPNR.SendPNR_CTicketTL = TicketTL
                End If


                If IsNumeric(Trim(B_PF)) = True Then
                    classPNR.SendPNR_PF = B_PF
                End If


                If IsNumeric(Trim(B_SF)) = True Then
                    classPNR.SendPNR_SF = B_SF
                End If

                If Segment.Count > 0 Then                      ' Per Segment
                    For i = 0 To Segment.Count - 1
                        BF_SF = Segment(i)
                        classPNR.SendPNR_BSF = BF_SF
                    Next
                End If



                If TicketSegment.Count > 0 Then                ' TicketNumber
                    For i = 0 To TicketSegment.Count - 1
                        ETCK = TicketSegment(i)
                        classPNR.SendPNR_ETCK = ETCK
                    Next
                End If

                If NonBSP <> Nothing Then
                    classPNR.SendPNR_NonBSP = NonBSP
                End If


                If IsNumeric(Trim(B_RF)) = True Then
                    classPNR.SendPNR_RF = B_RF
                End If

                If IsNumeric(Trim(B_LF)) = True Then
                    classPNR.SendPNR_LF = B_LF
                End If

                If Trim(B_EC) <> "" Or Trim(B_EC) <> Nothing Then
                    classPNR.sendPNR_EC = B_EC
                End If


                If Trim(Com_A) <> "" Or Trim(Com_A) <> Nothing Then
                    classPNR.sendPNR_CA = Com_A
                End If


                If Trim(Com_P) <> "" Or Trim(Com_P) <> Nothing Then
                    classPNR.sendPNR_CP = Com_P
                End If

                If SegmentFareCode.Count > 0 Then                      ' Per Segment Fares
                    For i = 0 To SegmentFareCode.Count - 1
                        BF_FTypes = SegmentFareCode(i)
                        classPNR.SendPNR_Ftypes = BF_FTypes
                    Next
                End If


                '================================
                '           REMARKS
                '================================



                '=================================
                '  MISCELLANEOUS TRANSACTIONS
                '=================================
                If DGW1.Rows.Count <> 0 And DGW1.Columns.Count <> 0 And sendpnrError <> 1 Then

                    For i = 0 To DGW1.Rows.Count - 1

                        For x = 0 To DGW1.Columns.Count - 1

                            If x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                NoPax = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                NoPax = ""
                            End If

                            If x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFPCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFPCode = ""
                            End If

                            If x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFVCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFVCode = ""
                            End If

                            If x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCPercentage = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCPercentage = ""

                            End If

                            If x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCurr = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCurr = ""
                            End If

                            If x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCostAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCostAmt = ""

                            End If

                            If x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFSFAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFSFAmt = ""
                            End If

                            If x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                DIn = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf (x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "") Then
                                DIn = ""
                            End If

                            If x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                Dout = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                Dout = ""
                            End If


                            If DIn <> "" And Dout <> "" Then
                                DTvl = "/TVL" & Trim(DIn) & "-" & Trim(Dout)
                            ElseIf DIn <> "" And Dout = "" Then
                                DTvl = "/TVL" & Trim(DIn)
                            Else
                                DTvl = ""
                            End If


                            If x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSRf = "/R" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSRf = ""
                            End If

                            If x = 10 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSLf = "/L" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSLf = ""
                            End If

                            If x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSEc = "/E" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSEc = ""
                            End If

                            If x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then

                                proType = "*" & Trim(txtNoofTkt.Text) + i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)

                            ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                proType = ""
                            End If


                            If x = 12 Then

                                TF = Trim("PC" & TFPCode & "/V" & TFVCode & "/CP" & TFCPercentage & "/A" & TFCurr & TFCostAmt & "/SF" & TFSFAmt & MSRf & MSLf & MSEc & DTvl & "/NP" & NoPax)

                                classPNR.sendPNR_TFs = TF

                                If Trim(proType) <> Nothing Then
                                    classPNR.sendPNR_ProTypeName = proType
                                    SendMsg = 1
                                End If

                            End If



                            If x = 13 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then

                                FSegmentType = "*" & Trim(txtNoofTkt.Text) + i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)

                                If Trim(FSegmentType) <> Nothing Then
                                    classPNR.sendPNR_NonTkt = FSegmentType
                                    SendMsg = 1

                                End If

                            ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                FSegmentType = ""
                            End If

                            proType = ""

                        Next

                    Next

                Else
                    sendpnrError = 0
                End If

                '=================================
                '  END MISCELLANEOUS TRANSACTIONS
                '=================================


                If Trim(ConName) <> "" Or Trim(ConName) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_CName = ConName
                End If

                If Trim(HotelName) <> "" Or Trim(HotelName) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_hName = HotelName
                End If

                If Trim(ConPlace) <> "" Or Trim(ConPlace) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_ConPlace = ConPlace
                End If

                If Trim(ConDate) <> "" Or Trim(ConDate) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_ConDate = ConDate
                End If


                If Trim(CCGL) <> "" Or Trim(CCGL) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_CCGL = CCGL
                End If


                If Trim(LinNo) <> "" Or Trim(LinNo) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_lineNo = LinNo
                End If


                If Trim(BookName) <> "" Or Trim(BookName) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_BName = BookName
                End If


                If Trim(Autho) <> "" Or Trim(Autho) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_AuthoName = Autho
                End If


                If Trim(Tkt) <> "" Or Trim(Tkt) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_Tkt = Tkt
                End If

                If Trim(TBS) <> "" Or Trim(TBS) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_TBS = TBS
                End If


                If Trim(EmpNo) <> "" Or Trim(EmpNo) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_EMP = EmpNo
                End If


                If Trim(FlagS) <> "" Or Trim(FlagS) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_FlagS = FlagS
                End If


                If Trim(ccDetailsNew) <> "" Or Trim(ccDetailsNew) <> Nothing Then
                    SendMsg = 1
                    classPNR.sendPNR_CDetails = ccDetailsNew
                End If


                If (Trim(PNRDate) <> "" Or Trim(PNRDate) <> Nothing) And (Trim(PNRNoPax) <> "" Or Trim(PNRNoPax) <> Nothing) Then
                    SendMsg = 1
                    PNRSegment = Trim("RU 1A HK" & Trim(PNRNoPax) & " MNL" & Trim(PNRDate) & "/RETAIN SEGMENT")
                    classPNR.sendPNR_PNRDate = PNRSegment
                End If

                '=================================
                '             END REMARKS
                '=================================

                If strAccess <> 4 Then

                    '==============================================
                    ' BCD MIS Fields
                    '==============================================


                    M_GC = Trim(txtGlobalCustNo.Text)
                    M_LCNo = Trim(txtLocalCustNo.Text)
                    M_EmpNo = Trim(txtEmployeeNo.Text)
                    M_TravName = Trim(txtTravellerName.Text)
                    M_TravStat = Trim(txtTravellerStat.Text)
                    M_CCC = Trim(txtCostCenterCode.Text)
                    M_ProjNo = Trim(txtProjectNo.Text)
                    M_DeptNo = Trim(txtDeptNo.Text)
                    M_OrderRed = Trim(txtOrderRef.Text)
                    M_Approver = Trim(txtApprover.Text)
                    M_ApproverCode = Trim(txtApproverCode.Text)
                    M_MgrSup = Trim(txtMgrSuperior.Text)
                    M_RTrip = Trim(txtReasonofTrip.Text)
                    M_MClass = Trim(txtMajorClass.Text)
                    M_SOT = Trim(txtStopOverTRF.Text)
                    M_TourCode = Trim(txtTourCode.Text)
                    M_RCode = Trim(txtReasonCode.Text)
                    M_RCodeDenied = Trim(txtRCodeDenied.Text)
                    M_FFlyr = Trim(txtFFLYR.Text)
                    M_HotelReasonCode = Trim(txtHotelReasonCD.Text)
                    M_HotelBookedF = Trim(txtHotelBookedF_N.Text)
                    M_AirNoReasonCode = Trim(txtAirNoReasonCD.Text)
                    M_CarBookedFlag = Trim(txtCarBookedFlag.Text)
                    M_SalesChannel = Trim(txtSalesChannel.Text)
                    M_RecordType = Trim(txtRecordType.Text)
                    M_CSData1 = Trim(txtCSData1.Text)
                    M_CSData2 = Trim(txtCSData2.Text)
                    M_CSData3 = Trim(txtCSData3.Text)
                    M_CSData4 = Trim(txtCSData4.Text)
                    M_CSData5 = Trim(txtCSData5.Text)
                    M_CSData6 = Trim(txtCSData6.Text)
                    M_CSData7 = Trim(txtCSData7.Text)
                    M_CSData8 = Trim(txtCSData8.Text)
                    M_CSData12 = Trim(txtCSData12.Text)

                    '===================================================
                    '===================FOR BCD ========================
                    '===================================================


                    '===================================================
                    '==============MIS ENTRY FOR TRAVCOM ===============
                    '===================================================


                    If Trim(M_GC) <> "" Or Trim(M_GC) <> Nothing Then
                        classPNR.SendPNR_MIS_GC = M_GC
                        SendMsgMIS = 1
                    End If


                    If Trim(M_LCNo) <> "" Or Trim(M_LCNo) <> Nothing Then
                        classPNR.SendPNR_MIS_LC = M_LCNo
                        SendMsgMIS = 1
                    End If


                    If Trim(M_EmpNo) <> "" Or Trim(M_EmpNo) <> Nothing Then
                        classPNR.SendPNR_MIS_EN = M_EmpNo
                        SendMsgMIS = 1
                    End If

                    If Trim(M_TravStat) <> "" Or Trim(M_TravStat) <> Nothing Then
                        classPNR.SendPNR_MIS_TVS = M_TravStat
                        SendMsgMIS = 1
                    End If


                    If Trim(M_CCC) <> "" Or Trim(M_CCC) <> Nothing Then
                        classPNR.SendPNR_MIS_CCC = M_CCC
                        SendMsgMIS = 1
                    End If


                    If Trim(M_ProjNo) <> "" Or Trim(M_ProjNo) <> Nothing Then
                        classPNR.SendPNR_MIS_ProjNo = M_ProjNo
                        SendMsgMIS = 1
                    End If

                    If Trim(M_DeptNo) <> "" Or Trim(M_DeptNo) <> Nothing Then
                        classPNR.SendPNR_MIS_DeptNo = M_DeptNo
                        SendMsgMIS = 1
                    End If


                    If Trim(M_OrderRed) <> "" Or Trim(M_OrderRed) <> Nothing Then
                        classPNR.SendPNR_MIS_OrderRef = M_OrderRed
                        SendMsgMIS = 1
                    End If


                    If Trim(M_Approver) <> "" Or Trim(M_Approver) <> Nothing Then
                        classPNR.SendPNR_MIS_Approver = M_Approver
                        SendMsgMIS = 1
                    End If


                    If Trim(M_ApproverCode) <> "" Or Trim(M_ApproverCode) <> Nothing Then
                        classPNR.SendPNR_MIS_ApproverCode = M_ApproverCode
                        SendMsgMIS = 1
                    End If

                    If Trim(M_MgrSup) <> "" Or Trim(M_MgrSup) <> Nothing Then
                        classPNR.SendPNR_MIS_MgrSup = M_MgrSup
                        SendMsgMIS = 1
                    End If

                    If Trim(M_RTrip) <> "" Or Trim(M_RTrip) <> Nothing Then
                        classPNR.SendPNR_MIS_RTrip = M_RTrip
                        SendMsgMIS = 1
                    End If

                    If Trim(M_MClass) <> "" Or Trim(M_MClass) <> Nothing Then
                        classPNR.SendPNR_MIS_MClass = M_MClass
                        SendMsgMIS = 1
                    End If

                    If Trim(M_SOT) <> "" Or Trim(M_SOT) <> Nothing Then
                        classPNR.SendPNR_MIS_SOT = M_SOT
                        SendMsgMIS = 1
                    End If

                    If Trim(M_TourCode) <> "" Or Trim(M_TourCode) <> Nothing Then
                        classPNR.SendPNR_MIS_TCode = M_TourCode
                        SendMsgMIS = 1
                    End If


                    If Trim(M_RCode) <> "" Or Trim(M_RCode) <> Nothing Then
                        classPNR.SendPNR_MIS_RCode = M_RCode
                        SendMsgMIS = 1
                    End If


                    If Trim(M_RCodeDenied) <> "" Or Trim(M_RCodeDenied) <> Nothing Then
                        classPNR.SendPNR_MIS_RCodeDen = M_RCodeDenied
                        SendMsgMIS = 1
                    End If


                    If Trim(M_FFlyr) <> "" Or Trim(M_FFlyr) <> Nothing Then
                        classPNR.SendPNR_MIS_FFLyr = M_FFlyr
                        SendMsgMIS = 1
                    End If


                    If Trim(M_HotelReasonCode) <> "" Or Trim(M_HotelReasonCode) <> Nothing Then
                        classPNR.SendPNR_MIS_HotelRC = M_HotelReasonCode
                        SendMsgMIS = 1
                    End If


                    If Trim(M_HotelBookedF) <> "" Or Trim(M_HotelBookedF) <> Nothing Then
                        classPNR.SendPNR_MIS_HB = M_HotelBookedF
                        SendMsgMIS = 1
                    End If


                    If Trim(M_AirNoReasonCode) <> "" Or Trim(M_AirNoReasonCode) <> Nothing Then
                        classPNR.SendPNR_MIS_ANRC = M_AirNoReasonCode
                        SendMsgMIS = 1
                    End If


                    If Trim(M_CarBookedFlag) <> "" Or Trim(M_CarBookedFlag) <> Nothing Then
                        classPNR.SendPNR_MIS_CBF = M_CarBookedFlag
                        SendMsgMIS = 1
                    End If


                    If Trim(M_SalesChannel) <> "" Or Trim(M_SalesChannel) <> Nothing Then
                        classPNR.SendPNR_MIS_SC = M_SalesChannel
                        SendMsgMIS = 1
                    End If


                    If Trim(M_RecordType) <> "" Or Trim(M_RecordType) <> Nothing Then
                        classPNR.SendPNR_MIS_RT = M_RecordType
                        SendMsgMIS = 1
                    End If


                    If Trim(M_CSData1) <> "" Or Trim(M_CSData1) <> Nothing Then
                        classPNR.SendPNR_MIS_CS1 = M_CSData1
                        SendMsgMIS = 1
                    End If


                    If Trim(M_CSData2) <> "" Or Trim(M_CSData2) <> Nothing Then
                        classPNR.SendPNR_MIS_CS2 = M_CSData2
                        SendMsgMIS = 1
                    End If


                    If Trim(M_CSData3) <> "" Or Trim(M_CSData3) <> Nothing Then
                        classPNR.SendPNR_MIS_CS3 = M_CSData3
                        SendMsgMIS = 1
                    End If


                    If Trim(M_CSData4) <> "" Or Trim(M_CSData4) <> Nothing Then
                        classPNR.SendPNR_MIS_CS4 = M_CSData4
                        SendMsgMIS = 1
                    End If


                    If Trim(M_CSData5) <> "" Or Trim(M_CSData5) <> Nothing Then
                        classPNR.SendPNR_MIS_CS5 = M_CSData5
                        SendMsgMIS = 1
                    End If


                    If Trim(M_CSData6) <> "" Or Trim(M_CSData6) <> Nothing Then
                        classPNR.SendPNR_MIS_CS6 = M_CSData6
                        SendMsgMIS = 1
                    End If

                    If Trim(M_CSData7) <> "" Or Trim(M_CSData7) <> Nothing Then
                        classPNR.SendPNR_MIS_CS7 = M_CSData7
                        SendMsgMIS = 1
                    End If

                    If Trim(M_CSData8) <> "" Or Trim(M_CSData8) <> Nothing Then
                        classPNR.SendPNR_MIS_CS8 = M_CSData8
                        SendMsgMIS = 1
                    End If



                    If Trim(M_CSData12) <> "" Or Trim(M_CSData12) <> Nothing Then
                        classPNR.SendPNR_MIS_CS12 = M_CSData12
                        SendMsgMIS = 1
                    End If


                    'Trip Type
                    If Trim(TripType) <> "" Or Trim(TripType) <> Nothing Then
                        classPNR.sendPNR_TripType = TripType
                        SendMsgMIS = 1
                    End If

                    'Net Ticket
                    If Trim(NetTicket) <> "" Or Trim(NetTicket) <> Nothing Then
                        classPNR.sendPNR_NetTicket = NetTicket
                        SendMsgMIS = 1
                    End If


                    'Customer Spec Low Fare
                    If Trim(custSpecLowFare) <> "" Or Trim(custSpecLowFare) <> Nothing Then
                        classPNR.sendPNR_custSLowFare = custSpecLowFare
                        SendMsgMIS = 1
                    End If

                    ' Customer Spec High Fare
                    If Trim(custSpecHighFare) <> "" Or Trim(custSpecHighFare) <> Nothing Then
                        classPNR.sendPNR_custSHighFare = custSpecHighFare
                        SendMsgMIS = 1
                    End If


                    ''Eticket Indicator

                    If Trim(eticket) <> "" Or Trim(eticket) <> Nothing Then
                        SendMsg = 1
                        classPNR.sendPNR_eticket = eticket
                    End If
                End If
            End If
        End If


        If sendpnrError <> 2 Then

            If SendMsg = 1 And sendpnrError <> 1 And SendMsgMIS = 1 Then
                MsgBox(" Travcom Interface Entries has been successfully sent..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":::TAIS:::")
            End If

        End If

        '======================================================
        '=============END of Loading Class Function============
        '======================================================

    End Sub


    Private Sub DTCheckIn_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DTCheckIn.ValueChanged
        txtDatein.Text = Format(DTCheckIn.Value, "ddMMMyy")
    End Sub

    Private Sub DTCheckOut_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DTCheckOut.ValueChanged
        txtDateOut.Text = Format(DTCheckOut.Value, "ddMMMyy")
    End Sub

    Private Sub DateSegment_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DateSegment.ValueChanged
        txtDateSegment.Text = (Format(DateSegment.Value, "ddMMM"))
    End Sub


    Private Sub DateConvention_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DateConvention.ValueChanged
        txtDateofConvention.Text = (Format(DateConvention.Value, "dd-MMM-yyyy"))
    End Sub


    Private Sub BSpbtnClear_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BSpbtnClear.Click

        FieldMapping()
        MISINIT()

        '=====BCD transactions Initialization ======
        txtSellingFare.Text = Nothing
        txtPublishFare.Text = Nothing
        txtRefFare.Text = Nothing
        txtLowFare.Text = Nothing
        txtCustSpecHighFare.Text = Nothing
        txtCustSpecLowFare.Text = Nothing

        txtNoOfPax.Text = Nothing
        txtExpCode.Text = Nothing
        cboCurrAir.Text = Nothing
        cboCostCurr.Text = Nothing
        cboAirlineCode.Text = Nothing
        cboSupplierCode.Text = Nothing
        cboTicketingAgent.Text = Nothing
        txtNetTicket.Text = Nothing
        txtTripType.Text = Nothing

        txtNoofTkt.Text = "1"

        cboSegment.Text = Nothing
        txtSFSegment.Text = Nothing
        RTSF.Text = Nothing
        RTFares.Text = Nothing


        B_SF = Nothing        ' Selling Fare
        B_PF = Nothing        ' Publish Fare
        B_RF = Nothing        ' Reference Fare
        B_LF = Nothing        ' Lowest Fare
        B_EC = Nothing        ' Exception Code
        Com_A = Nothing
        Com_P = Nothing
        ETCK = Nothing
        custSpecLowFare = Nothing
        custSpecHighFare = Nothing
        NetTicket = Nothing
        NonBSP = Nothing
        TripType = Nothing

        RdDom.Checked = False
        RdIntl.Checked = False
        RdReg.Checked = False
        Tkt = ""        'Flag Segment for BSP

        '===On & off Signer
        chkOffSigner.Checked = False
        chkOnSigner.Checked = False
        chkOffline.Checked = False



        txtCommAmt.Text = Nothing
        txtComPercentage.Text = Nothing

        For i = 0 To Segment.Count - 1
            Segment(i) = Nothing
        Next


        '===Ticket Entry
        cboAlineCode.Text = Nothing
        txtTicketNumber.Text = Nothing
        TicketField.Text = Nothing

        For i = 0 To TicketSegment.Count - 1
            TicketSegment(i) = Nothing
        Next

    End Sub


    Private Sub cboProdTYpe_DropDown(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboProdTYpe.DropDown
        '==============For Product Type DropDown =======================
        Call protypeload()
    End Sub

    Private Sub chkOffSigner_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkOffSigner.CheckedChanged
        chkOnSigner.Checked = False
        chkOffline.Checked = False

    End Sub

    Private Sub chkOnSigner_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkOnSigner.CheckedChanged
        chkOffSigner.Checked = False
        chkOffline.Checked = False
    End Sub

    Private Sub chkOffline_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkOffline.CheckedChanged
        chkOnSigner.Checked = False
        chkOffSigner.Checked = False
    End Sub

    Private Sub txtNoOfPax_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtNoOfPax.TextChanged
        txtNoPax.Text = txtNoOfPax.Text
    End Sub

    Private Sub cboCurrAir_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboCurrAir.SelectedIndexChanged
        cboCostCurr.Text = cboCurrAir.Text
    End Sub

    Public Sub cboCurrAir_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboCurrAir.KeyDown
        cboCostCurr.Text = Nothing
    End Sub

    Private Sub TabControl1_selectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TabCAPI.SelectedIndexChanged


        Dim intTabIndex As Integer = TabCAPI.SelectedIndex
        TabCAPI.TabPages(intTabIndex).Focus()

        If RdBtnAllEntries.Checked = True Then

            Select Case TabCAPI.SelectedIndex

                Case 0
                    FrmPassword.Hide()
                Case 1
                    FrmPassword.Hide()
                Case 2
                    FrmPassword.Hide()
                Case 3
                    FrmPassword.Hide()

                Case 4 ' User clicks on BCD MIS
                    FrmPassword.Hide()
                    'Call load_ClientSpec()

                Case 5 ' User clicks on Abacus Tab

                    If Trim(txtAgentId.Text) <> Nothing Then

                        FrmPassword.Hide()
                        rtxtAbacus.Text = Nothing
                        AbacusSmartKeys.Text = Nothing

                    Else
                        MsgBox(" Please Log-In..", vbCritical + vbOKOnly, " :: TAIS::")
                        txtAgentId.Focus()

                    End If

                Case 6

                    initAccess()
                    AgentSet_MainInit()
                    AgentSet_AccessInit()

                    FrmPassword.txtId.Text = Nothing
                    FrmPassword.txtPassword.Text = Nothing
                    FrmPassword.Show()

                    ControlBox_Close.Visible = True
                    FrmPassword.txtId.Focus()

                Case 7
                    FrmPassword.Hide()
                    txtClientNameSearch.Text = Nothing
                    CcboClientOption.Text = Nothing
                    rdButtonClientN.Checked = False
                    rdButtonClientName.Checked = False
                    RdButtonNonTax.Checked = False
                    RdTaxable.Checked = False
                    frmClientListType()

                Case 8

                    If Trim(txtAgentId.Text) = Nothing Then
                        MsgBox(" Please Log-In..", vbCritical + vbOKOnly, " :: TAIS::")
                        TabCAPI.SelectedIndex = 8
                        txtAgentId.Focus()

                    Else
                        If Trim(txtAgentId.Text) <> "" Or Trim(txtAgentId.Text) <> Nothing Then
                            Dim profAgentInfo = taisLocal.ProfileAgentInfoes.FirstOrDefault(Function(n) n.InitialSignIn = Trim(txtAgentId.Text))

                            If Trim(profAgentInfo.CreditCardAccess) = "Allowed" Then
                                txtDateTime_CC.Text = DateAndTime.Now

                                objResponse = objSession.Send("JD")

                                strErrorCheck = objResponse.GetLineFromBuffer(4)
                                strErrorCheckNew = objResponse.GetLineFromBuffer(2)

                                Dim r = strErrorCheck.IndexOf("MNLPH210M")
                                Dim rIndex = strErrorCheckNew.IndexOf("MNLPH27FB")

                                If r > 0 Then
                                    If objResponse.GetLineFromBuffer(6).IndexOf("A-IN") > 0 Or objResponse.GetLineFromBuffer(5).IndexOf("A-IN") > 0 Then

                                        'objResponse = objSession.Send("JO*")
                                    Else
                                        objResponse = objSession.Send("JUI/O-MNLPH27FB/JI" & Trim(txtAgentId.Text) & "-" & RS3.Fields("GDSSignIn").Value)
                                        If objResponse.GetLineFromBuffer(2).IndexOf("SIGN") > 0 Then

                                            CC_TravllerName.Text = Nothing
                                            CC_TravllerName.Focus()
                                        End If
                                    End If
                                End If

                                If objResponse.GetLineFromBuffer(2).IndexOf("MNLPH27FB") > 0 Or objResponse.GetLineFromBuffer(3).IndexOf("MNLPH27FB") > 0 Then

                                    If objResponse.GetLineFromBuffer(7).IndexOf("PRD") > 0 Or objResponse.GetLineFromBuffer(6).IndexOf("PRD") > 0 Or objResponse.GetLineFromBuffer(5).IndexOf("PRD") > 0 Then

                                        CC_TravllerName.Text = Nothing
                                        CC_TravllerName.Focus()
                                    ElseIf objResponse.GetLineFromBuffer(7).IndexOf("NOT") > 0 Or objResponse.GetLineFromBuffer(6).IndexOf("NOT") > 0 Or objResponse.GetLineFromBuffer(5).IndexOf("NOT") > 0 Then

                                        objResponse = objSession.Send("JI" & Trim(txtAgentId.Text) & "-" & RS3.Fields("GDSSignIn").Value)
                                        If objResponse.GetLineFromBuffer(2).IndexOf("COMPLETE") > 0 Or objResponse.GetLineFromBuffer(1).IndexOf("COMPLETE") > 0 Then

                                            CC_TravllerName.Text = Nothing
                                            CC_TravllerName.Focus()
                                        End If
                                    End If
                                End If
                            Else
                                MsgBox("You do not have access to this Module...Please contact administrator...", vbCritical + vbOKOnly, " :: TAIS::")

                            End If
                        Else
                            MsgBox("Agent ID must not be empty..", , ":::Security Check::")
                            txtAgentId.Text = Nothing
                            txtAgentId.Focus()
                        End If



                    End If
                    '======================SERVICE FEE TAB=====================
                Case 10
                    DGServiceFee.Rows.Clear()

                    Dim DG_SF_DOM As Decimal
                    Dim DG_SF_DOM_CURR As String
                    Dim DG_SF_DOM_LCC As Decimal
                    Dim DG_SF_DOM_LCC_CURR As String
                    Dim DG_SF_REG As Decimal
                    Dim DG_SF_REG_CURR As String
                    Dim DG_SF_INTL As Decimal
                    Dim DG_SF_INTL_CURR As String
                    Dim DG_WITH_VAT As String
                    Dim DG_IF_CONVERT As String
                    Dim ExchangeRate As Decimal
                    Dim DG_SF_AOH As Decimal
                    Dim DG_SF_AOH_CURR As String

                    '================GET EXCHANGE RATE===================
                    Dim curr = taisDB.Currencies.FirstOrDefault(Function(n) n.CurrencyCode = "USD")
                    ExchangeRate = curr.ExchangeRate - 1.5

                    '================GET TABLE VALUES====================
                    Dim clientSpecificFee = dbMIS.ClientSpecificFee.Where(Function(n) n.ProfileNumber <> "").ToList()



            End Select

        End If




        If RdBtnReIssue.Checked = True Then


            Select Case TabCAPI.SelectedIndex

                Case 0
                    FrmPassword.Hide()

                Case 1
                    FrmPassword.Hide()

                Case 2
                    FrmPassword.Hide()

                Case 3 ' User clicks on Abacus Tab

                    Call AbacusConvertionEntries()


                Case 4 ' User clicks on BCD MIS

                    FrmPassword.Hide()
                    txtClientNameSearch.Text = Nothing
                    CcboClientOption.Text = Nothing
                    rdButtonClientN.Checked = False
                    rdButtonClientName.Checked = False
                    RdButtonNonTax.Checked = False
                    RdTaxable.Checked = False
                    frmClientListType()


            End Select


        End If


    End Sub


    Private Sub AbacusConvertionEntries()

        FrmPassword.Hide()
        rtxtAbacus.Text = Nothing
        AbacusSmartKeys.Text = Nothing


        If RdBtnAllEntries.Checked = True Then

            If Trim(txtBA.Text) = Nothing Or Trim(txtBA.Text) = "" Then
                MsgBox("Please Log-In or Contact Administrator...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 0
                txtAgentId.Focus()
                sendpnrError = 1

            ElseIf (Trim(txtClientNo.Text) = Nothing Or Trim(txtClientNo.Text) = "") Then
                MsgBox("Client Number must not be Empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 0
                sendpnrError = 1

            ElseIf (Trim(txtSellingFare.Text) = "" Or Trim(txtSellingFare.Text) = Nothing) Then
                MsgBox("Selling Fare must not be empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 1
                txtSellingFare.Focus()
                sendpnrError = 1

            ElseIf (Trim(txtNetTicket.Text) = "" Or Trim(txtNetTicket.Text) = Nothing) Then
                MsgBox("Net Ticket must not be empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 1
                txtNetTicket.Focus()
                sendpnrError = 1

            ElseIf (Trim(txtTripType.Text) = "" Or Trim(txtTripType.Text) = Nothing) Then
                MsgBox("Trip Type must not be empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 1
                txtTripType.Focus()
                sendpnrError = 1

            ElseIf (Trim(txt_eticket.Text) = "" Or Trim(txt_eticket.Text) = Nothing) Then
                MsgBox("E-Ticket must not be empty...", , ":::TAIS:::")
                TabCAPI.SelectedIndex = 1
                txt_eticket.Focus()
                sendpnrError = 1

            ElseIf (Trim(txtDateSegment.Text) = "" Or Trim(txtDateSegment.Text) = Nothing) Then
                MsgBox("Retain Date segment must not be empty..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                sendpnrError = 1

            ElseIf ((RdDom.Checked = False And RdIntl.Checked = False And RdReg.Checked = False)) Then
                MsgBox("Please flag a segment if Domestic, Regional or International for AIR transaction. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 1
                sendpnrError = 1


            ElseIf (Trim(txtNoOfPax.Text) = Nothing Or Trim(txtNoOfPax.Text) = "") Then
                MsgBox("Number of Pax must not be empty..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 1
                txtNoOfPax.Focus()
                sendpnrError = 1

            ElseIf (Trim(cboCurrAir.Text) = Nothing Or Trim(cboCurrAir.Text) = "") Then
                MsgBox("Currency must not be empty...", , ":::TAIS:::")
                sendpnrError = 1
                TabCAPI.SelectedIndex = 1
                cboCurrAir.Focus()


            ElseIf (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 0) And (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 13) Then
                MsgBox("Incomplete details Non-Air Transactions.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 2
                sendpnrError = 1

            ElseIf (Trim(TxtTravEmail.Text) = Nothing Or Trim(TxtTravEmail.Text) = "") And TOEGCheck <> 1 Then

                MsgBox("TOEG entry must not be Empty...", , ":::TAIS:::")
                sendpnrError = 1
                TabCAPI.SelectedIndex = 3
                TxtTravEmail.Focus()
                sendpnrError = 1


            ElseIf ((txtEmployeeNo.BackColor = Color.Yellow And Trim(txtEmployeeNo.Text) = Nothing) Or
                      (txtTravellerName.BackColor = Color.Yellow And Trim(txtTravellerName.Text) = Nothing) Or
                      (txtLowFare.BackColor = Color.Yellow And Trim(txtLowFare.Text) = Nothing) Or
                      (txtCustSpecLowFare.BackColor = Color.Yellow And Trim(txtCustSpecLowFare.Text) = Nothing) Or
                      (txtCustSpecHighFare.BackColor = Color.Yellow And Trim(txtCustSpecHighFare.Text) = Nothing) Or
                      (txtRefFare.BackColor = Color.Yellow And Trim(txtRefFare.Text) = Nothing) Or
                      (txtTravellerStat.BackColor = Color.Yellow And Trim(txtTravellerStat.Text) = Nothing) Or
                      (txtCostCenterCode.BackColor = Color.Yellow And Trim(txtCostCenterCode.Text) = Nothing) Or
                      (txtProjectNo.BackColor = Color.Yellow And Trim(txtProjectNo.Text) = Nothing) Or
                      (txtDeptNo.BackColor = Color.Yellow And Trim(txtDeptNo.Text) = Nothing) Or
                      (txtOrderRef.BackColor = Color.Yellow And Trim(txtOrderRef.Text) = Nothing) Or
                      (txtApprover.BackColor = Color.Yellow And Trim(txtApprover.Text) = Nothing) Or
                      (txtApproverCode.BackColor = Color.Yellow And Trim(txtApproverCode.Text) = Nothing) Or
                      (txtMgrSuperior.BackColor = Color.Yellow And Trim(txtMgrSuperior.Text) = Nothing) Or
                      (txtReasonofTrip.BackColor = Color.Yellow And Trim(txtReasonofTrip.Text) = Nothing) Or
                      (txtMajorClass.BackColor = Color.Yellow And Trim(txtMajorClass.Text) = Nothing) Or
                      (txtStopOverTRF.BackColor = Color.Yellow And Trim(txtStopOverTRF.Text) = Nothing) Or
                      (txtTourCode.BackColor = Color.Yellow And Trim(txtTourCode.Text) = Nothing) Or
                      (txtFFLYR.BackColor = Color.Yellow And Trim(txtFFLYR.Text) = Nothing) Or
                      (txtHotelReasonCD.BackColor = Color.Yellow And Trim(txtHotelReasonCD.Text) = Nothing) Or
                      (txtHotelBookedF_N.BackColor = Color.Yellow And Trim(txtHotelBookedF_N.Text) = Nothing) Or
                      (txtAirNoReasonCD.BackColor = Color.Yellow And Trim(txtAirNoReasonCD.Text) = Nothing) Or
                      (txtCarBookedFlag.BackColor = Color.Yellow And Trim(txtCarBookedFlag.Text) = Nothing) Or
                      (txtSalesChannel.BackColor = Color.Yellow And Trim(txtSalesChannel.Text) = Nothing) Or
                      (txtRecordType.BackColor = Color.Yellow And Trim(txtRecordType.Text) = Nothing) Or
                      (txtCSData1.BackColor = Color.Yellow And Trim(txtCSData1.Text) = Nothing) Or
                      (txtCSData2.BackColor = Color.Yellow And Trim(txtCSData2.Text) = Nothing) Or
                      (txtCSData3.BackColor = Color.Yellow And Trim(txtCSData3.Text) = Nothing) Or
                      (txtCSData4.BackColor = Color.Yellow And Trim(txtCSData4.Text) = Nothing) Or
                       (txtCSData5.BackColor = Color.Yellow And Trim(txtCSData5.Text) = Nothing) Or
                       (txtCSData6.BackColor = Color.Yellow And Trim(txtCSData6.Text) = Nothing) Or
                       (txtCSData7.BackColor = Color.Yellow And Trim(txtCSData7.Text) = Nothing) Or
                       (txtCSData8.BackColor = Color.Yellow And Trim(txtCSData8.Text) = Nothing) Or
                      (txtCSData12.BackColor = Color.Yellow And Trim(txtCSData12.Text) = Nothing)) And (Trim(txtAccess.Text) = "1") Then

                MsgBox("kindly fill up all MIS Mandatory Fields and please double check the conditional statement..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 4
                sendpnrError = 1


            ElseIf ((txtReasonCode.BackColor = Color.Yellow And Trim(txtReasonCode.Text) = Nothing) Or
                   (txtRCodeDenied.BackColor = Color.Yellow And Trim(txtRCodeDenied.Text) = Nothing)) And (Trim(txtAccess.Text) = "1") Then

                MsgBox("Please fill up Fare Type Reason Codes..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
                TabCAPI.SelectedIndex = 1
                sendpnrError = 1

            Else

                If Trim(TxtTravEmail.Text) <> Nothing Then
                    rtxtAbacus.Text = "5Y¥TOEG-" & Trim(TxtTravEmail.Text) + vbCrLf
                    AbacusSmartKeys.Text = "5Y¥TOEG-" & Trim(TxtTravEmail.Text) + "^e"
                End If


                CHECK_RS()

                SQL_QUERY = "Select * from BCDMIS..ClientSpecific where GlobalCustNo =  '" & Trim(txtGlobalCustNo.Text) & "'"
                RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS

                    If Not RS.EOF Then

                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥TID-" & Trim((RS.Fields("TSPID").Value).ToString()) & "-" & Trim((RS.Fields("SMDID").Value).ToString()) & "-" & Trim((RS.Fields("GlobalCustNo").Value).ToString()) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥TID-" & Trim((RS.Fields("TSPID").Value).ToString()) & "-" & Trim((RS.Fields("SMDID").Value).ToString()) & "-" & Trim((RS.Fields("GlobalCustNo").Value).ToString()) + "^e"



                    End If

                    RS.Close()

                End With




                CHECK_RS3()

                SQL_QUERY = "Select * from BCDMIS..MIDFields where clientGCN  = '" & Trim(GlobalCustNO) & "'"
                RS3.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS3

                    If Not RS3.EOF Then

                        Do While Not RS3.EOF


                            If Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then


                                ' Accomodation Reason Code'
                                If Trim(RS3.Fields("DataItem").Value) = "D01" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtAirNoReasonCD.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtAirNoReasonCD.Text) + "^e"


                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_AirNoAccomReasonCD where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) & Trim(txtAirNoReasonCD.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) & Trim(txtAirNoReasonCD.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If


                                'Approval Code

                                If Trim(RS3.Fields("DataItem").Value) = "D02" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtApproverCode.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtApproverCode.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ApprovalCode where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) & Trim(txtApproverCode.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) & Trim(txtApproverCode.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With


                                End If


                                'Approver
                                If Trim(RS3.Fields("DataItem").Value) = "D03" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtApprover.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtApprover.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_Approver where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtApprover.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtApprover.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If


                                'Client Data 1
                                If Trim(RS3.Fields("DataItem").Value) = "D04" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData1.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData1.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData1 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData1.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData1.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With


                                End If


                                'Client Data 2
                                If Trim(RS3.Fields("DataItem").Value) = "D05" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData2.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData2.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData2 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData2.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData2.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With


                                End If


                                'Client Data 3
                                If Trim(RS3.Fields("DataItem").Value) = "D06" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData3.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData3.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData3 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData3.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData3.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With



                                End If


                                'Client Data 4
                                If Trim(RS3.Fields("DataItem").Value) = "D07" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData4 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData4.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData4.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If


                                'Client Data 5
                                If Trim(RS3.Fields("DataItem").Value) = "D20" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData5 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData5.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData5.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If



                                'Client Data 6
                                If Trim(RS3.Fields("DataItem").Value) = "D21" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData6 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData6.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData6.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If

                                'Client Data 7
                                If Trim(RS3.Fields("DataItem").Value) = "D22" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData7 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData7.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData7.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If



                                'Client Data 8
                                If Trim(RS3.Fields("DataItem").Value) = "D23" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData8 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData8.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData8.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If

                                'Client Data 12
                                If Trim(RS3.Fields("DataItem").Value) = "D24" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCSData4.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ClientData12 where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData12.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCSData12.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If



                                'Cost Center Code
                                If Trim(RS3.Fields("DataItem").Value) = "D08" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCostCenterCode.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtCostCenterCode.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_CostCenter where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCostCenterCode.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtCostCenterCode.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With
                                End If



                                'Department Number
                                If Trim(RS3.Fields("DataItem").Value) = "D09" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtDeptNo.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtDeptNo.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_DeptNo where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtDeptNo.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtDeptNo.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With




                                End If

                                'Employee Number
                                If Trim(RS3.Fields("DataItem").Value) = "D10" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtEmployeeNo.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtEmployeeNo.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_EmpNo where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtEmployeeNo.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtEmployeeNo.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If


                                'Manager Superior
                                If Trim(RS3.Fields("DataItem").Value) = "D11" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtMgrSuperior.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtMgrSuperior.Text) + "^e"


                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_MgrSup where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtMgrSuperior.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtMgrSuperior.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If


                                'Order Reference
                                If Trim(RS3.Fields("DataItem").Value) = "D12" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtOrderRef.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtOrderRef.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_OrderRef where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtOrderRef.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtOrderRef.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If


                                'Project Number
                                If Trim(RS3.Fields("DataItem").Value) = "D13" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtProjectNo.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtProjectNo.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ProjNo where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtProjectNo.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtProjectNo.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If

                                'ReasonofTrip
                                If Trim(RS3.Fields("DataItem").Value) = "D14" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then
                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtReasonofTrip.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtReasonofTrip.Text) + "^e"


                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ReasonofTrip where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtReasonofTrip.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtReasonofTrip.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With


                                End If

                                'Traveller Status
                                If Trim(RS3.Fields("DataItem").Value) = "D15" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then

                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtTravellerStat.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtTravellerStat.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_TravStatus where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtTravellerStat.Text) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtTravellerStat.Text) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If


                                ' Low Fare

                                If Trim(RS3.Fields("DataItem").Value) = "D19" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then

                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtTravellerStat.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtTravellerStat.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_LowFare where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim(Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(cboCurrAir.Text) + "/" + Trim(txtSellingFare.Text) + "/" + Trim(txtLowFare.Text)) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim(Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(cboCurrAir.Text) + "/" + Trim(txtSellingFare.Text) + "/" + Trim(txtLowFare.Text)) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If



                                ' Curr Code

                                If Trim(RS3.Fields("DataItem").Value) = "D18" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then

                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtTravellerStat.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtTravellerStat.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_CurrCode where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim(Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(cboCurrAir.Text) + "/" + Trim(txtSellingFare.Text) + "/" + Trim(txtLowFare.Text)) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim(Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(cboCurrAir.Text) + "/" + Trim(txtSellingFare.Text) + "/" + Trim(txtLowFare.Text)) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If


                                ' Air Code

                                If Trim(RS3.Fields("DataItem").Value) = "D17" And Trim(RS3.Fields("Required").Value).ToString = "Mandatory" Then

                                    'rtxtAbacus.Text = rtxtAbacus.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtTravellerStat.Text) + vbCrLf
                                    'AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*" + Trim(RS3.Fields("GEMS").Value) & "*BCD/" & Trim((RS3.Fields("CustomerFieldName").Value).Replace(" ", "")) & "/" & Trim(txtTravellerStat.Text) + "^e"

                                    CHECK_RS1()
                                    SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where GCN  = '" & Trim(GlobalCustNO) & "'"
                                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                                    With RS1
                                        If Not RS1.EOF Then
                                            rtxtAbacus.Text = rtxtAbacus.Text + Trim(Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtRCodeDenied.Text)) + vbCrLf
                                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + Trim(Trim((RS1.Fields("ABR_Code").Value).ToString()) + Trim(txtRCodeDenied.Text)) + "^e"
                                            RS1.MoveNext()
                                        End If
                                        RS1.Close()
                                    End With

                                End If




                            End If

                            RS3.MoveNext()

                        Loop


                    End If
                    RS3.Close()
                End With



                'If Trim(txtSellingFare.Text) <> Nothing And Trim(txtLowFare.Text) <> Nothing And Trim(txtRCodeDenied.Text) <> Nothing And Trim(cboCurrAir.Text) <> Nothing Then
                '    rtxtAbacus.Text = rtxtAbacus.Text + "5¥*COMPFARE*BCD/" & Trim(cboCurrAir.Text) & "/" & Trim(txtSellingFare.Text) & "/" & Trim(txtLowFare.Text) + vbCrLf
                '    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*COMPFARE*BCD/" & Trim(cboCurrAir.Text) & "/" & Trim(txtSellingFare.Text) & "/" & Trim(txtLowFare.Text) + "^e"
                '    rtxtAbacus.Text = rtxtAbacus.Text + "5¥*AIRCODE*BCD/" & Trim(cboCurrAir.Text) + vbCrLf
                '    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥*AIRCODE*BCD/" & Trim(cboCurrAir.Text) + "^e"
                'End If





                If Trim(txtClientNo.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥CN/" & strClientNumber + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥CN/" & strClientNumber + "^e"
                End If


                If Trim(txtDiv.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥DIV/" & Trim(txtDivNo.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥DIV/" & Trim(txtDivNo.Text) + "^e"
                End If


                If Trim(txtBA.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥BA/" & BA.Remove(3, 1).Insert(3, "2") + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥BA/" & BA.Remove(3, 1).Insert(3, "2") + "^e"
                End If


                If Trim(cboTicketingAgent.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥TA/" & cboTicketingAgent.Text.Remove(3, 1).Insert(3, "2") + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥TA/" & cboTicketingAgent.Text.Remove(3, 1).Insert(3, "2") + "^e"
                End If


                If Trim(cboSupplierCode.Text) <> Nothing And Trim(cboAirlineCode.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥NA/" & Trim(cboAirlineCode.Text) & "/PC1/V" & Trim(cboSupplierCode.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥NA/" & Trim(cboAirlineCode.Text) & "/PC1/V" & Trim(cboSupplierCode.Text) + "^e"
                End If






                If Trim(txtPublishFare.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥PF/" & Trim(txtPublishFare.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥PF/" & Trim(txtPublishFare.Text) + "^e"
                End If

                If Trim(txtSellingFare.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥SF/" & Trim(txtSellingFare.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥SF/" & Trim(txtSellingFare.Text) + "^e"
                End If


                If Trim(txtRefFare.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥RF/" & Trim(txtRefFare.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥RF/" & Trim(txtRefFare.Text) + "^e"

                End If


                If Trim(txtLowFare.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥LF/" & Trim(txtLowFare.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥LF/" & Trim(txtLowFare.Text) + "^e"
                End If


                If Trim(txtExpCode.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥EC/" & Trim(txtExpCode.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥EC/" & Trim(txtExpCode.Text) + "^e"
                End If


                If Trim(txtCommAmt.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥CM/" & Trim(txtCommAmt.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥CM/" & Trim(txtCommAmt.Text) + "^e"
                End If


                If Trim(txtComPercentage.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥CM/P" & Trim(txtComPercentage.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥CM/P" & Trim(txtComPercentage.Text) + "^e"
                End If


                If Trim(cboBookerName.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥CD/" & Trim(cboBookerName.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥CD/" & Trim(cboBookerName.Text) + "^e"
                End If


                If Trim(txtAuthorizedNo.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥PO/" & Trim(txtAuthorizedNo.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥PO/" & Trim(txtAuthorizedNo.Text) + "^e"
                End If


                If Trim(txtCCGL.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥GSA/" & Trim(txtCCGL.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥GSA/" & Trim(txtCCGL.Text) + "^e"
                End If


                If Trim(txtLineNo.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥GRP/" & Trim(txtLineNo.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥GRP/" & Trim(txtLineNo.Text) + "^e"
                End If


                '=======================================
                '==Convertion for Non-Air Transactions
                '=======================================

                If DGW1.Rows.Count <> 0 And DGW1.Columns.Count <> 0 Then

                    For i = 0 To DGW1.Rows.Count - 1

                        For x = 0 To DGW1.Columns.Count - 1

                            If x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                NoPax = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                NoPax = ""
                            End If

                            If x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFPCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFPCode = ""
                            End If

                            If x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFVCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFVCode = ""
                            End If

                            If x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCPercentage = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCPercentage = ""

                            End If

                            If x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCurr = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCurr = ""
                            End If

                            If x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCostAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCostAmt = ""

                            End If

                            If x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFSFAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFSFAmt = ""
                            End If

                            If x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                DIn = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf (x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "") Then
                                DIn = ""
                            End If

                            If x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                Dout = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                Dout = ""
                            End If

                            If DIn <> "" And Dout <> "" Then
                                DTvl = "/TVL" & Trim(DIn) & "-" & Trim(Dout)
                            ElseIf DIn <> "" And Dout = "" Then
                                DTvl = "/TVL" & Trim(DIn)
                            Else
                                DTvl = ""
                            End If

                            If x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSRf = "/R" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSRf = ""
                            End If

                            If x = 10 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSLf = "/L" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSLf = ""
                            End If

                            If x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSEc = "/E" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSEc = ""
                            End If

                            If x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                proType = "*" & i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                proType = ""
                            End If

                            If x = 12 Then

                                TF = Trim("PC" & TFPCode & "/V" & TFVCode & "/CP" & TFCPercentage & "/A" & TFCurr & TFCostAmt & "/SF" & TFSFAmt & MSRf & MSLf & MSEc & DTvl & "/NP" & NoPax)
                                rtxtAbacus.Text = rtxtAbacus.Text + "5¥MS/" + TF + vbCrLf
                                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥MS/" + TF + "^e"

                                If proType <> Nothing Then
                                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF5/" + proType + vbCrLf
                                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF5/" + proType + "^e"
                                End If

                            End If

                            If x = 13 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then

                                FSegmentType = "*" & Trim(txtNoofTkt.Text) + i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)

                                If Trim(FSegmentType) <> Nothing Then

                                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF2/" + FSegmentType + vbCrLf
                                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF2/" + FSegmentType + "^e"

                                End If

                            ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                FSegmentType = ""
                            End If

                            proType = ""

                        Next

                    Next

                End If


                '=====Check Flag Segment========
                If RdDom.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF1/" & "BSP-Domestic" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF1/" & "BSP-Domestic" + "^e"
                ElseIf RdIntl.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF1/" & "BSP-International" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF1/" & "BSP-International" + "^e"
                ElseIf RdReg.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF1/" & "BSP-Regional" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF1/" & "BSP-Regional" + "^e"
                End If


                '=====Check travel Type Segment========
                If MRdom.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF2/" & "Non BSP-Domestic" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF2/" & "Non BSP-Domestic" + "^e"
                ElseIf MRIntl.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF2/" & "Non BSP-International" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF2/" & "Non BSP-International" + "^e"
                ElseIf MRReg.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF2/" & "Non BSP-Regional" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF2/" & "Non BSP-Regional" + "^e"
                End If


                If Trim(txtTBSNo.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF3/" & Trim(txtTBSNo.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF3/" & Trim(txtTBSNo.Text) + "^e"
                End If

                If Trim(txtEmployee.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF4/" & Trim(txtEmployee.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF4/" & Trim(txtEmployee.Text) + "^e"
                End If


                If chkOffSigner.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF6/" & "Off-Signer" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF6/" & "Off-Signer" + "^e"
                ElseIf chkOnSigner.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF6/" & "On-Signer" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF6/" & "On-Signer" + "^e"
                ElseIf chkOffline.Checked = True Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF6/" & "Offline" + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF6/" & "Offline" + "^e"
                End If


                If Trim(cboConventionName.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF7/" & Trim(cboConventionName.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF7/" & Trim(cboConventionName.Text) + "^e"
                End If


                If Trim(txtHotelName.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF18/" & Trim(txtHotelName.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF18/" & Trim(txtHotelName.Text) + "^e"
                End If

                If Trim(txtConventionPlace.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF19/" & Trim(txtConventionPlace.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF19/" & Trim(txtConventionPlace.Text) + "^e"
                End If


                If Trim(txtDateofConvention.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF20/" & Trim(txtDateofConvention.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF20/" & Trim(txtDateofConvention.Text) + "^e"
                End If

                If Trim(txtccDetails.Text) <> Nothing Then
                    rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF22/" & Trim(txtccDetails.Text) + vbCrLf
                    AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF22/" & Trim(txtccDetails.Text) + "^e"
                End If


                If Trim(txtAccess.Text) <> 4 Then


                    '==========================================
                    ' Convertion for BCD MIS
                    '==========================================




                    If Trim(txtGlobalCustNo.Text) <> Nothing Or Trim(txtLocalCustNo.Text) <> Nothing Or Trim(txtEmployeeNo.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF30/" & Trim(txtGlobalCustNo.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF30/" & Trim(txtGlobalCustNo.Text) + "^e"
                    End If

                    If Trim(txtLocalCustNo.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF31/" & Trim(txtLocalCustNo.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF31/" & Trim(txtLocalCustNo.Text) + "^e"
                    End If

                    If Trim(txtEmployeeNo.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF32/" & Trim(txtEmployeeNo.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF32/" & Trim(txtEmployeeNo.Text) + "^e"
                    End If


                    If Trim(txtTravellerStat.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF33/" & Trim(txtTravellerStat.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF33/" & Trim(txtTravellerStat.Text) + "^e"
                    End If

                    If Trim(txtCostCenterCode.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF34/" & Trim(txtCostCenterCode.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF34/" & Trim(txtCostCenterCode.Text) + "^e"
                    End If

                    If Trim(txtProjectNo.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF35/" & Trim(txtProjectNo.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF35/" & Trim(txtProjectNo.Text) + "^e"
                    End If

                    If Trim(txtDeptNo.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF36/" & Trim(txtDeptNo.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF36/" & Trim(txtDeptNo.Text) + "^e"
                    End If

                    If Trim(txtOrderRef.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF37/" & Trim(txtOrderRef.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF37/" & Trim(txtOrderRef.Text) + "^e"
                    End If

                    If Trim(txtApprover.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF38/" & Trim(txtApprover.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF38/" & Trim(txtApprover.Text) + "^e"
                    End If

                    If Trim(txtApproverCode.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF39/" & Trim(txtApproverCode.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF39/" & Trim(txtApproverCode.Text) + "^e"
                    End If

                    If Trim(txtMgrSuperior.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF40/" & Trim(txtMgrSuperior.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF40/" & Trim(txtMgrSuperior.Text) + "^e"
                    End If

                    If Trim(txtReasonofTrip.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF41/" & Trim(txtReasonofTrip.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF41/" & Trim(txtReasonofTrip.Text) + "^e"
                    End If

                    If Trim(txtMajorClass.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF42/" & Trim(txtMajorClass.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF42/" & Trim(txtMajorClass.Text) + "^e"
                    End If

                    If Trim(txtStopOverTRF.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF43/" & Trim(txtStopOverTRF.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF43/" & Trim(txtStopOverTRF.Text) + "^e"
                    End If

                    If Trim(txtTourCode.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF44/" & Trim(txtTourCode.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF44/" & Trim(txtTourCode.Text) + "^e"
                    End If

                    If Trim(txtReasonCode.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF45/" & Trim(txtReasonCode.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF45/" & Trim(txtReasonCode.Text) + "^e"
                    End If

                    If Trim(txtRCodeDenied.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF46/" & Trim(txtRCodeDenied.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF46/" & Trim(txtRCodeDenied.Text) + "^e"
                    End If

                    If Trim(txtFFLYR.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF47/" & Trim(txtFFLYR.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF47/" & Trim(txtFFLYR.Text) + "^e"
                    End If

                    If Trim(txtHotelBookedF_N.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF48/" & Trim(txtHotelBookedF_N.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF48/" & Trim(txtHotelBookedF_N.Text) + "^e"
                    End If

                    If Trim(txtAirNoReasonCD.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF49/" & Trim(txtAirNoReasonCD.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF49/" & Trim(txtAirNoReasonCD.Text) + "^e"
                    End If

                    If Trim(txtHotelReasonCD.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF50/" & Trim(txtHotelReasonCD.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF50/" & Trim(txtHotelReasonCD.Text) + "^e"
                    End If

                    If Trim(txtCarBookedFlag.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF51/" & Trim(txtCarBookedFlag.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF51/" & Trim(txtCarBookedFlag.Text) + "^e"
                    End If

                    If Trim(txtSalesChannel.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF52/" & Trim(txtSalesChannel.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF52/" & Trim(txtSalesChannel.Text) + "^e"
                    End If

                    If Trim(txtRecordType.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF53/" & Trim(txtRecordType.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF53/" & Trim(txtRecordType.Text) + "^e"
                    End If

                    If Trim(txtCSData1.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF54/" & Trim(txtCSData1.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF54/" & Trim(txtCSData1.Text) + "^e"
                    End If

                    If Trim(txtCSData2.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF55/" & Trim(txtCSData2.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF55/" & Trim(txtCSData2.Text) + "^e"
                    End If

                    If Trim(txtCSData3.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF56/" & Trim(txtCSData3.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF56/" & Trim(txtCSData3.Text) + "^e"
                    End If

                    If Trim(txtCSData4.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF57/" & Trim(txtCSData4.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF57/" & Trim(txtCSData4.Text) + "^e"
                    End If


                    If Trim(txtCSData5.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF62/" & Trim(txtCSData5.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF62/" & Trim(txtCSData5.Text) + "^e"
                    End If

                    If Trim(txtCSData6.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF61/" & Trim(txtCSData6.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF61/" & Trim(txtCSData6.Text) + "^e"
                    End If

                    If Trim(txtCSData7.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF59/" & Trim(txtCSData7.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF59/" & Trim(txtCSData7.Text) + "^e"
                    End If

                    If Trim(txtCSData8.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF60/" & Trim(txtCSData8.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF60/" & Trim(txtCSData8.Text) + "^e"
                    End If


                    If Trim(txtCSData12.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF58/" & Trim(txtCSData12.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF58/" & Trim(txtCSData12.Text) + "^e"
                    End If

                    If Trim(txtTripType.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF80/" & Trim(txtTripType.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF80/" & Trim(txtTripType.Text) + "^e"
                    End If

                    If Trim(txtNetTicket.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF85/" & Trim(txtNetTicket.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF85/" & Trim(txtNetTicket.Text) + "^e"
                    End If

                    If Trim(txtCustSpecLowFare.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF86/" & Trim(txtCustSpecLowFare.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF86/" & Trim(txtCustSpecLowFare.Text) + "^e"
                    End If

                    If Trim(txtCustSpecHighFare.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF87/" & Trim(txtCustSpecHighFare.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF87/" & Trim(txtCustSpecHighFare.Text) + "^e"
                    End If

                    If Trim(txt_eticket.Text) <> Nothing Then
                        rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF88/" & Trim(txt_eticket.Text) + vbCrLf
                        AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF88/" & Trim(txt_eticket.Text) + "^e"
                    End If


                End If

            End If

        End If


        If RdBtnReIssue.Checked = True Then

            If Trim(cboTicketingAgent.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥TA/" & cboTicketingAgent.Text.Remove(3, 1).Insert(3, "2") + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥TA/" & cboTicketingAgent.Text.Remove(3, 1).Insert(3, "2") + "^e"
            End If

            If Trim(cboSupplierCode.Text) <> Nothing And Trim(cboAirlineCode.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥NA/" & Trim(cboAirlineCode.Text) & "/PC1/V" & Trim(cboSupplierCode.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥NA/" & Trim(cboAirlineCode.Text) & "/PC1/V" & Trim(cboSupplierCode.Text) + "^e"
            End If

            If Trim(txtPublishFare.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥PF/" & Trim(txtPublishFare.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥PF/" & Trim(txtPublishFare.Text) + "^e"
            End If

            If Trim(txtSellingFare.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥SF/" & Trim(txtSellingFare.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥SF/" & Trim(txtSellingFare.Text) + "^e"
            End If

            If Trim(txtRefFare.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥RF/" & Trim(txtRefFare.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥RF/" & Trim(txtRefFare.Text) + "^e"
            End If

            If Trim(txtLowFare.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥LF/" & Trim(txtLowFare.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥LF/" & Trim(txtLowFare.Text) + "^e"
            End If

            If Trim(txtExpCode.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥EC/" & Trim(txtExpCode.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥EC/" & Trim(txtExpCode.Text) + "^e"
            End If

            If Trim(txtCommAmt.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥CM/" & Trim(txtCommAmt.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥CM/" & Trim(txtCommAmt.Text) + "^e"
            End If

            If Trim(txtComPercentage.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥CM/P" & Trim(txtComPercentage.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥CM/P" & Trim(txtComPercentage.Text) + "^e"
            End If

            If Trim(cboBookerName.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥CD/" & Trim(cboBookerName.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥CD/" & Trim(cboBookerName.Text) + "^e"
            End If

            If Trim(txtAuthorizedNo.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥PO/" & Trim(txtAuthorizedNo.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥PO/" & Trim(txtAuthorizedNo.Text) + "^e"
            End If

            If Trim(txtCCGL.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥GSA/" & Trim(txtCCGL.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥GSA/" & Trim(txtCCGL.Text) + "^e"
            End If

            If Trim(txtLnNo.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥GRP/" & Trim(txtLnNo.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥GRP/" & Trim(txtLnNo.Text) + "^e"
            End If



            '=======================================
            '==Convertion for Non-Air Transactions
            '=======================================

            If DGW1.Rows.Count <> 0 And DGW1.Columns.Count <> 0 Then

                For i = 0 To DGW1.Rows.Count - 1

                    For x = 0 To DGW1.Columns.Count - 1

                        If x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            NoPax = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            NoPax = ""
                        End If

                        If x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            TFPCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            TFPCode = ""
                        End If

                        If x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            TFVCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            TFVCode = ""
                        End If

                        If x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            TFCPercentage = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            TFCPercentage = ""

                        End If

                        If x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            TFCurr = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            TFCurr = ""
                        End If

                        If x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            TFCostAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            TFCostAmt = ""

                        End If

                        If x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            TFSFAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            TFSFAmt = ""
                        End If

                        If x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            DIn = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf (x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "") Then
                            DIn = ""
                        End If

                        If x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            Dout = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            Dout = ""
                        End If

                        If DIn <> "" And Dout <> "" Then
                            DTvl = "/TVL" & Trim(DIn) & "-" & Trim(Dout)
                        ElseIf DIn <> "" And Dout = "" Then
                            DTvl = "/TVL" & Trim(DIn)
                        Else
                            DTvl = ""
                        End If

                        If x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            MSRf = "/R" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            MSRf = ""
                        End If

                        If x = 10 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            MSLf = "/L" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            MSLf = ""
                        End If

                        If x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            MSEc = "/E" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                            MSEc = ""
                        End If

                        If x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            proType = "*" & i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                        ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                            proType = ""
                        End If

                        If x = 12 Then
                            TF = Trim("PC" & TFPCode & "/V" & TFVCode & "/CP" & TFCPercentage & "/A" & TFCurr & TFCostAmt & "/SF" & TFSFAmt & MSRf & MSLf & MSEc & DTvl & "/NP" & NoPax)
                            rtxtAbacus.Text = rtxtAbacus.Text + "5¥MS/" + TF + vbCrLf
                            AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥MS/" + TF + "^e"

                            If proType <> Nothing Then
                                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF5/" + proType + vbCrLf
                                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF5/" + proType + "^e"
                            End If

                        End If

                    Next
                Next

            End If


            '=====Check Flag Segment========
            If RdDom.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF1/" & "BSP-Domestic" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF1/" & "BSP-Domestic" + "^e"
            ElseIf RdIntl.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF1/" & "BSP-International" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF1/" & "BSP-International" + "^e"
            ElseIf RdReg.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF1/" & "BSP-Regional" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF1/" & "BSP-Regional" + "^e"
            End If

            '=====Check travel Type Segment========
            If MRdom.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF2/" & "Non BSP-Domestic" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF2/" & "Non BSP-Domestic" + "^e"
            ElseIf MRIntl.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF2/" & "Non BSP-International" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF2/" & "Non BSP-International" + "^e"
            ElseIf MRReg.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF2/" & "Non BSP-Regional" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF2/" & "Non BSP-Regional" + "^e"
            End If

            If Trim(txtTBSNo.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF3/" & Trim(txtTBSNo.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF3/" & Trim(txtTBSNo.Text) + "^e"
            End If

            If Trim(txtEmployee.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF4/" & Trim(txtEmployee.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF4/" & Trim(txtEmployee.Text) + "^e"
            End If

            If chkOffSigner.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF6/" & "Off-Signer" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF6/" & "Off-Signer" + "^e"
            ElseIf chkOnSigner.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF6/" & "On-Signer" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF6/" & "On-Signer" + "^e"
            ElseIf chkOffline.Checked = True Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF6/" & "Offline" + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF6/" & "Offline" + "^e"
            End If


            If Trim(cboConventionName.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF7/" & Trim(cboConventionName.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF7/" & Trim(cboConventionName.Text) + "^e"
            End If


            If Trim(txtHotelName.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF18/" & Trim(txtHotelName.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF18/" & Trim(txtHotelName.Text) + "^e"
            End If

            If Trim(txtConventionPlace.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF19/" & Trim(txtConventionPlace.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF19/" & Trim(txtConventionPlace.Text) + "^e"
            End If

            If Trim(txtDateofConvention.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF20/" & Trim(txtDateofConvention.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF20/" & Trim(txtDateofConvention.Text) + "^e"
            End If

            If Trim(txtccDetails.Text) <> Nothing Then
                rtxtAbacus.Text = rtxtAbacus.Text + "5¥FF22/" & Trim(txtccDetails.Text) + vbCrLf
                AbacusSmartKeys.Text = AbacusSmartKeys.Text + "5¥FF22/" & Trim(txtccDetails.Text) + "^e"
            End If


        End If


    End Sub


    Private Sub btnAddSFSegment_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddSFSegment.Click

        If (Trim(txtSFSegment.Text) <> Nothing And Trim(cboSegment.Text) <> Nothing And
           Trim(txtReasonCode.Text) <> Nothing And Trim(txtRCodeDenied.Text) <> Nothing And
           Trim(txtMajorClass.Text) <> Nothing) Then

            If (Trim(txtBoxNetFare.Text) <> Nothing) Then
                NetFareSegment.Add("NF/" & "*" & cboSegment.Text & "/" & txtBoxNetFare.Text)
                RTFares.Text = RTFares.Text + Trim("NF/" & "*" & cboSegment.Text & "/" & txtBoxNetFare.Text) + vbCrLf
            End If

            Segment.Add("*" & cboSegment.Text & "/" & txtSFSegment.Text)
            RTSF.Text = RTSF.Text + Trim("*" & cboSegment.Text & "/" & txtSFSegment.Text) + vbCrLf

            If (Trim(txtLowFare.Text) <> Nothing And Trim(txtRefFare.Text) <> Nothing) And (Trim(txtCustSpecLowFare.Text) <> Nothing And Trim(txtCustSpecHighFare.Text) <> Nothing And Trim(txtMajorClass.Text) <> Nothing) Then

                SegmentFareCode.Add("FF42/" & "*" & cboSegment.Text & "/" & txtMajorClass.Text)
                SegmentFareCode.Add("FF45/" & "*" & cboSegment.Text & "/" & txtReasonCode.Text)
                SegmentFareCode.Add("FF46/" & "*" & cboSegment.Text & "/" & txtRCodeDenied.Text)
                SegmentFareCode.Add("LF/" & "*" & cboSegment.Text & "/" & txtLowFare.Text)
                SegmentFareCode.Add("RF/" & "*" & cboSegment.Text & "/" & txtRefFare.Text)
                SegmentFareCode.Add("FF86/" & "*" & cboSegment.Text & "/" & txtCustSpecLowFare.Text)
                SegmentFareCode.Add("FF87/" & "*" & cboSegment.Text & "/" & txtCustSpecHighFare.Text)

                RTFares.Text = RTFares.Text + Trim("RF/" & "*" & cboSegment.Text & "/" & txtRefFare.Text) + vbCrLf

                RTFares.Text = RTFares.Text + Trim("FF45/" & "*" & cboSegment.Text & "/" & txtReasonCode.Text) + vbCrLf
                RTFares.Text = RTFares.Text + Trim("LF/" & "*" & cboSegment.Text & "/" & txtLowFare.Text) + vbCrLf
                RTFares.Text = RTFares.Text + Trim("FF46/" & "*" & cboSegment.Text & "/" & txtRCodeDenied.Text) + vbCrLf
                RTFares.Text = RTFares.Text + Trim("FF86/" & "*" & cboSegment.Text & "/" & txtCustSpecLowFare.Text) + vbCrLf
                RTFares.Text = RTFares.Text + Trim("FF87/" & "*" & cboSegment.Text & "/" & txtCustSpecHighFare.Text) + vbCrLf

            ElseIf Trim(txtCustSpecLowFare.Text) = Nothing And Trim(txtCustSpecHighFare.Text) = Nothing Then

                SegmentFareCode.Add("FF42/" & "*" & cboSegment.Text & "/" & txtMajorClass.Text)
                SegmentFareCode.Add("FF45/" & "*" & cboSegment.Text & "/" & txtReasonCode.Text)
                SegmentFareCode.Add("FF46/" & "*" & cboSegment.Text & "/" & txtRCodeDenied.Text)
                SegmentFareCode.Add("LF/" & "*" & cboSegment.Text & "/" & txtLowFare.Text)
                SegmentFareCode.Add("RF/" & "*" & cboSegment.Text & "/" & txtRefFare.Text)

                RTFares.Text = RTFares.Text + Trim("FF42/" & "*" & cboSegment.Text & "/" & txtMajorClass.Text) + vbCrLf
                RTFares.Text = RTFares.Text + Trim("RF/" & "*" & cboSegment.Text & "/" & txtRefFare.Text) + vbCrLf
                RTFares.Text = RTFares.Text + Trim("FF45/" & "*" & cboSegment.Text & "/" & txtReasonCode.Text) + vbCrLf
                RTFares.Text = RTFares.Text + Trim("LF/" & "*" & cboSegment.Text & "/" & txtLowFare.Text) + vbCrLf
                RTFares.Text = RTFares.Text + Trim("FF46/" & "*" & cboSegment.Text & "/" & txtRCodeDenied.Text) + vbCrLf

            End If

            txtSFSegment.Text = Nothing
            cboSegment.Text = Nothing
            txtDescRCode.Text = Nothing
            txtRCodeDenied.Text = Nothing
            txtBoxNetFare.Text = Nothing
            txtRCodeDenied.BackColor = Color.LightBlue
            txtReasonCode.Text = Nothing
            txtReasonCode.BackColor = Color.LightBlue
            txtLowFare.Text = Nothing
            txtLowFare.BackColor = Color.LightBlue
            txtRefFare.Text = Nothing
            txtRefFare.BackColor = Color.LightBlue
            txtCustSpecLowFare.Text = Nothing
            txtCustSpecLowFare.BackColor = Color.LightBlue
            txtCustSpecHighFare.Text = Nothing
            txtCustSpecHighFare.BackColor = Color.LightBlue
            txtMajorClass.Text = Nothing
            txtMajorClass.BackColor = Color.LightBlue



            'ElseIf ((Trim(txtSFSegment.Text) <> Nothing And Trim(cboSegment.Text) <> Nothing And Trim(txtMajorClass.Text) <> Nothing And Trim(txtMajorClass.Text) <> Nothing) And
            '    (txtReasonCode.BackColor = Color.SkyBlue And txtRCodeDenied.BackColor = Color.SkyBlue) And
            '    (txtLowFare.BackColor = Color.SkyBlue And txtRefFare.BackColor = Color.SkyBlue) And
            '    (txtCustSpecLowFare.BackColor = Color.SkyBlue And txtCustSpecHighFare.BackColor = Color.SkyBlue And txtMajorClass.BackColor = Color.SkyBlue)) Then

        ElseIf ((Trim(txtSFSegment.Text) <> Nothing And Trim(cboSegment.Text) <> Nothing) And
           (txtReasonCode.BackColor = Color.SkyBlue And txtRCodeDenied.BackColor = Color.SkyBlue) And
           (txtLowFare.BackColor = Color.SkyBlue And txtRefFare.BackColor = Color.SkyBlue) And
           (txtCustSpecLowFare.BackColor = Color.SkyBlue And txtCustSpecHighFare.BackColor = Color.SkyBlue And txtMajorClass.BackColor = Color.SkyBlue)) Then

            Segment.Add("*" & cboSegment.Text & "/" & txtSFSegment.Text)
            RTSF.Text = RTSF.Text + Trim("*" & cboSegment.Text & "/" & txtSFSegment.Text) + vbCrLf

            txtSFSegment.Text = Nothing
            cboSegment.Text = Nothing
            txtDescRCode.Text = Nothing
            txtRCodeDenied.Text = Nothing
            txtRCodeDenied.BackColor = Color.SkyBlue
            txtReasonCode.Text = Nothing
            txtReasonCode.BackColor = Color.SkyBlue
            txtLowFare.Text = Nothing
            txtLowFare.BackColor = Color.SkyBlue
            txtRefFare.Text = Nothing
            txtRefFare.BackColor = Color.SkyBlue
            txtCustSpecLowFare.Text = Nothing
            txtCustSpecLowFare.BackColor = Color.SkyBlue
            txtCustSpecHighFare.Text = Nothing
            txtCustSpecHighFare.BackColor = Color.SkyBlue
            txtMajorClass.Text = Nothing
            txtMajorClass.BackColor = Color.SkyBlue



        Else
            MsgBox("Incomplete Details.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
        End If




    End Sub



    Private Sub btnClearSF_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClearSF.Click

        For i = 0 To Segment.Count - 1
            Segment(i) = Nothing
        Next

        txtSFSegment.Text = Nothing
        cboSegment.Text = Nothing
        RTSF.Text = Nothing

    End Sub


    Private Sub btnEraser_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEraser.Click

        AbacusSmartKeys.Text = Nothing
        rtxtAbacus.Text = Nothing

    End Sub



    '=============================================================================================
    '===========================This Portion for Product Settings=================================
    '=============================================================================================

    Dim ProductCode_Set As New AutoCompleteStringCollection
    Dim VendorCode_Set As New AutoCompleteStringCollection
    Dim DivisionCode As New AutoCompleteStringCollection
    Dim res As MsgBoxResult

    Dim PType As String = ""
    Dim PCode As String = ""
    Dim VCode As String = ""


    Public Sub initAccess()

        cboVendorName_Set.Text = Nothing
        cboVAccess_Set.Text = Nothing
        txtSubProd_Set.Text = Nothing
        cboProdAccess_Set.Text = Nothing
        txtCP_Set.Text = Nothing
        cboCPAccess_Set.Text = Nothing
        txtCostAmount_Set.Text = Nothing
        cboCAAccess_Set.Text = Nothing
        txtSF_set.Text = Nothing
        cboSAAccess_Set.Text = Nothing

        cboVendorName_Set.Enabled = False
        cboVAccess_Set.Enabled = False
        cboProdAccess_Set.Enabled = False
        txtSubProd_Set.Enabled = False
        txtCP_Set.Enabled = False
        cboCPAccess_Set.Enabled = False
        txtCostAmount_Set.Enabled = False
        cboCAAccess_Set.Enabled = False
        txtSF_set.Enabled = False
        cboSAAccess_Set.Enabled = False


        cboTravelType_Set.Text = Nothing
        cboRefFare_Set.Text = Nothing
        CboLowFare_Set.Text = Nothing
        cboEC_Set.Text = Nothing
        CboDate_Set.Text = Nothing

        cboTravelType_Set.Enabled = False
        cboRefFare_Set.Enabled = False
        CboLowFare_Set.Enabled = False
        cboEC_Set.Enabled = False
        CboDate_Set.Enabled = False

    End Sub



    Public Sub AgentSet_MainInit()


        txtCreditAccess.Text = Nothing
        txtGDSPassword.Text = Nothing

        txtFirstName_AgentSet.Text = Nothing
        txtLastName_AgentSet.Text = Nothing
        cboDiv_AgentSet.Text = Nothing
        txtQueueNo_AgentSet.Text = Nothing
        txtGroup_AgentSet.Text = Nothing
        txtContactNo_AgentSet.Text = Nothing
        txtGDS_AgentSet.Text = Nothing
        cboStatus_AgentSet.Text = Nothing
        cboLevel_AgentSet.Text = Nothing
        txtPhoneField1_AgentSet.Text = Nothing
        txtPhoneField2_AgentSet.Text = Nothing
        txtRemarks_AgentSet.Text = Nothing
        txtOthers_AgentSet.Text = Nothing

        txtFirstName_AgentSet.Enabled = False
        txtLastName_AgentSet.Enabled = False
        cboDiv_AgentSet.Enabled = False
        txtQueueNo_AgentSet.Enabled = False
        txtGroup_AgentSet.Enabled = False
        txtContactNo_AgentSet.Enabled = False
        txtGDS_AgentSet.Enabled = False
        cboStatus_AgentSet.Enabled = False
        txtPhoneField1_AgentSet.Enabled = False
        txtPhoneField2_AgentSet.Enabled = False
        txtRemarks_AgentSet.Enabled = False
        txtOthers_AgentSet.Enabled = False
        cboLevel_AgentSet.Enabled = False

        txtCreditAccess.Enabled = False
        txtGDSPassword.Enabled = False

    End Sub




    Public Sub AgentSet_AccessInit()

        cboAccessLevel.Text = Nothing

        chkClientNo_Set.Enabled = False
        chkClientNo_Set.Checked = False
        chkDiv_Set.Enabled = False
        chkDiv_Set.Checked = False
        chk_BookingAgent_Set.Enabled = False
        chk_BookingAgent_Set.Checked = False
        chkPhoneElement_Set.Enabled = False
        chkPhoneElement_Set.Checked = False
        chkVesselName_Set.Enabled = False
        chkVesselName_Set.Checked = False
        chkCompleat_Set.Enabled = False
        chkCompleat_Set.Checked = False
        chkReceivedFrom_Set.Enabled = False
        chkReceivedFrom_Set.Checked = False
        chkTKTL_set.Enabled = False
        chkTKTL_set.Checked = False
        chkClientName_Set.Enabled = False
        chkClientName_Set.Checked = False
        chkVName_set.Enabled = False
        chkVName_set.Checked = False
        chkBillTo_Set.Enabled = False
        chkBillTo_Set.Checked = False
        chkMandatory.Checked = False
        chkMandatory.Enabled = False

    End Sub



    Public Sub AgentSet_loadDivision()

        'CHECK_RS()

        'SQL_QUERY = "Select * from TAIS_SERVER..Divisions "
        'RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        'With RS
        '    Do While Not RS.EOF
        '        cboDiv_AgentSet.Items.Add(RS.Fields("Name").Value).ToString()
        '        RS.MoveNext()
        '    Loop
        'End With

        'RS.Close()

        Dim divisions As New List(Of String)

        divisions = (From div In taisDB.Divisions
                     Order By div.Name Ascending
                     Select div.Name).ToList()

        cboDiv_AgentSet.Items.AddRange(divisions.ToArray)

    End Sub



    Private Sub btnClear_AgentSet_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClear_AgentSet.Click
        AgentSet_MainInit()
    End Sub


    Private Sub btnClearLevel_Access_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClearLevel_Access.Click
        Call AgentSet_AccessInit()
    End Sub


    Private Sub btnAdd_Set_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAdd_Set.Click

        Dim ctrNew As Integer = 0

        If ((Trim(cboProductName_Set.Text)) <> "" Or Trim(cboProductName_Set.Text) <> Nothing) And (Trim(txtProType_Set.Text) <> "" Or Trim(txtProType_Set.Text) <> Nothing) Then

            If Trim(txtProType_Set.Text) <> " " Or Trim(txtProType_Set.Text) <> Nothing Then

                CHECK_RS()
                SQL_QUERY = "Select * from TAIS_SERVER..productSettings where ProductCategory = '" & Trim(PCode) & "' and ltrim(ProductName) = '" & Trim(txtProType_Set.Text) & "'" ' order by ProductCategory"
                RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS

                    If Not RS.EOF Then

                        MsgBox("Product Name is already existing", , "::Error::")
                        txtProType_Set.Text = ""
                        txtProType_Set.Focus()

                    Else

                        Call createGridViewHeader_Settings()
                        DGWSet.Rows.Add()
                        ctrNew = DGWSet.Rows.Count - 1

                        DGWSet.Rows.Item(ctrNew).Cells(0).Value = Trim(txtProType_Set.Text)

                        INS_QUERY = "insert into TAIS_SERVER..productsettings(ProductCategory,ProductName)" _
                        & " values ('" & Trim(PCode) & "', '" & Trim(txtProType_Set.Text) & "') "

                        CNN.Execute(INS_QUERY)

                        MsgBox("Data successfully added", , "::Error::")
                        txtProType_Set.Text = Nothing
                        cboProductName_Set.Text = Nothing

                    End If

                End With

            End If

        Else
            MsgBox("Incomplete details, please check your entry..", , ":::Add-Error::")
            txtProType_Set.Focus()
        End If

    End Sub

    Private Sub btnAdd_AgentSet_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAdd_AgentSet.Click

        txtFirstName_AgentSet.Focus()
        txtFirstName_AgentSet.Text = Nothing
        txtLastName_AgentSet.Text = Nothing
        cboDiv_AgentSet.Text = Nothing
        txtQueueNo_AgentSet.Text = Nothing
        txtGroup_AgentSet.Text = Nothing
        txtContactNo_AgentSet.Text = Nothing
        txtGDS_AgentSet.Text = Nothing
        cboStatus_AgentSet.Text = Nothing
        txtPhoneField1_AgentSet.Text = Nothing
        txtPhoneField2_AgentSet.Text = Nothing
        txtRemarks_AgentSet.Text = Nothing
        txtOthers_AgentSet.Text = Nothing
        cboLevel_AgentSet.Text = Nothing
        txtCreditAccess.Text = Nothing
        txtGDSPassword.Text = Nothing

        txtFirstName_AgentSet.Enabled = True
        txtLastName_AgentSet.Enabled = True
        cboDiv_AgentSet.Enabled = True
        txtQueueNo_AgentSet.Enabled = True
        txtGroup_AgentSet.Enabled = True
        txtContactNo_AgentSet.Enabled = True
        txtGDS_AgentSet.Enabled = True
        cboStatus_AgentSet.Enabled = True
        txtPhoneField1_AgentSet.Enabled = True
        txtPhoneField2_AgentSet.Enabled = True
        txtRemarks_AgentSet.Enabled = True
        txtOthers_AgentSet.Enabled = True
        cboLevel_AgentSet.Enabled = True

    End Sub


    Private Sub btnEdit_AgentSet_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEdit_AgentSet.Click

        If Trim(txtFirstName_AgentSet.Text) <> Nothing And Trim(txtLastName_AgentSet.Text) <> Nothing Then

            txtFirstName_AgentSet.Enabled = True
            txtLastName_AgentSet.Enabled = True
            cboDiv_AgentSet.Enabled = True
            txtQueueNo_AgentSet.Enabled = True
            txtGroup_AgentSet.Enabled = True
            txtContactNo_AgentSet.Enabled = True
            txtGDS_AgentSet.Enabled = True
            cboStatus_AgentSet.Enabled = True
            txtPhoneField1_AgentSet.Enabled = True
            txtPhoneField2_AgentSet.Enabled = True
            txtRemarks_AgentSet.Enabled = True
            txtOthers_AgentSet.Enabled = True
            cboLevel_AgentSet.Enabled = True
            txtCreditAccess.Enabled = True
            txtGDSPassword.Enabled = True


        Else
            MsgBox("Nothing to Edit...Please select Agent Name from the Item List. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
        End If

    End Sub



    Private Sub btnSave_AgentSet_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSave_AgentSet.Click

        Dim ctrNew As Integer = 0

        If (Trim(txtFirstName_AgentSet.Text) <> Nothing) And (Trim(txtLastName_AgentSet.Text) <> Nothing) And (Trim(txtGDS_AgentSet.Text) <> Nothing) Then

            CHECK_RS()

            SQL_QUERY = "Select * from TAIS_SERVER..ProfileAgentInfo where InitialSignIn = '" & Trim(txtGDS_AgentSet.Text) & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS

                If Not RS.EOF Then

                    res = MsgBox("Agent Sign-In is already existing..Do you want to update existing record? ", MsgBoxStyle.Question + MsgBoxStyle.YesNo, "::TAIS::")

                    If res = MsgBoxResult.Yes Then

                        UPD_QUERY = "update TAIS_SERVER..ProfileAgentInfo set " _
                                       & " First_Name = '" & Trim(txtFirstName_AgentSet.Text) & "'" _
                                       & ",last_name = '" & Trim(txtLastName_AgentSet.Text) & "'" _
                                       & ",QueueNo = '" & Trim(txtQueueNo_AgentSet.Text) & "'" _
                                       & ",TeamGroup = '" & Trim(txtGroup_AgentSet.Text) & "'" _
                                       & ",ContactNo = '" & Trim(txtContactNo_AgentSet.Text) & "'" _
                                       & ",AP= '" & Trim(txtPhoneField1_AgentSet.Text) & "'" _
                                       & ",Div = '" & Trim(cboDiv_AgentSet.Text) & "'" _
                                       & ",CompanyName = '" & Trim(txtPhoneField2_AgentSet.Text) & "'" _
                                       & ",Remarks = '" & Trim(txtRemarks_AgentSet.Text) & "'" _
                                       & ",Others = '" & Trim(txtOthers_AgentSet.Text) & "'" _
                                       & ",AccessLevel = '" & Trim(cboLevel_AgentSet.Text) & "'" _
                                       & ",CreditCardAccess = '" & Trim(txtCreditAccess.Text) & "'" _
                                       & ",GDSSignIn = '" & Trim(txtGDSPassword.Text) & "'" _
                                       & ",Status = '" & Trim(cboStatus_AgentSet.Text) & "'" _
                                       & " where InitialSignIn = '" & Trim(txtGDS_AgentSet.Text) & "'"

                        CNN.Execute(UPD_QUERY)

                        MsgBox("Agent Details has been successfully updated..", , ":::TAIS::")

                        Call AgentSet_MainInit()

                    Else
                        Exit Sub
                    End If

                Else

                    INS_QUERY = "insert into TAIS_SERVER..ProfileAgentInfo(First_Name, Last_Name, InitialSignIn, QueueNo, TeamGroup, ContactNo, AP, Div, CompanyName, Remarks, Others, Status,AccessLevel,CreditCardAccess,GDSSignIn)" _
                    & " values ('" & Trim(txtFirstName_AgentSet.Text) & "', '" & Trim(txtLastName_AgentSet.Text) & "', '" & Trim(txtGDS_AgentSet.Text) & "', '" & Trim(txtQueueNo_AgentSet.Text) & "','" & Trim(txtGroup_AgentSet.Text) & "','" & Trim(txtContactNo_AgentSet.Text) & "','" & Trim(txtPhoneField1_AgentSet.Text) & "','" & Trim(cboDiv_AgentSet.Text) & "', '" & Trim(txtPhoneField2_AgentSet.Text) & "','" & Trim(txtRemarks_AgentSet.Text) & "', '" & Trim(txtOthers_AgentSet.Text) & "','" & Trim(cboStatus_AgentSet.Text) & "','" & Trim(cboLevel_AgentSet.Text) & "','" & Trim(txtCreditAccess.Text) & "','" & Trim(txtGDSPassword.Text) & "')"

                    CNN.Execute(INS_QUERY)


                    DGWSet.Rows.Clear()
                    DGWSet.Columns.Clear()
                    DGWSet.ColumnHeadersVisible = False
                    DGWSet.RowHeadersVisible = False

                    Call AgentSet_loadagent()
                    Call AgentSet_MainInit()

                    MsgBox("Agent Name has been successfully added...", , ":::TAIS::")

                End If

            End With
            RS.Close()

        Else
            MsgBox("Incomplete details, Please check your entry..", , ":::TAIS::")
        End If


    End Sub



    Private Sub btnListofAgent_AgentSet_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnListofAgent_AgentSet.Click
        Call AgentSet_loadagent()
        FrmAgentList.Show()
    End Sub

    Private Sub btnDelete_AgentSet_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelete_AgentSet.Click

        Dim delType As String

        If Trim(txtFirstName_AgentSet.Text) <> Nothing And Trim(txtLastName_AgentSet.Text) <> Nothing Then

            res = MsgBox(" Are you sure you want to delete this Agent? ", MsgBoxStyle.Question + MsgBoxStyle.YesNo, "::TAIS::")

            If res = MsgBoxResult.Yes Then

                delType = (FrmAgentList.DGW_AgentSet.Item("GDS Sign-In", FrmAgentList.DGW_AgentSet.CurrentCell.RowIndex).Value.ToString())
                FrmAgentList.DGW_AgentSet.Rows.Remove(FrmAgentList.DGW_AgentSet.SelectedRows(0))

                DEL_QUERY = "delete from TAIS_SERVER..ProfileAgentInfo where InitialSignIn = '" & Trim(delType) & "'"
                CNN.Execute(DEL_QUERY)

                MsgBox("Agent has been deleted successfully..", , ":::TAIS::")
                AgentSet_MainInit()
            Else
                Exit Sub
            End If

        Else
            MsgBox("Nothing to delete..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
        End If

    End Sub


    Private Sub AgentSet_loadagent()

        FrmAgentList.DGW_AgentSet.Rows.Clear()
        FrmAgentList.DGW_AgentSet.Columns.Clear()

        Dim i As Integer = 0

        SQL_QUERY = " Select * from TAIS_SERVER..ProfileAgentInfo order by First_Name"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                Call FrmAgentList.createGridViewHeader_AgentList()

                While Not RS1.EOF
                    FrmAgentList.DGW_AgentSet.Rows.Add()
                    i = FrmAgentList.DGW_AgentSet.Rows.Count - 1
                    FrmAgentList.DGW_AgentSet.Rows.Item(i).Cells(0).Value = (RS1.Fields("initialSignIn").Value).ToString()
                    FrmAgentList.DGW_AgentSet.Rows.Item(i).Cells(1).Value = (RS1.Fields("First_Name").Value).ToString()
                    FrmAgentList.DGW_AgentSet.Rows.Item(i).Cells(2).Value = (RS1.Fields("last_Name").Value).ToString()
                    RS1.MoveNext()
                    i = i + 1

                End While
            End If
            RS1.Close()
        End With

    End Sub




    Private Sub btnEditLevel_Acces_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEditLevel_Acces.Click

        If cboAccessLevel.Text <> Nothing Then

            chkClientNo_Set.Enabled = True
            chkDiv_Set.Enabled = True
            chk_BookingAgent_Set.Enabled = True
            chkVesselName_Set.Enabled = True
            chkPhoneElement_Set.Enabled = True
            chkCompleat_Set.Enabled = True
            chkReceivedFrom_Set.Enabled = True
            chkTKTL_set.Enabled = True
            chkClientName_Set.Enabled = True
            chkVesselName_Set.Enabled = True
            chkBillTo_Set.Enabled = True
            chkMandatory.Enabled = True

        Else

            MsgBox("Level Access must not be empty..", , ":::TAIS:::")
            cboAccessLevel.Focus()

        End If


    End Sub



    Private Sub btnSaveLevel_Access_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSaveLevel_Access.Click

        Dim strClientNo_A As String = Nothing
        Dim strDivNo_A As String = Nothing
        Dim strBA_A As String = Nothing
        Dim strVname_A As String = Nothing
        Dim strPhone_A As String = Nothing
        Dim strCompleat_A As String = Nothing
        Dim strRF_A As String = Nothing
        Dim strTKTL_A As String = Nothing
        Dim strClientName_A As String = Nothing
        Dim strVesselName_A As String = Nothing
        Dim strBillTo_A As String = Nothing
        Dim strMandatory As String = Nothing

        If chkClientNo_Set.Checked = True Then
            strClientNo_A = "True"
        Else
            strClientNo_A = "False"
        End If

        If chkDiv_Set.Checked = True Then
            strDivNo_A = "True"
        Else
            strDivNo_A = "False"
        End If

        If chk_BookingAgent_Set.Checked = True Then
            strBA_A = "True"
        Else
            strBA_A = "False"
        End If

        If chkVesselName_Set.Checked = True Then
            strVname_A = "True"
        Else
            strVname_A = "False"
        End If

        If chkPhoneElement_Set.Checked = True Then
            strPhone_A = "True"
        Else
            strPhone_A = "False"
        End If

        If chkCompleat_Set.Checked = True Then
            strCompleat_A = "True"
        Else
            strCompleat_A = "False"
        End If

        If chkReceivedFrom_Set.Checked = True Then
            strRF_A = "True"
        Else
            strRF_A = "False"
        End If

        If chkTKTL_set.Checked = True Then
            strTKTL_A = "True"
        Else
            strTKTL_A = "False"
        End If

        If chkClientName_Set.Checked = True Then
            strClientName_A = "True"
        Else
            strClientName_A = "False"
        End If

        If chkVesselName_Set.Checked = True Then
            strVesselName_A = "True"
        Else
            strVesselName_A = "False"
        End If

        If chkBillTo_Set.Checked = True Then
            strBillTo_A = "True"
        Else
            strBillTo_A = "False"
        End If

        If chkMandatory.Checked = True Then
            strMandatory = "True"
        Else
            strMandatory = "False"
        End If


        If Trim(cboAccessLevel.Text) <> Nothing Then

            UPD_QUERY = "update TAIS_SERVER..UserAccess set " _
                        & " ClientNo = '" & Trim(strClientNo_A) & "'" _
                        & ",DivisionNo = '" & Trim(strDivNo_A) & "'" _
                        & ",BookingAgent = '" & Trim(strBA_A) & "'" _
                        & ",VesselName = '" & Trim(strVname_A) & "'" _
                        & ",PhoneElement = '" & Trim(strPhone_A) & "'" _
                        & ",Compleat = '" & Trim(strCompleat_A) & "'" _
                        & ",ReceivedFrom = '" & Trim(strRF_A) & "'" _
                        & ",TKTL = '" & Trim(strTKTL_A) & "'" _
                        & ",ClientName = '" & Trim(strClientName_A) & "'" _
                        & ",VName = '" & Trim(strVesselName_A) & "'" _
                        & ",BillTo = '" & Trim(strBillTo_A) & "'" _
                        & ",Mandatory = '" & Trim(strMandatory) & "'" _
                        & " where ltrim(Accesslevel) = '" & Trim(cboAccessLevel.Text) & "'"

            CNN.Execute(UPD_QUERY)

            MsgBox("Access Level has been successfully updated..", , ":::TAIS::")
            Call AgentSet_AccessInit()

        Else
            MsgBox("Access Level must not be empty..", , ":::TAIS:::")
            cboAccessLevel.Focus()

        End If


    End Sub



    Public Sub cboVendorName_Set_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboVendorName_Set.KeyDown

        If e.KeyCode = 13 Then

            VCode = Trim(cboVendorName_Set.SelectedText).Replace("'", " ")

            CHECK_RS()

            SQL_QUERY = "Select profiles.profilenumber, profiles.FullName from TAIS_SERVER..Profiles where profileType='2' and replace(Fullname,'''', ' ') = '" & VCode & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    cboVendorName_Set.Text = (RS.Fields("ProfileNumber").Value).ToString
                    RS.MoveNext()
                End If
            End With

            RS.Close()

        End If

    End Sub


    Public Sub cboProductName_Set_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboProductName_Set.KeyDown

        Dim i As Integer = 0
        DGWSet.Rows.Clear()
        DGWSet.Columns.Clear()
        DGWSet.ColumnHeadersVisible = False
        DGWSet.RowHeadersVisible = False
        DGWSet.Refresh()

        Call initAccess()

        If e.KeyCode = 13 Then

            PType = Trim(cboProductName_Set.SelectedText).Replace("'", " ")

            CHECK_RS()

            SQL_QUERY = " Select productcodes.productcode from TAIS_SERVER..productcodes where replace(description,'''',' ') = '" & PType & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)
            With RS
                If Not RS.EOF Then
                    PCode = (RS.Fields("productcode").Value).ToString()
                End If
                RS.Close()
            End With

            If Trim(PCode) <> "" Or Trim(PCode) <> Nothing Then

                SQL_QUERY = " Select * from TAIS_SERVER..productSettings where ProductCategory = '" & PCode & "'"
                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS1
                    If Not RS1.EOF Then
                        Call createGridViewHeader_Settings()
                        While Not RS1.EOF
                            DGWSet.Rows.Add()
                            DGWSet.Rows.Item(i).Cells(0).Value = (RS1.Fields("ProductName").Value).ToString()
                            RS1.MoveNext()
                            i = i + 1

                        End While
                    End If
                    RS1.Close()
                End With

            End If


            '================For Non-Air Transactions==============================


            If Trim(PCode) <> "" Or Trim(PCode) <> Nothing Then

                SQL_QUERY = " Select * from TAIS_SERVER..NonAirTransactions where ProductCode = '" & PCode & "'"
                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS1
                    If Not RS1.EOF Then

                        cboVendorName_Set.Text = (RS1.Fields("VendorCode").Value).ToString()
                        cboVAccess_Set.Text = (RS1.Fields("VendorAccess").Value).ToString()
                        cboProdAccess_Set.Text = (RS1.Fields("SubProduct").Value).ToString()
                        txtCP_Set.Text = (RS1.Fields("CP").Value).ToString()
                        cboCPAccess_Set.Text = (RS1.Fields("CPAccess").Value).ToString()
                        txtCostAmount_Set.Text = (RS1.Fields("Cost").Value).ToString()
                        cboCAAccess_Set.Text = (RS1.Fields("CostAccess").Value).ToString()
                        txtSF_set.Text = (RS1.Fields("SAAmount").Value).ToString()
                        cboSAAccess_Set.Text = (RS1.Fields("SAAccess").Value).ToString()
                        cboTravelType_Set.Text = (RS1.Fields("traveltype").Value).ToString()
                        cboRefFare_Set.Text = (RS1.Fields("RefFare").Value).ToString()
                        CboLowFare_Set.Text = (RS1.Fields("LowFare").Value).ToString()
                        cboEC_Set.Text = (RS1.Fields("EC").Value).ToString()
                        CboDate_Set.Text = (RS1.Fields("DateHotel").Value).ToString()

                        RS1.MoveNext()

                    End If
                    RS1.Close()
                End With

            End If

        End If



    End Sub

    Private Sub createGridViewHeader_Settings()

        DGWSet.ColumnCount = 1
        DGWSet.ColumnHeadersVisible = True

        ' Set the column header style.
        Dim columnHeaderStyle As New DataGridViewCellStyle()

        columnHeaderStyle.BackColor = Color.CadetBlue

        columnHeaderStyle.Font = New Font("Arial", 7, FontStyle.Regular)

        DGWSet.ColumnHeadersDefaultCellStyle = columnHeaderStyle
        DGWSet.RowTemplate.Height = 20
        DGWSet.RowsDefaultCellStyle.Font = New Font("Arial", 7, FontStyle.Regular)

        ' Set the column header names.
        DGWSet.Columns(0).Name = "Product Type"
        DGWSet.Columns(0).Width = 200

    End Sub



    Private Sub btnDeleteSet_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDeleteSet.Click
        Dim res As MsgBoxResult
        Dim delType As String

        If DGWSet.Rows.Count <> 0 Then

            res = MsgBox(" Are you sure you want to delete this product? ", MsgBoxStyle.Question + MsgBoxStyle.YesNo, "::TAIS::")

            If res = MsgBoxResult.Yes Then

                delType = (DGWSet.Item("Product Type", DGWSet.CurrentCell.RowIndex).Value.ToString())
                DGWSet.Rows.Remove(DGWSet.SelectedRows(0))

                DEL_QUERY = "delete from TAIS_SERVER..ProductSettings where Productname = '" & Trim(delType) & "' and ProductCategory = '" & Trim(PCode) & "'"
                CNN.Execute(DEL_QUERY)

                MsgBox("Product Type has been deleted successfully..", , ":::TAIS::")

            Else
                Exit Sub
            End If

        Else
            MsgBox("Nothing to delete ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
        End If
    End Sub


    Private Sub btnEditAccess_Set_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEditAccess_Set.Click

        cboVendorName_Set.Enabled = True
        cboVAccess_Set.Enabled = True
        txtSubProd_Set.Enabled = True
        cboProdAccess_Set.Enabled = True
        txtCP_Set.Enabled = True
        cboCPAccess_Set.Enabled = True
        txtCostAmount_Set.Enabled = True
        cboCAAccess_Set.Enabled = True
        txtSF_set.Enabled = True
        cboSAAccess_Set.Enabled = True

        cboTravelType_Set.Enabled = True
        cboRefFare_Set.Enabled = True
        CboLowFare_Set.Enabled = True
        cboEC_Set.Enabled = True
        CboDate_Set.Enabled = True

    End Sub

    Private Sub btnSaveAccess_Set_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSaveAccess_Set.Click


        If ((Trim(cboProductName_Set.Text)) <> "" Or Trim(cboProductName_Set.Text) <> Nothing) Then


            CHECK_RS()
            SQL_QUERY = "Select * from TAIS_SERVER..NonAirTransactions where ProductCode = '" & Trim(PCode) & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS

                If Not RS.EOF Then


                    UPD_QUERY = "update TAIS_SERVER..NonAirTransactions set " _
                            & "VendorCode = '" & Trim(cboVendorName_Set.Text) & "'" _
                            & ",VendorAccess = '" & Trim(cboVAccess_Set.Text) & "'" _
                            & ",SubProduct = '" & Trim(cboProdAccess_Set.Text) & "'" _
                            & ",CP= '" & Trim(txtCP_Set.Text) & "'" _
                            & ",CPAccess = '" & Trim(cboCPAccess_Set.Text) & "'" _
                            & ",Cost = '" & Trim(txtCostAmount_Set.Text) & "'" _
                            & ",CostAccess = '" & Trim(cboCAAccess_Set.Text) & "'" _
                            & ",SAAmount = '" & Trim(txtSF_set.Text) & "'" _
                            & ",SAAccess = '" & Trim(cboSAAccess_Set.Text) & "'" _
                            & ",traveltype = '" & Trim(cboTravelType_Set.Text) & "'" _
                            & ",RefFare = '" & Trim(cboRefFare_Set.Text) & "'" _
                            & ",LowFare = '" & Trim(CboLowFare_Set.Text) & "'" _
                            & ",EC = '" & Trim(cboEC_Set.Text) & "'" _
                            & ",DateHotel = '" & Trim(CboDate_Set.Text) & "'" _
                            & " where ProductCode = '" & Trim(PCode) & "'"

                    CNN.Execute(UPD_QUERY)

                    Call initAccess()

                    MsgBox("Non Air Product Transaction has been successfully updated...", , ":::TAIS::")

                Else
                    INS_QUERY = "insert into TAIS_SERVER..NonAirTransactions(ProductCode,VendorCode, VendorAccess,SubProduct,CP,CPAccess,Cost,CostAccess,SAAmount,SAAccess,travelType,RefFare,LowFare,EC,DateHotel )" _
                   & " values ('" & Trim(PCode) & "','" & Trim(cboVendorName_Set.Text) & "', '" & Trim(cboVAccess_Set.Text) & "', '" & Trim(cboProdAccess_Set.Text) & "', '" & Trim(txtCP_Set.Text) & "','" & Trim(cboCPAccess_Set.Text) & "','" & Trim(txtCostAmount_Set.Text) & "','" & Trim(cboCAAccess_Set.Text) & "','" & Trim(txtSF_set.Text) & "', '" & Trim(cboSAAccess_Set.Text) & "', '" & Trim(cboTravelType_Set.Text) & "', '" & Trim(cboRefFare_Set.Text) & "', '" & Trim(CboLowFare_Set.Text) & "', '" & Trim(cboEC_Set.Text) & "', '" & Trim(CboDate_Set.Text) & "')"

                    CNN.Execute(INS_QUERY)

                    Call initAccess()

                    MsgBox("Non Air Product Transaction has been successfully added...", , ":::TAIS::")

                End If

            End With

            RS.Close()
        Else
            MsgBox("Incomplete details, please check your entry..", , ":::Add-Error::")
            cboProductCode.Focus()
        End If


    End Sub



    Private Sub btnClear_Set_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClear_Set.Click

        txtProType_Set.Text = ""
        cboProductCode.Text = ""
        cboProductCode.Focus()
        DGWSet.Rows.Clear()
        DGWSet.Columns.Clear()
        DGWSet.ColumnHeadersVisible = False
        DGWSet.RowHeadersVisible = False
        DGWSet.Refresh()

    End Sub


    Private Sub cboAccessLevel_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cboAccessLevel.SelectedIndexChanged

        Dim tmpVal As String
        tmpVal = Trim(cboAccessLevel.Text)

        CHECK_RS1()

        SQL_QUERY = "Select * from TAIS_SERVER..UserAccess where ltrim(Accesslevel) = '" & Trim(tmpVal) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim((RS1.Fields("ClientNo").Value).ToString()) = "True" Then
                    chkClientNo_Set.Checked = True
                Else
                    chkClientNo_Set.Checked = False
                    chkClientNo_Set.Enabled = False
                End If

                If Trim((RS1.Fields("DivisionNo").Value).ToString()) = "True" Then
                    chkDiv_Set.Checked = True
                Else
                    chkDiv_Set.Checked = False
                    chkDiv_Set.Enabled = False
                End If

                If Trim((RS1.Fields("BookingAgent").Value).ToString()) = "True" Then
                    chk_BookingAgent_Set.Checked = True
                Else
                    chk_BookingAgent_Set.Checked = False
                    chk_BookingAgent_Set.Enabled = False

                End If

                If Trim((RS1.Fields("VesselName").Value).ToString()) = "True" Then
                    chkVesselName_Set.Checked = True
                Else
                    chkVesselName_Set.Checked = False
                    chkVesselName_Set.Enabled = False
                End If

                If Trim((RS1.Fields("PhoneElement").Value).ToString()) = "True" Then
                    chkPhoneElement_Set.Checked = True
                Else
                    chkPhoneElement_Set.Checked = False
                    chkPhoneElement_Set.Enabled = False

                End If

                If Trim((RS1.Fields("Compleat").Value).ToString()) = "True" Then
                    chkCompleat_Set.Checked = True
                Else
                    chkCompleat_Set.Checked = False
                    chkCompleat_Set.Enabled = False

                End If

                If Trim((RS1.Fields("ReceivedFrom").Value).ToString()) = "True" Then
                    chkReceivedFrom_Set.Checked = True
                Else
                    chkReceivedFrom_Set.Checked = False
                    chkReceivedFrom_Set.Enabled = False

                End If

                If Trim((RS1.Fields("TKTL").Value).ToString()) = "True" Then
                    chkTKTL_set.Checked = True
                Else
                    chkTKTL_set.Checked = False
                    chkTKTL_set.Enabled = False
                End If

                If Trim((RS1.Fields("ClientName").Value).ToString()) = "True" Then
                    chkClientName_Set.Checked = True
                Else
                    chkClientName_Set.Checked = False
                    chkClientName_Set.Enabled = False
                End If

                If Trim((RS1.Fields("VName").Value).ToString()) = "True" Then
                    chkVesselName_Set.Checked = True
                Else
                    chkVesselName_Set.Checked = False
                    chkVesselName_Set.Enabled = False
                End If

                If Trim((RS1.Fields("BillTo").Value).ToString()) = "True" Then
                    chkBillTo_Set.Checked = True
                Else
                    chkBillTo_Set.Checked = False
                    chkBillTo_Set.Enabled = False
                End If

                If Trim((RS1.Fields("Mandatory").Value).ToString()) = "True" Then
                    chkMandatory.Checked = True
                Else
                    chkMandatory.Checked = False
                    chkMandatory.Enabled = False
                End If


            Else
                Call AgentSet_AccessInit()
            End If


        End With
        RS1.Close()

    End Sub



    '==========================================================================
    '=============================== End Product Settings
    '==========================================================================

    '===Init all Mapping
    Private Sub FieldMapping()

        '==== BCD MIS ======

        Txt1.Text = Nothing     ' Traveller Name
        Txt2.Text = Nothing     ' Traveller Status
        Txt3.Text = Nothing     ' Cost Center Code
        Txt4.Text = Nothing     ' Project No
        Txt5.Text = Nothing     ' Dept No
        Txt6.Text = Nothing     ' Order Ref
        Txt7.Text = Nothing     ' Approver
        Txt8.Text = Nothing     ' Approver Code
        Txt9.Text = Nothing     ' Mgr Sup
        Txt10.Text = Nothing     ' Reason of Trip
        Txt11.Text = Nothing    ' Major Class    
        Txt12.Text = Nothing    ' Stop Over
        Txt13.Text = Nothing    ' Tour Code
        Txt14.Text = Nothing    ' Reason Code
        Txt15.Text = Nothing    ' Reason Code Denied
        Txt16.Text = Nothing    ' FFlyr No
        Txt17.Text = Nothing    ' Hotel Reason Code
        Txt18.Text = Nothing    ' Hotel Booked Flag
        Txt19.Text = Nothing    ' Air Reason Code
        Txt20.Text = Nothing    ' Car Booked Flag
        Txt21.Text = Nothing    ' Sales Channel
        Txt22.Text = Nothing    ' Record Type
        Txt23.Text = Nothing    ' CS Data1
        Txt24.Text = Nothing    ' CS Data2
        Txt25.Text = Nothing    ' CS Data3
        Txt26.Text = Nothing    ' CS Data4
        Txt27.Text = Nothing    ' CS Data12
        txt28.Text = Nothing    ' CS Data5
        txt29.Text = Nothing    ' CS Data6
        txt30.Text = Nothing    ' CS Data7
        txt31.Text = Nothing    ' CS Data8

        txtClientN.Text = Nothing

    End Sub


    '==================================
    '===Global Setting Init for MIS
    '==================================

    Private Sub Init_GlobalStrings()

        M_GC = Nothing
        M_LCNo = Nothing
        M_EmpNo = Nothing
        M_TravName = Nothing
        M_TravStat = Nothing
        M_CCC = Nothing
        M_ProjNo = Nothing
        M_DeptNo = Nothing
        M_OrderRed = Nothing
        M_Approver = Nothing
        M_ApproverCode = Nothing
        M_MgrSup = Nothing
        M_RTrip = Nothing
        M_MClass = Nothing
        M_SOT = Nothing
        M_TourCode = Nothing
        M_RCode = Nothing
        M_RCodeDenied = Nothing
        M_FFlyr = Nothing
        M_HotelReasonCode = Nothing
        M_HotelBookedF = Nothing
        M_AirNoReasonCode = Nothing
        M_CarBookedFlag = Nothing
        M_SalesChannel = Nothing
        M_RecordType = Nothing
        M_CSData1 = Nothing
        M_CSData2 = Nothing
        M_CSData3 = Nothing
        M_CSData4 = Nothing
        M_CSData5 = Nothing
        M_CSData6 = Nothing
        M_CSData7 = Nothing
        M_CSData8 = Nothing
        M_CSData12 = Nothing
        custSpecLowFare = Nothing
        custSpecHighFare = Nothing



        B_DeptNo = Nothing
        B_CostCenter = Nothing
        B_EmpNo = Nothing
        B_ProjNo = Nothing
        B_OrderRef = Nothing
        B_ReasonOfTrip = Nothing
        B_AirNoReasonCode = Nothing
        B_C_Data1 = Nothing
        B_C_Data2 = Nothing
        B_C_Data3 = Nothing
        B_C_Data4 = Nothing
        B_C_Data12 = Nothing
        B_Approver = Nothing
        B_ApprovalCode = Nothing
        B_TravStatus = Nothing
        B_MgrSup = Nothing

        COD1 = Nothing
        COD2 = Nothing
        COD3 = Nothing
        COD4 = Nothing
        COD5 = Nothing
        COD6 = Nothing
        COD7 = Nothing
        COD8 = Nothing
        COD9 = Nothing
        COD10 = Nothing
        COD11 = Nothing
        COD12 = Nothing
        COD13 = Nothing
        COD14 = Nothing
        COD15 = Nothing
        COD16 = Nothing
        COD17 = Nothing
        COD18 = Nothing
        COD19 = Nothing
        COD20 = Nothing

        strCOD1 = Nothing
        strCOD2 = Nothing
        strCOD3 = Nothing
        strCOD4 = Nothing
        strCOD5 = Nothing
        strCOD6 = Nothing
        strCOD7 = Nothing
        strCOD8 = Nothing
        strCOD9 = Nothing
        strCOD10 = Nothing
        strCOD11 = Nothing
        strCOD12 = Nothing
        strCOD13 = Nothing
        strCOD14 = Nothing
        strCOD15 = Nothing
        strCOD16 = Nothing
        strCOD17 = Nothing
        strCOD18 = Nothing
        strCOD19 = Nothing
        strCOD20 = Nothing

    End Sub


    '============================================= BCD MIS Portion ==============================
    Private Sub MISINIT()

        txtSMID.Text = Nothing
        txtSMID.Enabled = False
        txtSMID.BackColor = Color.SkyBlue

        txtTSPID.Text = Nothing
        txtTSPID.Enabled = False
        txtTSPID.BackColor = Color.SkyBlue

        txtGlobalCustNo.Text = Nothing
        txtGlobalCustNo.Enabled = False
        txtGlobalCustNo.BackColor = Color.SkyBlue

        txtLocalCustNo.Text = Nothing
        txtLocalCustNo.Enabled = False
        txtLocalCustNo.BackColor = Color.SkyBlue

        txtHotelReasonCD.Text = Nothing
        txtHotelReasonCD.Enabled = False
        txtHotelReasonCD.BackColor = Color.SkyBlue


        txtEmployeeNo.Text = Nothing
        txtEmployeeNo.Enabled = False
        txtEmployeeNo.BackColor = Color.SkyBlue

        txtTravellerName.Text = Nothing
        txtTravellerName.Enabled = False
        txtTravellerName.BackColor = Color.SkyBlue

        txtTravellerStat.Text = Nothing
        txtTravellerStat.Enabled = False
        txtTravellerStat.BackColor = Color.SkyBlue

        txtCostCenterCode.Text = Nothing
        txtCostCenterCode.Enabled = False
        txtCostCenterCode.BackColor = Color.SkyBlue

        txtProjectNo.Text = Nothing
        txtProjectNo.Enabled = False
        txtProjectNo.BackColor = Color.SkyBlue


        txtDeptNo.Text = Nothing
        txtDeptNo.Enabled = False
        txtDeptNo.BackColor = Color.SkyBlue

        txtOrderRef.Text = Nothing
        txtOrderRef.Enabled = False
        txtOrderRef.BackColor = Color.SkyBlue

        txtApprover.Text = Nothing
        txtApprover.Enabled = False
        txtApprover.BackColor = Color.SkyBlue

        txtApproverCode.Text = Nothing
        txtApproverCode.Enabled = False
        txtApproverCode.BackColor = Color.SkyBlue

        txtMgrSuperior.Text = Nothing
        txtMgrSuperior.Enabled = False
        txtMgrSuperior.BackColor = Color.SkyBlue

        txtReasonofTrip.Text = Nothing
        txtReasonofTrip.Enabled = False
        txtReasonofTrip.BackColor = Color.SkyBlue

        txtMajorClass.Text = Nothing
        txtMajorClass.Enabled = False
        txtMajorClass.BackColor = Color.SkyBlue

        txtStopOverTRF.Text = Nothing
        txtStopOverTRF.Enabled = False
        txtStopOverTRF.BackColor = Color.SkyBlue

        txtTourCode.Text = Nothing
        txtTourCode.Enabled = False
        txtTourCode.BackColor = Color.SkyBlue

        txtReasonCode.Text = Nothing
        txtDescRCode.Text = Nothing

        txtReasonCode.Enabled = False
        txtReasonCode.BackColor = Color.WhiteSmoke

        txtRCodeDenied.Text = Nothing
        txtRCodeDenied.Enabled = False
        txtRCodeDenied.BackColor = Color.WhiteSmoke


        txtFFLYR.Text = Nothing
        txtFFLYR.Enabled = False
        txtFFLYR.BackColor = Color.SkyBlue

        txtHotelBookedF_N.Text = Nothing
        txtHotelBookedF_N.Enabled = False
        txtHotelBookedF_N.BackColor = Color.SkyBlue

        txtAirNoReasonCD.Text = Nothing
        txtAirNoReasonCD.Enabled = False
        txtAirNoReasonCD.BackColor = Color.SkyBlue

        txtCarBookedFlag.Text = Nothing
        txtCarBookedFlag.Enabled = False
        txtCarBookedFlag.BackColor = Color.SkyBlue

        txtSalesChannel.Text = Nothing
        txtSalesChannel.Enabled = False
        txtSalesChannel.BackColor = Color.SkyBlue

        txtRecordType.Text = Nothing
        txtRecordType.Enabled = False
        txtRecordType.BackColor = Color.SkyBlue

        txtCSData1.Text = Nothing
        txtCSData1.Enabled = False
        txtCSData1.BackColor = Color.SkyBlue

        txtCSData2.Text = Nothing
        txtCSData2.Enabled = False
        txtCSData2.BackColor = Color.SkyBlue

        txtCSData3.Text = Nothing
        txtCSData3.Enabled = False
        txtCSData3.BackColor = Color.SkyBlue

        txtCSData4.Text = Nothing
        txtCSData4.Enabled = False
        txtCSData4.BackColor = Color.SkyBlue

        txtCSData12.Text = Nothing
        txtCSData12.Enabled = False
        txtCSData12.BackColor = Color.SkyBlue

        txtCSData5.Text = Nothing
        txtCSData5.Enabled = False
        txtCSData5.BackColor = Color.SkyBlue

        txtCSData6.Text = Nothing
        txtCSData6.Enabled = False
        txtCSData6.BackColor = Color.SkyBlue

        txtCSData7.Text = Nothing
        txtCSData7.Enabled = False
        txtCSData7.BackColor = Color.SkyBlue

        txtCSData8.Text = Nothing
        txtCSData8.Enabled = False
        txtCSData8.BackColor = Color.SkyBlue




        txtCustSpecLowFare.Text = Nothing
        txtCustSpecLowFare.Enabled = False
        txtCustSpecLowFare.BackColor = Color.SkyBlue

        txtCustSpecHighFare.Text = Nothing
        txtCustSpecHighFare.Enabled = False
        txtCustSpecHighFare.BackColor = Color.SkyBlue

        txtLowFare.Text = Nothing
        txtLowFare.Enabled = False
        txtLowFare.BackColor = Color.SkyBlue

        txtRefFare.Text = Nothing
        txtRefFare.Enabled = False
        txtRefFare.BackColor = Color.SkyBlue

        txtReasonCode.Text = Nothing
        txtReasonCode.Enabled = False
        txtReasonCode.BackColor = Color.SkyBlue

        txtRCodeDenied.Text = Nothing
        txtRCodeDenied.Enabled = False
        txtRCodeDenied.BackColor = Color.SkyBlue


        ' TabControl1.TabPages.Insert(9, TabPage6) 'Settings


    End Sub


    '====Get all the Client Spec from Travcom database
    Public Sub load_ClientSpec()

        CHECK_RS1()

        SQL_QUERY = "Select * from BCDMIS..ClientSpecific where clientid<>0 "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            Do While Not RS1.EOF
                ClientSpecCode.Add(RS1.Fields("ClientName").Value)
                RS1.MoveNext()
            Loop

        End With

        RS1.Close()

        cboClientName.AutoCompleteSource = AutoCompleteSource.CustomSource
        cboClientName.AutoCompleteCustomSource = ClientSpecCode
        cboClientName.AutoCompleteMode = AutoCompleteMode.Suggest

    End Sub

    Public Sub cboClientName_keydown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cboClientName.KeyDown

        Call FieldMapping()
        Call Init_GlobalStrings()
        Call MISINIT()
        Call FrmMainIni()

        GlobalCustNO = Nothing
        GlobalClientNo = Nothing
        strClientNumber = Nothing
        strClientGlobalCustNo = Nothing

        If e.KeyCode = 13 Then
            BCDMISfields()
        End If

    End Sub


    '=========================================================
    '              BCD MIS Field Mapping - Mandatory Element
    '=========================================================

    Private Sub BCDMISfields()


        If Trim(strClientGlobalCustNo) = Nothing Then

            CHECK_RS()

            SQL_QUERY = "Select * from BCDMIS..ClientSpecific where clientname  =  '" & Trim(cboClientName.SelectedText) & "'" ' or LocalCustNo = '" & Trim(strClientNumber) & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS

                If Not RS.EOF Then

                    If Not IsDBNull(Trim((RS.Fields("GlobalCustNo").Value).ToString())) Then

                        txtGlobalCustNo.Enabled = True
                        txtGlobalCustNo.Text = (RS.Fields("GlobalCustNo").Value).ToString()
                        GlobalCustNO = (RS.Fields("GlobalCustNo").Value).ToString()
                        GlobalClientNo = (RS.Fields("ClientID").Value).ToString()
                        txtGlobalCustNo.BackColor = Color.White

                    Else
                        txtGlobalCustNo.Enabled = False
                        txtGlobalCustNo.Text = Nothing
                        txtGlobalCustNo.BackColor = Color.SkyBlue
                    End If


                    '====SM ID
                    If Not IsDBNull(Trim((RS.Fields("SMDID").Value).ToString())) And (UCase(Trim((RS.Fields("SMDID").Value).ToString()))) <> "TRUE" Then
                        txtSMID.Enabled = True
                        txtSMID.Text = (RS.Fields("SMDID").Value).ToString()
                        txtSMID.BackColor = Color.White
                    End If

                    If (Trim((RS.Fields("SMDID").Value).ToString())) = "TRUE" Then
                        txtSMID.Enabled = True
                        txtSMID.Text = (RS.Fields("SMDID").Value).ToString()
                        txtSMID.BackColor = Color.White
                    End If

                    If IsDBNull(Trim((RS.Fields("SMDID").Value).ToString())) Or (Trim((RS.Fields("SMDID").Value).ToString())) = "" Or (Trim((RS.Fields("SMDID").Value).ToString())) Is Nothing Then
                        txtSMID.Enabled = False
                        txtSMID.Text = Nothing
                        txtSMID.BackColor = Color.SkyBlue

                    End If
                    '=====End


                    '====TSP ID
                    If Not IsDBNull(Trim((RS.Fields("TSPID").Value).ToString())) And (UCase(Trim((RS.Fields("TSPID").Value).ToString()))) <> "TRUE" Then
                        txtTSPID.Enabled = True
                        txtTSPID.Text = (RS.Fields("TSPID").Value).ToString()
                        txtTSPID.BackColor = Color.White
                    End If

                    If (Trim((RS.Fields("TSPID").Value).ToString())) = "TRUE" Then
                        txtTSPID.Enabled = True
                        txtTSPID.Text = (RS.Fields("TSPID").Value).ToString()
                        txtTSPID.BackColor = Color.White
                    End If

                    If IsDBNull(Trim((RS.Fields("TSPID").Value).ToString())) Or (Trim((RS.Fields("TSPID").Value).ToString())) = "" Or (Trim((RS.Fields("TSPID").Value).ToString())) Is Nothing Then
                        txtTSPID.Enabled = False
                        txtTSPID.Text = Nothing
                        txtTSPID.BackColor = Color.SkyBlue

                    End If
                    '=====End



                    '====Local Customer Number
                    If Not IsDBNull(Trim((RS.Fields("localCustNo").Value).ToString())) And (UCase(Trim((RS.Fields("localCustNo").Value).ToString()))) <> "TRUE" Then
                        txtLocalCustNo.Enabled = True
                        txtLocalCustNo.Text = (RS.Fields("localCustNo").Value).ToString()
                        txtLocalCustNo.BackColor = Color.White
                    End If

                    If (Trim((RS.Fields("localCustNo").Value).ToString())) = "TRUE" Then
                        txtLocalCustNo.Enabled = True
                        txtLocalCustNo.BackColor = Color.White
                    End If

                    If IsDBNull(Trim((RS.Fields("localCustNo").Value).ToString())) Or (Trim((RS.Fields("localCustNo").Value).ToString())) = "" Or (Trim((RS.Fields("localCustNo").Value).ToString())) Is Nothing Then
                        txtLocalCustNo.Enabled = False
                        txtLocalCustNo.Text = Nothing
                        txtLocalCustNo.BackColor = Color.SkyBlue
                    End If
                    '=====End




                    '===Air No Accomodation Reason Code
                    If (UCase(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString()))) = "TRUE" Then

                        txtAirNoReasonCD.Enabled = True
                        txtAirNoReasonCD.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_AirNoAccomReasonCD where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt19.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '===== Accomodation Reason Code

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_AccomodationReasonCD where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtAirNoReasonCD.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtAirNoReasonCD.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtAirNoReasonCD.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                End If

                            End If

                            RS1.MoveNext()

                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString())) And (UCase(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString()))) <> "TRUE" Then

                        txtAirNoReasonCD.Text = (RS.Fields("AirNoAccomodationReasconCode").Value).ToString()
                        txtAirNoReasonCD.Enabled = True
                        txtAirNoReasonCD.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_AirNoAccomReasonCD where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt19.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '===== Accomodation Reason Code

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_AccomodationReasonCD where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtAirNoReasonCD.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtAirNoReasonCD.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtAirNoReasonCD.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString())) Or (Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString())) Is Nothing Then
                        txtAirNoReasonCD.Enabled = False
                        txtAirNoReasonCD.Text = Nothing
                        txtAirNoReasonCD.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '===Approver
                    If (UCase(Trim((RS.Fields("Approver").Value).ToString()))) = "TRUE" Then
                        txtApprover.Enabled = True
                        txtApprover.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_Approver where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt7.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Approver Field
                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_Approver where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtApprover.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtApprover.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                    txtApprover.BackColor = Color.Orange

                                End If



                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("Approver").Value).ToString())) And (UCase(Trim((RS.Fields("Approver").Value).ToString()))) <> "TRUE" Then

                        txtApprover.Text = (RS.Fields("Approver").Value).ToString()
                        txtApprover.Enabled = True
                        txtApprover.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_Approver where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt7.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Approver Field
                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_Approver where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtApprover.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtApprover.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtApprover.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("Approver").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("Approver").Value).ToString())) Or (Trim((RS.Fields("Approver").Value).ToString())) Is Nothing Then
                        txtApprover.Enabled = False
                        txtApprover.Text = Nothing
                        txtApprover.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '===Approval Code
                    If (UCase(Trim((RS.Fields("ApprovalCode").Value).ToString()))) = "TRUE" Then
                        txtApproverCode.Enabled = True
                        txtApproverCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ApprovalCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt8.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Approvel Code Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ApprovalCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtApproverCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtApproverCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtApproverCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If

                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("ApprovalCode").Value).ToString())) And (UCase(Trim((RS.Fields("ApprovalCode").Value).ToString()))) <> "TRUE" Then
                        txtApproverCode.Text = (RS.Fields("ApprovalCode").Value).ToString()
                        txtApproverCode.Enabled = True
                        txtApproverCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ApprovalCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt8.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Approvel Code Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ApprovalCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtApproverCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtApproverCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtApproverCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("ApprovalCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ApprovalCode").Value).ToString())) Or (Trim((RS.Fields("ApprovalCode").Value).ToString())) Is Nothing Then
                        txtApproverCode.Enabled = False
                        txtApproverCode.Text = Nothing
                        txtApproverCode.BackColor = Color.SkyBlue
                    End If
                    '==End

                    '===CS Data 1

                    If (UCase(Trim((RS.Fields("CSData1").Value).ToString()))) = "TRUE" Then

                        txtCSData1.Enabled = True
                        txtCSData1.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData1 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt23.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 1 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData1 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData1.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData1.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData1.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData1").Value).ToString())) And (UCase(Trim((RS.Fields("CSData1").Value).ToString()))) <> "TRUE" Then

                        txtCSData1.Text = (RS.Fields("CSData1").Value).ToString()
                        txtCSData1.Enabled = True
                        txtCSData1.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData1 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt23.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 1 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData1 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData1.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData1.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData1.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("CSData1").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData1").Value).ToString())) Or (Trim((RS.Fields("CSData1").Value).ToString())) Is Nothing Then
                        txtCSData1.Enabled = False
                        txtCSData1.Text = Nothing
                        txtCSData1.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '==CS Data2

                    If (UCase(Trim((RS.Fields("CSData2").Value).ToString()))) = "TRUE" Then
                        txtCSData2.Enabled = True
                        txtCSData2.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData2 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt24.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 2 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData2 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData2.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData2.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData2.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData2").Value).ToString())) And (UCase(Trim((RS.Fields("CSData2").Value).ToString()))) <> "TRUE" Then

                        txtCSData2.Text = (RS.Fields("CSData2").Value).ToString()
                        txtCSData2.Enabled = True
                        txtCSData2.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData2 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt24.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 2 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData2 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData2.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData2.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData2.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData2").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData2").Value).ToString())) Or (Trim((RS.Fields("CSData2").Value).ToString())) Is Nothing Then
                        txtCSData2.Enabled = False
                        txtCSData2.Text = Nothing
                        txtCSData2.BackColor = Color.SkyBlue

                    End If

                    '==End


                    '===CS Data 3
                    If (UCase(Trim((RS.Fields("CSData3").Value).ToString()))) = "TRUE" Then

                        txtCSData3.Enabled = True
                        txtCSData3.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData3 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt25.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 3 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData3 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData3.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData3.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData3.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("CSData3").Value).ToString())) And (UCase(Trim((RS.Fields("CSData3").Value).ToString()))) <> "TRUE" Then

                        txtCSData3.Text = (RS.Fields("CSData3").Value).ToString()
                        txtCSData3.Enabled = True
                        txtCSData3.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData3 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt25.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 3 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData3 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData3.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData3.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData3.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CSData3").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData3").Value).ToString())) Or (Trim((RS.Fields("CSData3").Value).ToString())) Is Nothing Then

                        txtCSData3.Enabled = False
                        txtCSData3.Text = Nothing
                        txtCSData3.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '==CS Data 4

                    If (UCase(Trim((RS.Fields("CSData4").Value).ToString()))) = "TRUE" Then

                        txtCSData4.Enabled = True
                        txtCSData4.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData4 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt26.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 4 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData4 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData4.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData4.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData4.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData4").Value).ToString())) And (UCase(Trim((RS.Fields("CSData4").Value).ToString()))) <> "TRUE" Then

                        txtCSData4.Text = (RS.Fields("CSData4").Value).ToString()
                        txtCSData4.Enabled = True
                        txtCSData4.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData4 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt26.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 4 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData4 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then


                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData4.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData4.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData4.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                End If


                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If



                    If (UCase(Trim((RS.Fields("CSData4").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData4").Value).ToString())) Or (Trim((RS.Fields("CSData4").Value).ToString())) Is Nothing Then
                        txtCSData4.Enabled = False
                        txtCSData4.Text = Nothing
                        txtCSData4.BackColor = Color.SkyBlue
                    End If

                    '==End






                    '==CS Data5

                    If (UCase(Trim((RS.Fields("CSData5").Value).ToString()))) = "TRUE" Then
                        txtCSData5.Enabled = True
                        txtCSData5.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData5 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt28.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 5 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData5 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData5.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData5.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData5.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData5").Value).ToString())) And (UCase(Trim((RS.Fields("CSData5").Value).ToString()))) <> "TRUE" Then

                        txtCSData5.Text = (RS.Fields("CSData5").Value).ToString()
                        txtCSData5.Enabled = True
                        txtCSData5.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData5 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt28.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 5 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData5 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData5.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData5.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData5.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData5").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData5").Value).ToString())) Or (Trim((RS.Fields("CSData5").Value).ToString())) Is Nothing Then
                        txtCSData5.Enabled = False
                        txtCSData5.Text = Nothing
                        txtCSData5.BackColor = Color.SkyBlue

                    End If

                    '==End




                    '==CS Data6

                    If (UCase(Trim((RS.Fields("CSData6").Value).ToString()))) = "TRUE" Then
                        txtCSData6.Enabled = True
                        txtCSData6.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData6 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt29.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 6 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData6 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData6.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData6.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData6.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData6").Value).ToString())) And (UCase(Trim((RS.Fields("CSData6").Value).ToString()))) <> "TRUE" Then

                        txtCSData6.Text = (RS.Fields("CSData6").Value).ToString()
                        txtCSData6.Enabled = True
                        txtCSData6.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData6 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt29.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 6 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData6 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData6.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData6.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData6.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData6").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData6").Value).ToString())) Or (Trim((RS.Fields("CSData6").Value).ToString())) Is Nothing Then
                        txtCSData6.Enabled = False
                        txtCSData6.Text = Nothing
                        txtCSData6.BackColor = Color.SkyBlue

                    End If

                    '==End





                    '==CS Data7

                    If (UCase(Trim((RS.Fields("CSData7").Value).ToString()))) = "TRUE" Then
                        txtCSData7.Enabled = True
                        txtCSData7.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData7 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt30.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 7 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData7 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData7.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData7.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData7.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData7").Value).ToString())) And (UCase(Trim((RS.Fields("CSData7").Value).ToString()))) <> "TRUE" Then

                        txtCSData7.Text = (RS.Fields("CSData7").Value).ToString()
                        txtCSData7.Enabled = True
                        txtCSData7.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData7 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt30.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 7 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData7 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData7.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData7.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData7.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData7").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData7").Value).ToString())) Or (Trim((RS.Fields("CSData7").Value).ToString())) Is Nothing Then
                        txtCSData7.Enabled = False
                        txtCSData7.Text = Nothing
                        txtCSData7.BackColor = Color.SkyBlue

                    End If

                    '==End



                    '==CS Data8

                    If (UCase(Trim((RS.Fields("CSData8").Value).ToString()))) = "TRUE" Then
                        txtCSData8.Enabled = True
                        txtCSData8.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData8 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt31.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 8 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData8 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData8.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData8.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData8.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData8").Value).ToString())) And (UCase(Trim((RS.Fields("CSData8").Value).ToString()))) <> "TRUE" Then

                        txtCSData8.Text = (RS.Fields("CSData8").Value).ToString()
                        txtCSData8.Enabled = True
                        txtCSData8.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData8 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt31.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 8 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData8 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData8.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData8.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData8.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData8").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData8").Value).ToString())) Or (Trim((RS.Fields("CSData8").Value).ToString())) Is Nothing Then
                        txtCSData8.Enabled = False
                        txtCSData8.Text = Nothing
                        txtCSData8.BackColor = Color.SkyBlue

                    End If

                    '==End






                    '===CS Data 12

                    If (UCase(Trim((RS.Fields("CSData12").Value).ToString()))) = "TRUE" Then

                        txtCSData12.Enabled = True
                        txtCSData12.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData12 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt27.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If




                    If Not IsDBNull(Trim((RS.Fields("CSData12").Value).ToString())) And (UCase(Trim((RS.Fields("CSData12").Value).ToString()))) <> "TRUE" Then

                        txtCSData12.Text = (RS.Fields("CSData12").Value).ToString()
                        txtCSData12.Enabled = True
                        txtCSData12.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData12 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt27.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CSData12").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData12").Value).ToString())) Or (Trim((RS.Fields("CSData12").Value).ToString())) Is Nothing Then
                        txtCSData12.Enabled = False
                        txtCSData12.Text = Nothing
                        txtCSData12.BackColor = Color.SkyBlue
                    End If

                    '===Car Booked Flag
                    If (UCase(Trim((RS.Fields("CarBookedFlag").Value).ToString()))) = "TRUE" Then
                        txtCarBookedFlag.Enabled = True
                        'txtCarBookedFlag.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CarBookedFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCarBookedFlag.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCarBookedFlag.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCarBookedFlag.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()


                    End If



                    If Not IsDBNull(Trim((RS.Fields("CarBookedFlag").Value).ToString())) And (UCase(Trim((RS.Fields("CarBookedFlag").Value).ToString()))) <> "TRUE" Then

                        txtCarBookedFlag.Text = (RS.Fields("CarBookedFlag").Value).ToString()
                        txtCarBookedFlag.Enabled = True
                        txtCarBookedFlag.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CarBookedFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCarBookedFlag.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCarBookedFlag.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCarBookedFlag.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("CarBookedFlag").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CarBookedFlag").Value).ToString())) Or (Trim((RS.Fields("CarBookedFlag").Value).ToString())) Is Nothing Then
                        txtCarBookedFlag.Enabled = False
                        txtCarBookedFlag.Text = Nothing
                        txtCarBookedFlag.BackColor = Color.SkyBlue
                    End If
                    '===End

                    '====Cost Center Code

                    If (UCase(Trim((RS.Fields("CostCenterCode").Value).ToString()))) = "TRUE" Then

                        txtCostCenterCode.Enabled = True
                        txtCostCenterCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_CostCenter where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt3.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Cost Center Code Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CostCenterCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCostCenterCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCostCenterCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCostCenterCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("CostCenterCode").Value).ToString())) And (UCase(Trim((RS.Fields("CostCenterCode").Value).ToString()))) <> "TRUE" Then

                        txtCostCenterCode.Text = (RS.Fields("CostCenterCode").Value).ToString()
                        txtCostCenterCode.Enabled = True
                        txtCostCenterCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_CostCenter where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt3.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With
                        RS1.Close()


                        '====Cost Center Code Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CostCenterCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCostCenterCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCostCenterCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCostCenterCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If (UCase(Trim((RS.Fields("CostCenterCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CostCenterCode").Value).ToString())) Or (Trim((RS.Fields("CostCenterCode").Value).ToString())) Is Nothing Then

                        txtCostCenterCode.Enabled = False
                        txtCostCenterCode.Text = Nothing
                        txtCostCenterCode.BackColor = Color.SkyBlue

                    End If

                    '=====End


                    '===Department No

                    If (UCase(Trim((RS.Fields("DepartmentNo").Value).ToString()))) = "TRUE" Then

                        txtDeptNo.Enabled = True
                        txtDeptNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_DeptNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt5.Text = (RS1.Fields("FieldName").Value).ToString()
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Department Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_DepartmentNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtDeptNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtDeptNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtDeptNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If



                    If Not IsDBNull(Trim((RS.Fields("DepartmentNo").Value).ToString())) And (UCase(Trim((RS.Fields("DepartmentNo").Value).ToString()))) <> "TRUE" Then

                        txtDeptNo.Text = (RS.Fields("DepartmentNo").Value).ToString()
                        txtDeptNo.Enabled = True
                        txtDeptNo.BackColor = Color.White

                        CHECK_RS1()

                        SQL_QUERY = "Select * from BCDMIS..T_DeptNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then
                                Txt5.Text = (RS1.Fields("FieldName").Value).ToString()
                                RS1.MoveNext()
                            End If

                        End With

                        RS1.Close()

                        '====Department Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_DepartmentNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtDeptNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtDeptNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtDeptNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("DepartmentNo").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("DepartmentNo").Value).ToString())) Or (Trim((RS.Fields("DepartmentNo").Value).ToString())) Is Nothing Then
                        txtDeptNo.Enabled = False
                        txtDeptNo.Text = Nothing
                        txtDeptNo.BackColor = Color.SkyBlue

                    End If
                    '==End



                    '===Employee Number

                    If (UCase(Trim((RS.Fields("EmployeeNo").Value).ToString()))) = "TRUE" Then

                        txtEmployeeNo.Enabled = True
                        txtEmployeeNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_EmpNo where clientID  = '" & Trim((RS.Fields("ClientID").Value).ToString()) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then
                                Txt16.Text = Trim((RS1.Fields("FieldName").Value).ToString())   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Employee No Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_EmployeeNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtEmployeeNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtEmployeeNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtEmployeeNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("EmployeeNo").Value).ToString())) And (UCase(Trim((RS.Fields("EmployeeNo").Value).ToString()))) <> "TRUE" Then

                        txtEmployeeNo.Text = (RS.Fields("EmployeeNo").Value).ToString()
                        txtEmployeeNo.Enabled = True
                        txtEmployeeNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_EmpNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt16.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Employee No Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_EmployeeNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtEmployeeNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtEmployeeNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtEmployeeNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With
                        RS1.Close()

                    End If



                    If (UCase(Trim((RS.Fields("EmployeeNo").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("EmployeeNo").Value).ToString())) Or (Trim((RS.Fields("EmployeeNo").Value).ToString())) Is Nothing Then
                        txtEmployeeNo.Enabled = False
                        txtEmployeeNo.Text = Nothing
                        txtEmployeeNo.BackColor = Color.SkyBlue
                    End If

                    '===End



                    '====Frequent Flyer Number

                    If (UCase(Trim((RS.Fields("FFlyrNo").Value).ToString()))) = "TRUE" Then
                        txtFFLYR.Enabled = True
                        txtFFLYR.BackColor = Color.White
                    End If

                    If Not IsDBNull(Trim((RS.Fields("FFlyrNo").Value).ToString())) And (UCase(Trim((RS.Fields("FFlyrNo").Value).ToString()))) <> "TRUE" Then
                        txtFFLYR.Text = (RS.Fields("FFlyrNo").Value).ToString()
                        txtFFLYR.Enabled = True
                        txtFFLYR.BackColor = Color.White
                    End If

                    If (UCase(Trim((RS.Fields("FFlyrNo").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("FFlyrNo").Value).ToString())) Or (Trim((RS.Fields("FFlyrNo").Value).ToString())) Is Nothing Then
                        txtFFLYR.Enabled = False
                        txtFFLYR.Text = Nothing
                        txtFFLYR.BackColor = Color.SkyBlue
                    End If

                    '==End



                    '==Hotel Reason Code

                    If (UCase(Trim((RS.Fields("HotelReasonCode").Value).ToString()))) = "TRUE" Then
                        txtHotelReasonCD.Enabled = True
                        txtHotelReasonCD.BackColor = Color.White
                        ' btnTravStatusCode.Enabled = True

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_HotelReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt17.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_HotelReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtHotelReasonCD.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtHotelReasonCD.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtHotelReasonCD.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("HotelReasonCode").Value).ToString())) And (UCase(Trim((RS.Fields("HotelReasonCode").Value).ToString()))) <> "TRUE" Then
                        txtHotelReasonCD.Text = (RS.Fields("HotelReasonCode").Value).ToString()
                        txtHotelReasonCD.Enabled = True
                        txtHotelReasonCD.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_HotelReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt17.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_HotelReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtHotelReasonCD.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtHotelReasonCD.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtHotelReasonCD.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("HotelReasonCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("HotelReasonCode").Value).ToString())) Or (Trim((RS.Fields("HotelReasonCode").Value).ToString())) Is Nothing Then
                        txtHotelReasonCD.Text = Nothing
                        txtHotelReasonCD.Enabled = False
                        txtHotelReasonCD.BackColor = Color.SkyBlue
                    End If
                    '==End




                    '==Hotel Booked Flag

                    If (UCase(Trim((RS.Fields("HotelBookedFlag").Value).ToString()))) = "TRUE" Then

                        txtHotelBookedF_N.Enabled = True
                        txtHotelBookedF_N.BackColor = Color.White



                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_HotelBookedFlag where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt18.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Hotel Booked Flag

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_HotelBookedFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtHotelBookedF_N.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtHotelBookedF_N.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtHotelBookedF_N.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()


                    End If

                    If Not IsDBNull(Trim((RS.Fields("HotelBookedFlag").Value).ToString())) And (UCase(Trim((RS.Fields("HotelBookedFlag").Value).ToString()))) <> "TRUE" Then

                        txtHotelBookedF_N.Text = (RS.Fields("HotelBookedFlag").Value).ToString()
                        txtHotelBookedF_N.Enabled = True
                        txtHotelBookedF_N.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_HotelBookedFlag where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt18.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_HotelBookedFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtHotelBookedF_N.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtHotelBookedF_N.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtHotelBookedF_N.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("HotelBookedFlag").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("HotelReasonCode").Value).ToString())) Or (Trim((RS.Fields("HotelReasonCode").Value).ToString())) Is Nothing Then
                        txtHotelBookedF_N.Text = Nothing
                        txtHotelBookedF_N.Enabled = False
                        txtHotelBookedF_N.BackColor = Color.SkyBlue
                    End If
                    '==End



                    '===Major Class

                    If (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) = "TRUE" Then

                        txtMajorClass.Enabled = True
                        txtMajorClass.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt11.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MajorClass where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMajorClass.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMajorClass.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMajorClass.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("MajorClass").Value).ToString())) And (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) <> "TRUE" Then

                        txtMajorClass.Text = (RS.Fields("MajorClass").Value).ToString()
                        txtMajorClass.Enabled = True
                        txtMajorClass.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt11.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MajorClass where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMajorClass.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMajorClass.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMajorClass.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("MajorClass").Value).ToString())) Or (Trim((RS.Fields("MajorClass").Value).ToString())) Is Nothing Then
                        txtMajorClass.Enabled = False
                        txtMajorClass.Text = Nothing
                        txtMajorClass.BackColor = Color.SkyBlue
                    End If

                    '==End


                    '===MgrSuperior

                    If (UCase(Trim((RS.Fields("MgrSuperior").Value).ToString()))) = "TRUE" Then
                        txtMgrSuperior.Enabled = True
                        txtMgrSuperior.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MgrSup where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt9.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Manager Superior No Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MgrSuperior where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMgrSuperior.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMgrSuperior.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMgrSuperior.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("MgrSuperior").Value).ToString())) And (UCase(Trim((RS.Fields("MgrSuperior").Value).ToString()))) <> "TRUE" Then
                        txtMgrSuperior.Text = (RS.Fields("MgrSuperior").Value).ToString()
                        txtMgrSuperior.Enabled = True
                        txtMgrSuperior.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MgrSup where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt9.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Manager Superior No Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MgrSuperior where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMgrSuperior.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMgrSuperior.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMgrSuperior.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("MgrSuperior").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("MgrSuperior").Value).ToString())) Or (Trim((RS.Fields("MgrSuperior").Value).ToString())) Is Nothing Then
                        txtMgrSuperior.Enabled = False
                        txtMgrSuperior.Text = Nothing
                        txtMgrSuperior.BackColor = Color.SkyBlue
                    End If

                    '==End



                    '===Order Reference

                    If (UCase(Trim((RS.Fields("OrderRef").Value).ToString()))) = "TRUE" Then
                        txtOrderRef.Enabled = True
                        txtOrderRef.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_OrderRef where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt6.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Order Reference Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_OrderReference where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtOrderRef.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtOrderRef.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtOrderRef.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                End If
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("OrderRef").Value).ToString())) And (UCase(Trim((RS.Fields("OrderRef").Value).ToString()))) <> "TRUE" Then
                        txtOrderRef.Text = (RS.Fields("OrderRef").Value).ToString()
                        txtOrderRef.Enabled = True
                        txtOrderRef.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_OrderRef where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt6.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Order Reference Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_OrderReference where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtOrderRef.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtOrderRef.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtOrderRef.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                End If
                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("OrderRef").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("OrderRef").Value).ToString())) Or (Trim((RS.Fields("OrderRef").Value).ToString())) Is Nothing Then
                        txtOrderRef.Enabled = False
                        txtOrderRef.Text = Nothing
                        txtOrderRef.BackColor = Color.SkyBlue

                    End If
                    '===End



                    '===Project NO

                    If (UCase(Trim((RS.Fields("ProjectNo").Value).ToString()))) = "TRUE" Then
                        txtProjectNo.Enabled = True
                        txtProjectNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ProjNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt4.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Project Number Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ProjectNumber where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtProjectNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtProjectNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtProjectNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("ProjectNo").Value).ToString())) And (UCase(Trim((RS.Fields("ProjectNo").Value).ToString()))) <> "TRUE" Then

                        txtProjectNo.Text = (RS.Fields("ProjectNo").Value).ToString()
                        txtProjectNo.Enabled = True
                        txtProjectNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ProjNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt4.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Project Number Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ProjectNumber where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtProjectNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtProjectNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtProjectNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("ProjectNo").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ProjectNo").Value).ToString())) Or (Trim((RS.Fields("ProjectNo").Value).ToString())) Is Nothing Then
                        txtProjectNo.Enabled = False
                        txtProjectNo.Text = Nothing
                        txtProjectNo.BackColor = Color.SkyBlue
                    End If
                    '==End


                    ''===Reason of Trip
                    If (UCase(Trim((RS.Fields("ReasonofTrip").Value).ToString()))) = "TRUE" Then

                        txtReasonofTrip.Enabled = True
                        txtReasonofTrip.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonofTrip where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt10.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonOfTrip where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtReasonofTrip.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtReasonofTrip.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtReasonofTrip.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("ReasonofTrip").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonofTrip").Value).ToString()))) <> "TRUE" Then
                        txtReasonofTrip.Text = (RS.Fields("ReasonofTrip").Value).ToString()
                        txtReasonofTrip.Enabled = True
                        txtReasonofTrip.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonofTrip where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt10.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonOfTrip where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtReasonofTrip.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtReasonofTrip.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtReasonofTrip.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If (UCase(Trim((RS.Fields("ReasonofTrip").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonofTrip").Value).ToString())) Or (Trim((RS.Fields("ReasonofTrip").Value).ToString())) Is Nothing Then
                        txtReasonofTrip.Enabled = False
                        txtReasonofTrip.Text = Nothing
                        txtReasonofTrip.BackColor = Color.SkyBlue
                    End If

                    '====End 




                    '====Stop Over Flag

                    If (UCase(Trim((RS.Fields("StopOvrFlag").Value).ToString()))) = "TRUE" Then
                        txtStopOverTRF.Enabled = True
                        txtStopOverTRF.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_StopOverFlag where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt12.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_StopOverFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtStopOverTRF.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtStopOverTRF.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtStopOverTRF.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("StopOvrFlag").Value).ToString())) And (UCase(Trim((RS.Fields("StopOvrFlag").Value).ToString()))) <> "TRUE" Then
                        txtStopOverTRF.Text = (RS.Fields("StopOvrFlag").Value).ToString()
                        txtStopOverTRF.Enabled = True
                        txtStopOverTRF.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_StopOverFlag where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt12.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_StopOverFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtStopOverTRF.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtStopOverTRF.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtStopOverTRF.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("StopOvrFlag").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("StopOvrFlag").Value).ToString())) Or (Trim((RS.Fields("StopOvrFlag").Value).ToString())) Is Nothing Then
                        txtStopOverTRF.Enabled = False
                        txtStopOverTRF.Text = Nothing
                        txtStopOverTRF.BackColor = Color.SkyBlue
                    End If

                    '==End



                    '==Record Type

                    If (UCase(Trim((RS.Fields("RecordType").Value).ToString()))) = "TRUE" Then
                        txtRecordType.Enabled = True
                        txtRecordType.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_RecordType where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRecordType.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRecordType.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtRecordType.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("RecordType").Value).ToString())) And (UCase(Trim((RS.Fields("RecordType").Value).ToString()))) <> "TRUE" Then
                        txtRecordType.Text = (RS.Fields("RecordType").Value).ToString()
                        txtRecordType.Enabled = True
                        txtRecordType.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_RecordType where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRecordType.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRecordType.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtRecordType.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()
                    End If

                    If (UCase(Trim((RS.Fields("RecordType").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("RecordType").Value).ToString())) Or (Trim((RS.Fields("RecordType").Value).ToString())) Is Nothing Then
                        txtRecordType.Enabled = False
                        txtRecordType.Text = Nothing
                        txtRecordType.BackColor = Color.SkyBlue
                    End If
                    'End



                    '===Sales Channel

                    If (UCase(Trim((RS.Fields("SalesChannel").Value).ToString()))) = "TRUE" Then

                        txtSalesChannel.Enabled = True
                        txtSalesChannel.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_SalesChannel where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt21.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_SalesChannel where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtSalesChannel.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtSalesChannel.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtSalesChannel.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If Not IsDBNull(Trim((RS.Fields("SalesChannel").Value).ToString())) And (UCase(Trim((RS.Fields("SalesChannel").Value).ToString()))) <> "TRUE" Then
                        txtSalesChannel.Text = (RS.Fields("SalesChannel").Value).ToString()
                        txtSalesChannel.Enabled = True
                        txtSalesChannel.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_SalesChannel where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt21.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_SalesChannel where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtSalesChannel.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtSalesChannel.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtSalesChannel.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("SalesChannel").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("SalesChannel").Value).ToString())) Or (Trim((RS.Fields("SalesChannel").Value).ToString())) Is Nothing Then
                        txtSalesChannel.Enabled = False
                        txtSalesChannel.Text = Nothing
                        txtSalesChannel.BackColor = Color.SkyBlue
                    End If
                    '==End


                    '==Tour Code
                    If (UCase(Trim((RS.Fields("TourCode").Value).ToString()))) = "TRUE" Then
                        txtTourCode.Enabled = True
                        txtTourCode.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TourCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt13.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_TourCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtTourCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtTourCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtTourCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If Not IsDBNull(Trim((RS.Fields("TourCode").Value).ToString())) And (UCase(Trim((RS.Fields("TourCode").Value).ToString()))) <> "TRUE" Then
                        txtTourCode.Text = (RS.Fields("TourCode").Value).ToString()
                        txtTourCode.Enabled = True
                        txtTourCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TourCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt13.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_TourCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtTourCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtTourCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtTourCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("TourCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("TourCode").Value).ToString())) Or (Trim((RS.Fields("TourCode").Value).ToString())) Is Nothing Then
                        txtTourCode.Enabled = False
                        txtTourCode.Text = Nothing
                        txtTourCode.BackColor = Color.SkyBlue
                    End If
                    '==End


                    '=====Traveller Name

                    If (UCase(Trim((RS.Fields("TravellerName").Value).ToString()))) = "TRUE" Then
                        txtTravellerName.Enabled = True
                        txtTravellerName.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TravaName where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt1.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If



                    If Not IsDBNull(Trim((RS.Fields("TravellerName").Value).ToString())) And (UCase(Trim((RS.Fields("TravellerName").Value).ToString()))) <> "TRUE" Then

                        txtTravellerName.Text = (RS.Fields("TravellerName").Value).ToString()
                        txtTravellerName.Enabled = True
                        txtTravellerName.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TravaName where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt1.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("TravellerName").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("TravellerName").Value).ToString())) Or (Trim((RS.Fields("TravellerName").Value).ToString())) Is Nothing Then
                        txtTravellerName.Enabled = False
                        txtTravellerName.Text = Nothing
                        txtTravellerName.BackColor = Color.SkyBlue
                    End If
                    '===End



                    '===Traveller Status

                    If (UCase(Trim((RS.Fields("TravellerStatus").Value).ToString()))) = "TRUE" Then

                        txtTravellerStat.Enabled = True
                        txtTravellerStat.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TravStatus where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt2.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Traveller Status Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_TravellerStatus where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtTravellerStat.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtTravellerStat.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtTravellerStat.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If Not IsDBNull(Trim((RS.Fields("TravellerStatus").Value).ToString())) And (UCase(Trim((RS.Fields("TravellerStatus").Value).ToString()))) <> "TRUE" Then

                        txtTravellerStat.Text = (RS.Fields("TravellerStatus").Value).ToString()
                        txtTravellerStat.Enabled = True
                        txtTravellerStat.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TravStatus where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt2.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Traveller Status Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_TravellerStatus where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtTravellerStat.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtTravellerStat.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtTravellerStat.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("TravellerStatus").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("TravellerStatus").Value).ToString())) Or (Trim((RS.Fields("TravellerStatus").Value).ToString())) Is Nothing Then
                        txtTravellerStat.Enabled = False
                        txtTravellerStat.Text = Nothing
                        txtTravellerStat.BackColor = Color.SkyBlue
                    End If

                    '===End


                    ' ''===Customer Spec Field

                    ''If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "TRUE" Then

                    ''    txtCustSpecLowFare.Enabled = True
                    ''    txtCustSpecLowFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtCustSpecLowFare.BackColor = Color.Yellow
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecLowFare.BackColor = Color.AntiqueWhite
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecLowFare.BackColor = Color.Orange
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)

                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()

                    ''End If


                    ''If Not IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) <> "TRUE" Then

                    ''    txtCustSpecLowFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
                    ''    txtCustSpecLowFare.Enabled = True
                    ''    txtCustSpecLowFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtCustSpecLowFare.BackColor = Color.Yellow
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecLowFare.BackColor = Color.AntiqueWhite
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                    ''                txtCustSpecLowFare.BackColor = Color.Orange
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()


                    ''End If

                    ''If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) Or (Trim((RS.Fields("CustoSpecLF").Value).ToString())) Is Nothing Then
                    ''    txtCustSpecLowFare.Enabled = False
                    ''    txtCustSpecLowFare.Text = Nothing
                    ''    txtCustSpecLowFare.BackColor = Color.SkyBlue
                    ''End If



                    ' ''    RS.MoveNext()

                    ' ''End If



                    ' '' ===Customer Spec Field Reference Fare Amount

                    ''If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "TRUE" Then

                    ''    txtCustSpecHighFare.Enabled = True
                    ''    txtCustSpecHighFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtCustSpecHighFare.BackColor = Color.Yellow
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecHighFare.BackColor = Color.AntiqueWhite
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecHighFare.BackColor = Color.Orange
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)

                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()


                    ''End If


                    ''If Not IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) <> "TRUE" Then

                    ''    txtCustSpecHighFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
                    ''    txtCustSpecHighFare.Enabled = True
                    ''    txtCustSpecHighFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtCustSpecHighFare.BackColor = Color.Yellow
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecHighFare.BackColor = Color.AntiqueWhite
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                    ''                txtCustSpecHighFare.BackColor = Color.Orange
                    ''                Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()


                    ''End If

                    ''If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Or (Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Is Nothing Then
                    ''    txtCustSpecHighFare.Enabled = False
                    ''    txtCustSpecHighFare.Text = Nothing
                    ''    txtCustSpecHighFare.BackColor = Color.SkyBlue
                    ''End If



                    ' '' ===Low Fare

                    ''If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "TRUE" Then

                    ''    txtLowFare.Enabled = True
                    ''    txtLowFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtLowFare.BackColor = Color.Yellow
                    ''                Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtLowFare.BackColor = Color.AntiqueWhite
                    ''                Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtLowFare.BackColor = Color.Orange
                    ''                Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)

                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()

                    ''End If



                    ''If Not IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) And (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) <> "TRUE" Then

                    ''    txtLowFare.Text = (RS.Fields("LowFare").Value).ToString()
                    ''    txtLowFare.Enabled = True
                    ''    txtLowFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtLowFare.BackColor = Color.Yellow
                    ''                Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtLowFare.BackColor = Color.AntiqueWhite
                    ''                Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                    ''                txtLowFare.BackColor = Color.Orange
                    ''                Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()


                    ''End If

                    ''If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) Or (Trim((RS.Fields("LowFare").Value).ToString())) Is Nothing Then
                    ''    txtLowFare.Enabled = False
                    ''    txtLowFare.Text = Nothing
                    ''    txtLowFare.BackColor = Color.SkyBlue
                    ''End If


                    ' ''====Full Fare

                    ''If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "TRUE" Then

                    ''    txtRefFare.Enabled = True
                    ''    txtRefFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtRefFare.BackColor = Color.Yellow
                    ''                Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtRefFare.BackColor = Color.AntiqueWhite
                    ''                Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtRefFare.BackColor = Color.Orange
                    ''                Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)

                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()


                    ''End If


                    ''If Not IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) And (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) <> "TRUE" Then

                    ''    txtRefFare.Text = (RS.Fields("FullFare").Value).ToString()
                    ''    txtRefFare.Enabled = True
                    ''    txtRefFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtRefFare.BackColor = Color.Yellow
                    ''                Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtRefFare.BackColor = Color.AntiqueWhite
                    ''                Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                    ''                txtRefFare.BackColor = Color.Orange
                    ''                Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()


                    ''End If

                    ''If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) Or (Trim((RS.Fields("FullFare").Value).ToString())) Is Nothing Then
                    ''    txtRefFare.Enabled = False
                    ''    txtRefFare.Text = Nothing
                    ''    txtRefFare.BackColor = Color.SkyBlue
                    ''End If

                    RS.MoveNext()
                End If


            End With

            RS.Close()


            '=============================================End First Condition

        ElseIf Trim(strClientGlobalCustNo) <> Nothing Then


            CHECK_RS()

            SQL_QUERY = "Select * from BCDMIS..ClientSpecific where GlobalCustNo = '" & Trim(strClientGlobalCustNo) & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS

                If Not RS.EOF Then
                    If Not IsDBNull(Trim((RS.Fields("GlobalCustNo").Value).ToString())) Then

                        txtGlobalCustNo.Enabled = True
                        txtGlobalCustNo.Text = (RS.Fields("GlobalCustNo").Value).ToString()
                        GlobalCustNO = (RS.Fields("GlobalCustNo").Value).ToString()
                        GlobalClientNo = (RS.Fields("ClientID").Value).ToString()
                        txtGlobalCustNo.BackColor = Color.White

                    Else
                        txtGlobalCustNo.Enabled = False
                        txtGlobalCustNo.Text = Nothing
                        txtGlobalCustNo.BackColor = Color.SkyBlue
                    End If


                    '====SM ID
                    If Not IsDBNull(Trim((RS.Fields("SMDID").Value).ToString())) And (UCase(Trim((RS.Fields("SMDID").Value).ToString()))) <> "TRUE" Then
                        txtSMID.Enabled = True
                        txtSMID.Text = (RS.Fields("SMDID").Value).ToString()
                        txtSMID.BackColor = Color.White
                    End If

                    If (Trim((RS.Fields("SMDID").Value).ToString())) = "TRUE" Then
                        txtSMID.Enabled = True
                        txtSMID.Text = (RS.Fields("SMDID").Value).ToString()
                        txtSMID.BackColor = Color.White
                    End If

                    If IsDBNull(Trim((RS.Fields("SMDID").Value).ToString())) Or (Trim((RS.Fields("SMDID").Value).ToString())) = "" Or (Trim((RS.Fields("SMDID").Value).ToString())) Is Nothing Then
                        txtSMID.Enabled = False
                        txtSMID.Text = Nothing
                        txtSMID.BackColor = Color.SkyBlue

                    End If
                    '=====End


                    '====TSP ID
                    If Not IsDBNull(Trim((RS.Fields("TSPID").Value).ToString())) And (UCase(Trim((RS.Fields("TSPID").Value).ToString()))) <> "TRUE" Then
                        txtTSPID.Enabled = True
                        txtTSPID.Text = (RS.Fields("TSPID").Value).ToString()
                        txtTSPID.BackColor = Color.White
                    End If

                    If (Trim((RS.Fields("TSPID").Value).ToString())) = "TRUE" Then
                        txtTSPID.Enabled = True
                        txtTSPID.Text = (RS.Fields("TSPID").Value).ToString()
                        txtTSPID.BackColor = Color.White
                    End If

                    If IsDBNull(Trim((RS.Fields("TSPID").Value).ToString())) Or (Trim((RS.Fields("TSPID").Value).ToString())) = "" Or (Trim((RS.Fields("TSPID").Value).ToString())) Is Nothing Then
                        txtTSPID.Enabled = False
                        txtTSPID.Text = Nothing
                        txtTSPID.BackColor = Color.SkyBlue

                    End If
                    '=====End


                    '====Local Customer Number
                    If Not IsDBNull(Trim((RS.Fields("localCustNo").Value).ToString())) And (UCase(Trim((RS.Fields("localCustNo").Value).ToString()))) <> "TRUE" Then
                        txtLocalCustNo.Enabled = True
                        txtLocalCustNo.Text = (RS.Fields("localCustNo").Value).ToString()
                        txtLocalCustNo.BackColor = Color.White
                    End If

                    If (Trim((RS.Fields("localCustNo").Value).ToString())) = "TRUE" Then
                        txtLocalCustNo.Enabled = True
                        txtLocalCustNo.BackColor = Color.White
                    End If

                    If IsDBNull(Trim((RS.Fields("localCustNo").Value).ToString())) Or (Trim((RS.Fields("localCustNo").Value).ToString())) = "" Or (Trim((RS.Fields("localCustNo").Value).ToString())) Is Nothing Then
                        txtLocalCustNo.Enabled = False
                        txtLocalCustNo.Text = Nothing
                        txtLocalCustNo.BackColor = Color.SkyBlue
                    End If
                    '=====End



                    '===Air No Accomodation Reason Code
                    If (UCase(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString()))) = "TRUE" Then

                        txtAirNoReasonCD.Enabled = True
                        txtAirNoReasonCD.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_AirNoAccomReasonCD where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt19.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '===== Accomodation Reason Code

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_AccomodationReasonCD where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtAirNoReasonCD.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtAirNoReasonCD.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtAirNoReasonCD.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString())) And (UCase(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString()))) <> "TRUE" Then

                        txtAirNoReasonCD.Text = (RS.Fields("AirNoAccomodationReasconCode").Value).ToString()
                        txtAirNoReasonCD.Enabled = True
                        txtAirNoReasonCD.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_AirNoAccomReasonCD where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt19.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '===== Accomodation Reason Code

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_AccomodationReasonCD where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtAirNoReasonCD.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtAirNoReasonCD.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtAirNoReasonCD.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtAirNoReasonCD, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString())) Or (Trim((RS.Fields("AirNoAccomodationReasconCode").Value).ToString())) Is Nothing Then
                        txtAirNoReasonCD.Enabled = False
                        txtAirNoReasonCD.Text = Nothing
                        txtAirNoReasonCD.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '===Approver
                    If (UCase(Trim((RS.Fields("Approver").Value).ToString()))) = "TRUE" Then
                        txtApprover.Enabled = True
                        txtApprover.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_Approver where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt7.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Approver Field
                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_Approver where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtApprover.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtApprover.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtApprover.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("Approver").Value).ToString())) And (UCase(Trim((RS.Fields("Approver").Value).ToString()))) <> "TRUE" Then

                        txtApprover.Text = (RS.Fields("Approver").Value).ToString()
                        txtApprover.Enabled = True
                        txtApprover.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_Approver where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt7.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Approver Field
                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_Approver where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtApprover.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtApprover.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtApprover.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("Approver").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("Approver").Value).ToString())) Or (Trim((RS.Fields("Approver").Value).ToString())) Is Nothing Then
                        txtApprover.Enabled = False
                        txtApprover.Text = Nothing
                        txtApprover.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '===Approval Code
                    If (UCase(Trim((RS.Fields("ApprovalCode").Value).ToString()))) = "TRUE" Then
                        txtApproverCode.Enabled = True
                        txtApproverCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ApprovalCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt8.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Approvel Code Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ApprovalCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtApproverCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtApproverCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtApproverCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtApprover, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If

                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("ApprovalCode").Value).ToString())) And (UCase(Trim((RS.Fields("ApprovalCode").Value).ToString()))) <> "TRUE" Then

                        txtApproverCode.Text = (RS.Fields("ApprovalCode").Value).ToString()
                        txtApproverCode.Enabled = True
                        txtApproverCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ApprovalCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt8.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Approvel Code Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ApprovalCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtApproverCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtApproverCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtApproverCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtApproverCode, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("ApprovalCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ApprovalCode").Value).ToString())) Or (Trim((RS.Fields("ApprovalCode").Value).ToString())) Is Nothing Then
                        txtApproverCode.Enabled = False
                        txtApproverCode.Text = Nothing
                        txtApproverCode.BackColor = Color.SkyBlue
                    End If
                    '==End

                    '===CS Data 1

                    If (UCase(Trim((RS.Fields("CSData1").Value).ToString()))) = "TRUE" Then

                        txtCSData1.Enabled = True
                        txtCSData1.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData1 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt23.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 1 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData1 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData1.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData1.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData1.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("CSData1").Value).ToString())) And (UCase(Trim((RS.Fields("CSData1").Value).ToString()))) <> "TRUE" Then

                        txtCSData1.Text = (RS.Fields("CSData1").Value).ToString()
                        txtCSData1.Enabled = True
                        txtCSData1.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData1 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt23.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 1 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData1 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData1.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData1.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData1.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData1, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData1").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData1").Value).ToString())) Or (Trim((RS.Fields("CSData1").Value).ToString())) Is Nothing Then
                        txtCSData1.Enabled = False
                        txtCSData1.Text = Nothing
                        txtCSData1.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '==CS Data2

                    If (UCase(Trim((RS.Fields("CSData2").Value).ToString()))) = "TRUE" Then
                        txtCSData2.Enabled = True
                        txtCSData2.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData2 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt24.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 2 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData2 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData2.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData2.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData2.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData2").Value).ToString())) And (UCase(Trim((RS.Fields("CSData2").Value).ToString()))) <> "TRUE" Then

                        txtCSData2.Text = (RS.Fields("CSData2").Value).ToString()
                        txtCSData2.Enabled = True
                        txtCSData2.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData2 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt24.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 2 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData2 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData2.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData2.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData2.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData2, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()
                    End If

                    If (UCase(Trim((RS.Fields("CSData2").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData2").Value).ToString())) Or (Trim((RS.Fields("CSData2").Value).ToString())) Is Nothing Then
                        txtCSData2.Enabled = False
                        txtCSData2.Text = Nothing
                        txtCSData2.BackColor = Color.SkyBlue

                    End If

                    '==End


                    '===CS Data 3
                    If (UCase(Trim((RS.Fields("CSData3").Value).ToString()))) = "TRUE" Then

                        txtCSData3.Enabled = True
                        txtCSData3.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData3 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt25.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 3 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData3 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData3.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData3.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData3.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData3").Value).ToString())) And (UCase(Trim((RS.Fields("CSData3").Value).ToString()))) <> "TRUE" Then

                        txtCSData3.Text = (RS.Fields("CSData3").Value).ToString()
                        txtCSData3.Enabled = True
                        txtCSData3.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData3 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt25.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 3 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData3 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData3.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData3.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData3.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData3, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CSData3").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData3").Value).ToString())) Or (Trim((RS.Fields("CSData3").Value).ToString())) Is Nothing Then

                        txtCSData3.Enabled = False
                        txtCSData3.Text = Nothing
                        txtCSData3.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '==CS Data 4

                    If (UCase(Trim((RS.Fields("CSData4").Value).ToString()))) = "TRUE" Then

                        txtCSData4.Enabled = True
                        txtCSData4.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData4 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt26.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 4 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData4 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData4.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData4.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData4.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData4").Value).ToString())) And (UCase(Trim((RS.Fields("CSData4").Value).ToString()))) <> "TRUE" Then

                        txtCSData4.Text = (RS.Fields("CSData4").Value).ToString()
                        txtCSData4.Enabled = True
                        txtCSData4.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData4 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt26.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 4 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData4 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then


                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData4.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData4.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData4.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData4, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CSData4").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData4").Value).ToString())) Or (Trim((RS.Fields("CSData4").Value).ToString())) Is Nothing Then

                        txtCSData4.Enabled = False
                        txtCSData4.Text = Nothing
                        txtCSData4.BackColor = Color.SkyBlue

                    End If

                    '==End




                    '==CS Data5

                    If (UCase(Trim((RS.Fields("CSData5").Value).ToString()))) = "TRUE" Then
                        txtCSData5.Enabled = True
                        txtCSData5.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData5 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt28.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 5 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData5 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData5.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData5.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData5.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData5").Value).ToString())) And (UCase(Trim((RS.Fields("CSData5").Value).ToString()))) <> "TRUE" Then

                        txtCSData5.Text = (RS.Fields("CSData5").Value).ToString()
                        txtCSData5.Enabled = True
                        txtCSData5.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData5 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt28.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 5 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData5 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData5.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData5.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData5.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData5, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData5").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData5").Value).ToString())) Or (Trim((RS.Fields("CSData5").Value).ToString())) Is Nothing Then
                        txtCSData5.Enabled = False
                        txtCSData5.Text = Nothing
                        txtCSData5.BackColor = Color.SkyBlue

                    End If

                    '==End




                    '==CS Data6

                    If (UCase(Trim((RS.Fields("CSData6").Value).ToString()))) = "TRUE" Then
                        txtCSData6.Enabled = True
                        txtCSData6.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData6 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt29.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 6 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData6 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData6.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData6.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData6.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData6").Value).ToString())) And (UCase(Trim((RS.Fields("CSData6").Value).ToString()))) <> "TRUE" Then

                        txtCSData6.Text = (RS.Fields("CSData6").Value).ToString()
                        txtCSData6.Enabled = True
                        txtCSData6.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData6 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt29.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 6 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData6 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData6.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData6.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData6.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData6, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData6").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData6").Value).ToString())) Or (Trim((RS.Fields("CSData6").Value).ToString())) Is Nothing Then
                        txtCSData6.Enabled = False
                        txtCSData6.Text = Nothing
                        txtCSData6.BackColor = Color.SkyBlue

                    End If

                    '==End







                    '==CS Data7

                    If (UCase(Trim((RS.Fields("CSData7").Value).ToString()))) = "TRUE" Then
                        txtCSData7.Enabled = True
                        txtCSData7.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData7 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt30.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 7 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData7 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData7.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData7.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData7.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData7").Value).ToString())) And (UCase(Trim((RS.Fields("CSData7").Value).ToString()))) <> "TRUE" Then

                        txtCSData7.Text = (RS.Fields("CSData7").Value).ToString()
                        txtCSData7.Enabled = True
                        txtCSData7.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData7 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt30.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 7 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData7 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData7.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData7.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData7.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData7, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData7").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData7").Value).ToString())) Or (Trim((RS.Fields("CSData7").Value).ToString())) Is Nothing Then
                        txtCSData7.Enabled = False
                        txtCSData7.Text = Nothing
                        txtCSData7.BackColor = Color.SkyBlue

                    End If

                    '==End



                    '==CS Data8

                    If (UCase(Trim((RS.Fields("CSData8").Value).ToString()))) = "TRUE" Then
                        txtCSData8.Enabled = True
                        txtCSData8.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData8 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt31.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 8 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData8 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData8.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData8.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData8.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CSData8").Value).ToString())) And (UCase(Trim((RS.Fields("CSData8").Value).ToString()))) <> "TRUE" Then

                        txtCSData8.Text = (RS.Fields("CSData8").Value).ToString()
                        txtCSData8.Enabled = True
                        txtCSData8.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData8 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                txt31.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Client Data 8 Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ClientData8 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCSData8.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCSData8.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCSData8.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCSData8, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If (UCase(Trim((RS.Fields("CSData8").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData8").Value).ToString())) Or (Trim((RS.Fields("CSData8").Value).ToString())) Is Nothing Then
                        txtCSData8.Enabled = False
                        txtCSData8.Text = Nothing
                        txtCSData8.BackColor = Color.SkyBlue

                    End If

                    '==End



                    '===CS Data 12

                    If (UCase(Trim((RS.Fields("CSData12").Value).ToString()))) = "TRUE" Then

                        txtCSData12.Enabled = True
                        txtCSData12.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData12 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt27.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If




                    If Not IsDBNull(Trim((RS.Fields("CSData12").Value).ToString())) And (UCase(Trim((RS.Fields("CSData12").Value).ToString()))) <> "TRUE" Then

                        txtCSData12.Text = (RS.Fields("CSData12").Value).ToString()
                        txtCSData12.Enabled = True
                        txtCSData12.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ClientData12 where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt27.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CSData12").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CSData12").Value).ToString())) Or (Trim((RS.Fields("CSData12").Value).ToString())) Is Nothing Then

                        txtCSData12.Enabled = False
                        txtCSData12.Text = Nothing
                        txtCSData12.BackColor = Color.SkyBlue

                    End If

                    '===Car Booked Flag
                    If (UCase(Trim((RS.Fields("CarBookedFlag").Value).ToString()))) = "TRUE" Then
                        txtCarBookedFlag.Enabled = True
                        'txtCarBookedFlag.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CarBookedFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCarBookedFlag.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCarBookedFlag.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCarBookedFlag.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()


                    End If



                    If Not IsDBNull(Trim((RS.Fields("CarBookedFlag").Value).ToString())) And (UCase(Trim((RS.Fields("CarBookedFlag").Value).ToString()))) <> "TRUE" Then

                        txtCarBookedFlag.Text = (RS.Fields("CarBookedFlag").Value).ToString()
                        txtCarBookedFlag.Enabled = True
                        txtCarBookedFlag.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CarBookedFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCarBookedFlag.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCarBookedFlag.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCarBookedFlag.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCarBookedFlag, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("CarBookedFlag").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CarBookedFlag").Value).ToString())) Or (Trim((RS.Fields("CarBookedFlag").Value).ToString())) Is Nothing Then
                        txtCarBookedFlag.Enabled = False
                        txtCarBookedFlag.Text = Nothing
                        txtCarBookedFlag.BackColor = Color.SkyBlue
                    End If
                    '===End

                    '====Cost Center Code

                    If (UCase(Trim((RS.Fields("CostCenterCode").Value).ToString()))) = "TRUE" Then

                        txtCostCenterCode.Enabled = True
                        txtCostCenterCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_CostCenter where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt3.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Cost Center Code Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CostCenterCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCostCenterCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCostCenterCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCostCenterCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("CostCenterCode").Value).ToString())) And (UCase(Trim((RS.Fields("CostCenterCode").Value).ToString()))) <> "TRUE" Then

                        txtCostCenterCode.Text = (RS.Fields("CostCenterCode").Value).ToString()
                        txtCostCenterCode.Enabled = True
                        txtCostCenterCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_CostCenter where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt3.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With
                        RS1.Close()


                        '====Cost Center Code Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CostCenterCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCostCenterCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCostCenterCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCostCenterCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCostCenterCode, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If (UCase(Trim((RS.Fields("CostCenterCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CostCenterCode").Value).ToString())) Or (Trim((RS.Fields("CostCenterCode").Value).ToString())) Is Nothing Then

                        txtCostCenterCode.Enabled = False
                        txtCostCenterCode.Text = Nothing
                        txtCostCenterCode.BackColor = Color.SkyBlue

                    End If

                    '=====End





                    '===Department No

                    If (UCase(Trim((RS.Fields("DepartmentNo").Value).ToString()))) = "TRUE" Then

                        txtDeptNo.Enabled = True
                        txtDeptNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_DeptNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt5.Text = (RS1.Fields("FieldName").Value).ToString()
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Department Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_DepartmentNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtDeptNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtDeptNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtDeptNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If



                    If Not IsDBNull(Trim((RS.Fields("DepartmentNo").Value).ToString())) And (UCase(Trim((RS.Fields("DepartmentNo").Value).ToString()))) <> "TRUE" Then

                        txtDeptNo.Text = (RS.Fields("DepartmentNo").Value).ToString()
                        txtDeptNo.Enabled = True
                        txtDeptNo.BackColor = Color.White

                        CHECK_RS1()

                        SQL_QUERY = "Select * from BCDMIS..T_DeptNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then
                                Txt5.Text = (RS1.Fields("FieldName").Value).ToString()
                                RS1.MoveNext()
                            End If

                        End With

                        RS1.Close()

                        '====Department Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_DepartmentNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtDeptNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtDeptNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtDeptNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtDeptNo, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("DepartmentNo").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("DepartmentNo").Value).ToString())) Or (Trim((RS.Fields("DepartmentNo").Value).ToString())) Is Nothing Then
                        txtDeptNo.Enabled = False
                        txtDeptNo.Text = Nothing
                        txtDeptNo.BackColor = Color.SkyBlue

                    End If
                    '==End


                    '===Employee Number

                    If (UCase(Trim((RS.Fields("EmployeeNo").Value).ToString()))) = "TRUE" Then

                        txtEmployeeNo.Enabled = True
                        txtEmployeeNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_EmpNo where clientID  = '" & Trim((RS.Fields("ClientID").Value).ToString()) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then
                                Txt16.Text = Trim((RS1.Fields("FieldName").Value).ToString())   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Employee No Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_EmployeeNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtEmployeeNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtEmployeeNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtEmployeeNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("EmployeeNo").Value).ToString())) And (UCase(Trim((RS.Fields("EmployeeNo").Value).ToString()))) <> "TRUE" Then

                        txtEmployeeNo.Text = (RS.Fields("EmployeeNo").Value).ToString()
                        txtEmployeeNo.Enabled = True
                        txtEmployeeNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_EmpNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt16.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Employee No Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_EmployeeNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtEmployeeNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtEmployeeNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtEmployeeNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtEmployeeNo, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With
                        RS1.Close()

                    End If



                    If (UCase(Trim((RS.Fields("EmployeeNo").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("EmployeeNo").Value).ToString())) Or (Trim((RS.Fields("EmployeeNo").Value).ToString())) Is Nothing Then

                        txtEmployeeNo.Enabled = False
                        txtEmployeeNo.Text = Nothing
                        txtEmployeeNo.BackColor = Color.SkyBlue

                    End If

                    '===End




                    '====Frequent Flyer Number

                    If (UCase(Trim((RS.Fields("FFlyrNo").Value).ToString()))) = "TRUE" Then
                        txtFFLYR.Enabled = True
                        txtFFLYR.BackColor = Color.White

                    End If

                    If Not IsDBNull(Trim((RS.Fields("FFlyrNo").Value).ToString())) And (UCase(Trim((RS.Fields("FFlyrNo").Value).ToString()))) <> "TRUE" Then
                        txtFFLYR.Text = (RS.Fields("FFlyrNo").Value).ToString()
                        txtFFLYR.Enabled = True
                        txtFFLYR.BackColor = Color.White
                    End If

                    If (UCase(Trim((RS.Fields("FFlyrNo").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("FFlyrNo").Value).ToString())) Or (Trim((RS.Fields("FFlyrNo").Value).ToString())) Is Nothing Then
                        txtFFLYR.Enabled = False
                        txtFFLYR.Text = Nothing
                        txtFFLYR.BackColor = Color.SkyBlue
                    End If

                    '==End


                    '==Hotel Reason Code

                    If (UCase(Trim((RS.Fields("HotelReasonCode").Value).ToString()))) = "TRUE" Then
                        txtHotelReasonCD.Enabled = True
                        txtHotelReasonCD.BackColor = Color.White
                        ' btnTravStatusCode.Enabled = True

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_HotelReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt17.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_HotelReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtHotelReasonCD.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtHotelReasonCD.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtHotelReasonCD.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("HotelReasonCode").Value).ToString())) And (UCase(Trim((RS.Fields("HotelReasonCode").Value).ToString()))) <> "TRUE" Then

                        txtHotelReasonCD.Text = (RS.Fields("HotelReasonCode").Value).ToString()
                        txtHotelReasonCD.Enabled = True
                        txtHotelReasonCD.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_HotelReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt17.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_HotelReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtHotelReasonCD.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtHotelReasonCD.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtHotelReasonCD.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtHotelReasonCD, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("HotelReasonCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("HotelReasonCode").Value).ToString())) Or (Trim((RS.Fields("HotelReasonCode").Value).ToString())) Is Nothing Then
                        txtHotelReasonCD.Text = Nothing
                        txtHotelReasonCD.Enabled = False
                        txtHotelReasonCD.BackColor = Color.SkyBlue
                    End If
                    '==End


                    '==Hotel Booked Flag

                    If (UCase(Trim((RS.Fields("HotelBookedFlag").Value).ToString()))) = "TRUE" Then

                        txtHotelBookedF_N.Enabled = True
                        txtHotelBookedF_N.BackColor = Color.White



                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_HotelBookedFlag where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt18.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Hotel Booked Flag

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_HotelBookedFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtHotelBookedF_N.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtHotelBookedF_N.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtHotelBookedF_N.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()


                    End If

                    If Not IsDBNull(Trim((RS.Fields("HotelBookedFlag").Value).ToString())) And (UCase(Trim((RS.Fields("HotelBookedFlag").Value).ToString()))) <> "TRUE" Then

                        txtHotelBookedF_N.Text = (RS.Fields("HotelBookedFlag").Value).ToString()
                        txtHotelBookedF_N.Enabled = True
                        txtHotelBookedF_N.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_HotelBookedFlag where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt18.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_HotelBookedFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtHotelBookedF_N.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtHotelBookedF_N.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtHotelBookedF_N.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtHotelBookedF_N, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("HotelBookedFlag").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("HotelReasonCode").Value).ToString())) Or (Trim((RS.Fields("HotelReasonCode").Value).ToString())) Is Nothing Then
                        txtHotelBookedF_N.Text = Nothing
                        txtHotelBookedF_N.Enabled = False
                        txtHotelBookedF_N.BackColor = Color.SkyBlue
                    End If
                    '==End



                    '===Major Class

                    If (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) = "TRUE" Then

                        txtMajorClass.Enabled = True
                        txtMajorClass.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt11.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MajorClass where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMajorClass.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMajorClass.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMajorClass.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("MajorClass").Value).ToString())) And (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) <> "TRUE" Then

                        txtMajorClass.Text = (RS.Fields("MajorClass").Value).ToString()
                        txtMajorClass.Enabled = True
                        txtMajorClass.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt11.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MajorClass where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMajorClass.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMajorClass.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMajorClass.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("MajorClass").Value).ToString())) Or (Trim((RS.Fields("MajorClass").Value).ToString())) Is Nothing Then
                        txtMajorClass.Enabled = False
                        txtMajorClass.Text = Nothing
                        txtMajorClass.BackColor = Color.SkyBlue
                    End If

                    '==End


                    '===MgrSuperior

                    If (UCase(Trim((RS.Fields("MgrSuperior").Value).ToString()))) = "TRUE" Then
                        txtMgrSuperior.Enabled = True
                        txtMgrSuperior.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MgrSup where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt9.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Manager Superior No Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MgrSuperior where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMgrSuperior.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMgrSuperior.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMgrSuperior.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("MgrSuperior").Value).ToString())) And (UCase(Trim((RS.Fields("MgrSuperior").Value).ToString()))) <> "TRUE" Then
                        txtMgrSuperior.Text = (RS.Fields("MgrSuperior").Value).ToString()
                        txtMgrSuperior.Enabled = True
                        txtMgrSuperior.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MgrSup where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt9.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Manager Superior No Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MgrSuperior where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMgrSuperior.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMgrSuperior.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMgrSuperior.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMgrSuperior, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("MgrSuperior").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("MgrSuperior").Value).ToString())) Or (Trim((RS.Fields("MgrSuperior").Value).ToString())) Is Nothing Then
                        txtMgrSuperior.Enabled = False
                        txtMgrSuperior.Text = Nothing
                        txtMgrSuperior.BackColor = Color.SkyBlue
                    End If

                    '==End



                    '===Order Reference

                    If (UCase(Trim((RS.Fields("OrderRef").Value).ToString()))) = "TRUE" Then
                        txtOrderRef.Enabled = True
                        txtOrderRef.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_OrderRef where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt6.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Order Reference Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_OrderReference where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtOrderRef.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtOrderRef.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtOrderRef.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)

                                End If
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("OrderRef").Value).ToString())) And (UCase(Trim((RS.Fields("OrderRef").Value).ToString()))) <> "TRUE" Then
                        txtOrderRef.Text = (RS.Fields("OrderRef").Value).ToString()
                        txtOrderRef.Enabled = True
                        txtOrderRef.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_OrderRef where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt6.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Order Reference Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_OrderReference where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtOrderRef.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtOrderRef.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtOrderRef.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtOrderRef, RS1.Fields("Remarks").Value)

                                End If
                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("OrderRef").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("OrderRef").Value).ToString())) Or (Trim((RS.Fields("OrderRef").Value).ToString())) Is Nothing Then
                        txtOrderRef.Enabled = False
                        txtOrderRef.Text = Nothing
                        txtOrderRef.BackColor = Color.SkyBlue

                    End If
                    '===End



                    '===Project NO

                    If (UCase(Trim((RS.Fields("ProjectNo").Value).ToString()))) = "TRUE" Then
                        txtProjectNo.Enabled = True
                        txtProjectNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ProjNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt4.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Project Number Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ProjectNumber where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtProjectNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtProjectNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtProjectNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("ProjectNo").Value).ToString())) And (UCase(Trim((RS.Fields("ProjectNo").Value).ToString()))) <> "TRUE" Then

                        txtProjectNo.Text = (RS.Fields("ProjectNo").Value).ToString()
                        txtProjectNo.Enabled = True
                        txtProjectNo.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ProjNo where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt4.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Project Number Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ProjectNumber where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtProjectNo.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtProjectNo.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtProjectNo.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtProjectNo, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("ProjectNo").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ProjectNo").Value).ToString())) Or (Trim((RS.Fields("ProjectNo").Value).ToString())) Is Nothing Then
                        txtProjectNo.Enabled = False
                        txtProjectNo.Text = Nothing
                        txtProjectNo.BackColor = Color.SkyBlue
                    End If
                    '==End


                    ''===Reason of Trip
                    If (UCase(Trim((RS.Fields("ReasonofTrip").Value).ToString()))) = "TRUE" Then

                        txtReasonofTrip.Enabled = True
                        txtReasonofTrip.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonofTrip where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt10.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonOfTrip where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtReasonofTrip.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtReasonofTrip.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtReasonofTrip.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("ReasonofTrip").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonofTrip").Value).ToString()))) <> "TRUE" Then
                        txtReasonofTrip.Text = (RS.Fields("ReasonofTrip").Value).ToString()
                        txtReasonofTrip.Enabled = True
                        txtReasonofTrip.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonofTrip where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt10.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonOfTrip where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtReasonofTrip.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtReasonofTrip.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtReasonofTrip.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtReasonofTrip, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If (UCase(Trim((RS.Fields("ReasonofTrip").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonofTrip").Value).ToString())) Or (Trim((RS.Fields("ReasonofTrip").Value).ToString())) Is Nothing Then
                        txtReasonofTrip.Enabled = False
                        txtReasonofTrip.Text = Nothing
                        txtReasonofTrip.BackColor = Color.SkyBlue
                    End If

                    '====End 


                    '====Stop Over Flag

                    If (UCase(Trim((RS.Fields("StopOvrFlag").Value).ToString()))) = "TRUE" Then
                        txtStopOverTRF.Enabled = True
                        txtStopOverTRF.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_StopOverFlag where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt12.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_StopOverFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtStopOverTRF.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtStopOverTRF.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtStopOverTRF.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("StopOvrFlag").Value).ToString())) And (UCase(Trim((RS.Fields("StopOvrFlag").Value).ToString()))) <> "TRUE" Then
                        txtStopOverTRF.Text = (RS.Fields("StopOvrFlag").Value).ToString()
                        txtStopOverTRF.Enabled = True
                        txtStopOverTRF.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_StopOverFlag where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt12.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_StopOverFlag where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtStopOverTRF.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtStopOverTRF.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtStopOverTRF.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtStopOverTRF, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("StopOvrFlag").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("StopOvrFlag").Value).ToString())) Or (Trim((RS.Fields("StopOvrFlag").Value).ToString())) Is Nothing Then
                        txtStopOverTRF.Enabled = False
                        txtStopOverTRF.Text = Nothing
                        txtStopOverTRF.BackColor = Color.SkyBlue
                    End If

                    '==End


                    '==Tour Code
                    If (UCase(Trim((RS.Fields("TourCode").Value).ToString()))) = "TRUE" Then
                        txtTourCode.Enabled = True
                        txtTourCode.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TourCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt13.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_TourCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtTourCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtTourCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtTourCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()



                    End If

                    If Not IsDBNull(Trim((RS.Fields("TourCode").Value).ToString())) And (UCase(Trim((RS.Fields("TourCode").Value).ToString()))) <> "TRUE" Then
                        txtTourCode.Text = (RS.Fields("TourCode").Value).ToString()
                        txtTourCode.Enabled = True
                        txtTourCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TourCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt13.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_TourCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtTourCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtTourCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtTourCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtTourCode, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("TourCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("TourCode").Value).ToString())) Or (Trim((RS.Fields("TourCode").Value).ToString())) Is Nothing Then
                        txtTourCode.Enabled = False
                        txtTourCode.Text = Nothing
                        txtTourCode.BackColor = Color.SkyBlue
                    End If
                    '==End



                    '==Record Type

                    If (UCase(Trim((RS.Fields("RecordType").Value).ToString()))) = "TRUE" Then
                        txtRecordType.Enabled = True
                        txtRecordType.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_RecordType where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRecordType.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRecordType.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtRecordType.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If Not IsDBNull(Trim((RS.Fields("RecordType").Value).ToString())) And (UCase(Trim((RS.Fields("RecordType").Value).ToString()))) <> "TRUE" Then
                        txtRecordType.Text = (RS.Fields("RecordType").Value).ToString()
                        txtRecordType.Enabled = True
                        txtRecordType.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_RecordType where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1

                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRecordType.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRecordType.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtRecordType.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRecordType, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()
                    End If

                    If (UCase(Trim((RS.Fields("RecordType").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("RecordType").Value).ToString())) Or (Trim((RS.Fields("RecordType").Value).ToString())) Is Nothing Then
                        txtRecordType.Enabled = False
                        txtRecordType.Text = Nothing
                        txtRecordType.BackColor = Color.SkyBlue
                    End If
                    'End
                    '===Sales Channel

                    If (UCase(Trim((RS.Fields("SalesChannel").Value).ToString()))) = "TRUE" Then

                        txtSalesChannel.Enabled = True
                        txtSalesChannel.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_SalesChannel where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt21.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_SalesChannel where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtSalesChannel.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtSalesChannel.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtSalesChannel.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If Not IsDBNull(Trim((RS.Fields("SalesChannel").Value).ToString())) And (UCase(Trim((RS.Fields("SalesChannel").Value).ToString()))) <> "TRUE" Then
                        txtSalesChannel.Text = (RS.Fields("SalesChannel").Value).ToString()
                        txtSalesChannel.Enabled = True
                        txtSalesChannel.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_SalesChannel where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt21.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_SalesChannel where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then

                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtSalesChannel.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtSalesChannel.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtSalesChannel.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtSalesChannel, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If

                    If (UCase(Trim((RS.Fields("SalesChannel").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("SalesChannel").Value).ToString())) Or (Trim((RS.Fields("SalesChannel").Value).ToString())) Is Nothing Then
                        txtSalesChannel.Enabled = False
                        txtSalesChannel.Text = Nothing
                        txtSalesChannel.BackColor = Color.SkyBlue
                    End If
                    '==End



                    '=====Traveller Name

                    If (UCase(Trim((RS.Fields("TravellerName").Value).ToString()))) = "TRUE" Then
                        txtTravellerName.Enabled = True
                        txtTravellerName.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TravaName where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt1.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If




                    If Not IsDBNull(Trim((RS.Fields("TravellerName").Value).ToString())) And (UCase(Trim((RS.Fields("TravellerName").Value).ToString()))) <> "TRUE" Then

                        txtTravellerName.Text = (RS.Fields("TravellerName").Value).ToString()
                        txtTravellerName.Enabled = True
                        txtTravellerName.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TravaName where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt1.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("TravellerName").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("TravellerName").Value).ToString())) Or (Trim((RS.Fields("TravellerName").Value).ToString())) Is Nothing Then
                        txtTravellerName.Enabled = False
                        txtTravellerName.Text = Nothing
                        txtTravellerName.BackColor = Color.SkyBlue
                    End If
                    '===End



                    '===Traveller Status

                    If (UCase(Trim((RS.Fields("TravellerStatus").Value).ToString()))) = "TRUE" Then

                        txtTravellerStat.Enabled = True
                        txtTravellerStat.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TravStatus where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt2.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Traveller Status Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_TravellerStatus where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtTravellerStat.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtTravellerStat.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtTravellerStat.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If Not IsDBNull(Trim((RS.Fields("TravellerStatus").Value).ToString())) And (UCase(Trim((RS.Fields("TravellerStatus").Value).ToString()))) <> "TRUE" Then

                        txtTravellerStat.Text = (RS.Fields("TravellerStatus").Value).ToString()
                        txtTravellerStat.Enabled = True
                        txtTravellerStat.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_TravStatus where clientID  = '" & (RS.Fields("ClientId").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt2.Text = (RS1.Fields("FieldName").Value).ToString()  'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        '====Traveller Status Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_TravellerStatus where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtTravellerStat.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtTravellerStat.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtTravellerStat.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtTravellerStat, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("TravellerStatus").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("TravellerStatus").Value).ToString())) Or (Trim((RS.Fields("TravellerStatus").Value).ToString())) Is Nothing Then
                        txtTravellerStat.Enabled = False
                        txtTravellerStat.Text = Nothing
                        txtTravellerStat.BackColor = Color.SkyBlue
                    End If

                    '===End



                    ''    '===Customer Spec Field

                    ''    If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "TRUE" Then

                    ''        txtCustSpecLowFare.Enabled = True
                    ''        txtCustSpecLowFare.BackColor = Color.White


                    ''        CHECK_RS1()
                    ''        SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''        With RS1
                    ''            If Not RS1.EOF Then
                    ''                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                    txtCustSpecLowFare.BackColor = Color.Yellow
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtCustSpecLowFare.BackColor = Color.AntiqueWhite
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtCustSpecLowFare.BackColor = Color.Orange
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)

                    ''                End If

                    ''                RS1.MoveNext()

                    ''            End If
                    ''        End With

                    ''        RS1.Close()


                    ''    End If


                    ''    If Not IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) <> "TRUE" Then

                    ''        txtCustSpecLowFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
                    ''        txtCustSpecLowFare.Enabled = True
                    ''        txtCustSpecLowFare.BackColor = Color.White


                    ''        CHECK_RS1()
                    ''        SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''        With RS1
                    ''            If Not RS1.EOF Then
                    ''                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                    txtCustSpecLowFare.BackColor = Color.Yellow
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtCustSpecLowFare.BackColor = Color.AntiqueWhite
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                    ''                    txtCustSpecLowFare.BackColor = Color.Orange
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                    ''                End If

                    ''                RS1.MoveNext()

                    ''            End If
                    ''        End With

                    ''        RS1.Close()


                    ''    End If

                    ''    If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) Or (Trim((RS.Fields("CustoSpecLF").Value).ToString())) Is Nothing Then
                    ''        txtCustSpecLowFare.Enabled = False
                    ''        txtCustSpecLowFare.Text = Nothing
                    ''        txtCustSpecLowFare.BackColor = Color.SkyBlue
                    ''    End If





                    ' ''===Customer Spec Field Reference Fare Amount

                    ''If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "TRUE" Then

                    ''    txtCustSpecHighFare.Enabled = True
                    ''    txtCustSpecHighFare.BackColor = Color.White

                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtCustSpecHighFare.BackColor = Color.Yellow
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecHighFare.BackColor = Color.AntiqueWhite
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecHighFare.BackColor = Color.Orange
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            End If
                    ''            RS1.MoveNext()
                    ''        End If
                    ''    End With

                    ''    RS1.Close()


                    ''End If



                    ''If Not IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) <> "TRUE" Then

                    ''    txtCustSpecHighFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
                    ''    txtCustSpecHighFare.Enabled = True
                    ''    txtCustSpecHighFare.BackColor = Color.White


                    ''    CHECK_RS1()
                    ''    SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''    With RS1
                    ''        If Not RS1.EOF Then
                    ''            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                txtCustSpecHighFare.BackColor = Color.Yellow
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                txtCustSpecHighFare.BackColor = Color.AntiqueWhite
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                    ''                txtCustSpecHighFare.BackColor = Color.Orange
                    ''                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                    ''            End If

                    ''            RS1.MoveNext()

                    ''        End If
                    ''    End With

                    ''    RS1.Close()


                    ''End If

                    ''    If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Or (Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Is Nothing Then
                    ''        txtCustSpecHighFare.Enabled = False
                    ''        txtCustSpecHighFare.Text = Nothing
                    ''        txtCustSpecHighFare.BackColor = Color.SkyBlue
                    ''    End If




                    ''    '===Low Fare

                    ''    If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "TRUE" Then

                    ''        txtLowFare.Enabled = True
                    ''        txtLowFare.BackColor = Color.White


                    ''        CHECK_RS1()
                    ''        SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''        With RS1
                    ''            If Not RS1.EOF Then
                    ''                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                    txtLowFare.BackColor = Color.Yellow
                    ''                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtLowFare.BackColor = Color.AntiqueWhite
                    ''                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtLowFare.BackColor = Color.Orange
                    ''                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)

                    ''                End If

                    ''                RS1.MoveNext()

                    ''            End If
                    ''        End With

                    ''        RS1.Close()


                    ''    End If


                    ''    If Not IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) And (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) <> "TRUE" Then

                    ''        txtLowFare.Text = (RS.Fields("LowFare").Value).ToString()
                    ''        txtLowFare.Enabled = True
                    ''        txtLowFare.BackColor = Color.White


                    ''        CHECK_RS1()
                    ''        SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''        With RS1
                    ''            If Not RS1.EOF Then
                    ''                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                    txtLowFare.BackColor = Color.Yellow
                    ''                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtLowFare.BackColor = Color.AntiqueWhite
                    ''                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                    ''                    txtLowFare.BackColor = Color.Orange
                    ''                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                    ''                End If

                    ''                RS1.MoveNext()

                    ''            End If
                    ''        End With

                    ''        RS1.Close()


                    ''    End If

                    ''    If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) Or (Trim((RS.Fields("LowFare").Value).ToString())) Is Nothing Then
                    ''        txtLowFare.Enabled = False
                    ''        txtLowFare.Text = Nothing
                    ''        txtLowFare.BackColor = Color.SkyBlue
                    ''    End If


                    ''    '====Full Fare

                    ''    If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "TRUE" Then

                    ''        txtRefFare.Enabled = True
                    ''        txtRefFare.BackColor = Color.White


                    ''        CHECK_RS1()
                    ''        SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''        With RS1
                    ''            If Not RS1.EOF Then
                    ''                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                    txtRefFare.BackColor = Color.Yellow
                    ''                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtRefFare.BackColor = Color.AntiqueWhite
                    ''                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtRefFare.BackColor = Color.Orange
                    ''                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)

                    ''                End If

                    ''                RS1.MoveNext()

                    ''            End If
                    ''        End With

                    ''        RS1.Close()


                    ''    End If


                    ''    If Not IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) And (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) <> "TRUE" Then

                    ''        txtRefFare.Text = (RS.Fields("FullFare").Value).ToString()
                    ''        txtRefFare.Enabled = True
                    ''        txtRefFare.BackColor = Color.White


                    ''        CHECK_RS1()
                    ''        SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    ''        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    ''        With RS1
                    ''            If Not RS1.EOF Then
                    ''                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                    ''                    txtRefFare.BackColor = Color.Yellow
                    ''                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                    ''                    txtRefFare.BackColor = Color.AntiqueWhite
                    ''                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                    ''                    txtRefFare.BackColor = Color.Orange
                    ''                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                    ''                End If

                    ''                RS1.MoveNext()

                    ''            End If
                    ''        End With

                    ''        RS1.Close()


                    ''    End If

                    ''    If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) Or (Trim((RS.Fields("FullFare").Value).ToString())) Is Nothing Then
                    ''        txtRefFare.Enabled = False
                    ''        txtRefFare.Text = Nothing
                    ''        txtRefFare.BackColor = Color.SkyBlue
                    ''    End If



                    RS.MoveNext()

                End If


            End With

            RS.Close()


        End If



    End Sub


    '=======================================
    '           BCD MIS ENTRIES
    '=======================================

    Private Sub BCDMIS_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

        Dim SendMsgMIS As Integer


        M_GC = Trim(txtGlobalCustNo.Text)
        M_LCNo = Trim(txtLocalCustNo.Text)
        M_EmpNo = Trim(txtEmployeeNo.Text)
        M_TravName = Trim(txtTravellerName.Text)
        M_TravStat = Trim(txtTravellerStat.Text)
        M_CCC = Trim(txtCostCenterCode.Text)
        M_ProjNo = Trim(txtProjectNo.Text)
        M_DeptNo = Trim(txtDeptNo.Text)
        M_OrderRed = Trim(txtOrderRef.Text)
        M_Approver = Trim(txtApprover.Text)
        M_ApproverCode = Trim(txtApproverCode.Text)
        M_MgrSup = Trim(txtMgrSuperior.Text)
        M_RTrip = Trim(txtReasonofTrip.Text)
        M_MClass = Trim(txtMajorClass.Text)
        M_SOT = Trim(txtStopOverTRF.Text)
        M_TourCode = Trim(txtTourCode.Text)
        M_RCode = Trim(txtReasonCode.Text)
        M_RCodeDenied = Trim(txtRCodeDenied.Text)
        M_FFlyr = Trim(txtFFLYR.Text)
        M_HotelReasonCode = Trim(txtHotelReasonCD.Text)
        M_HotelBookedF = Trim(txtHotelBookedF_N.Text)
        M_AirNoReasonCode = Trim(txtAirNoReasonCD.Text)
        M_CarBookedFlag = Trim(txtCarBookedFlag.Text)
        M_SalesChannel = Trim(txtSalesChannel.Text)
        M_RecordType = Trim(txtRecordType.Text)
        M_CSData1 = Trim(txtCSData1.Text)
        M_CSData2 = Trim(txtCSData2.Text)
        M_CSData3 = Trim(txtCSData3.Text)
        M_CSData4 = Trim(txtCSData4.Text)
        M_CSData5 = Trim(txtCSData5.Text)
        M_CSData6 = Trim(txtCSData6.Text)
        M_CSData7 = Trim(txtCSData7.Text)
        M_CSData8 = Trim(txtCSData8.Text)
        M_CSData12 = Trim(txtCSData12.Text)

        '===================================================
        '===================FOR BCD ========================
        '===================================================



        'If Trim(M_DeptNo) <> "" Or Trim(M_DeptNo) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_DeptNo where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_DeptNo = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_DeptNo))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCDDeptNo_Res As ClassPNR
        '    BCDDeptNo_Res = New ClassPNR
        '    BCDDeptNo_Res.SendPNR_BCDDeptNo = B_DeptNo
        '    SendMsgMIS = 1

        'End If




        'If Trim(M_CCC) <> "" Or Trim(M_CCC) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_CostCenter where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_CostCenter = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_CCC))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_CCGL_Res As ClassPNR
        '    BCD_CCGL_Res = New ClassPNR
        '    BCD_CCGL_Res.SendPNR_BCDCostCenter = B_CostCenter
        '    SendMsgMIS = 1

        'End If




        'If Trim(M_EmpNo) <> "" Or Trim(M_EmpNo) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_EmpNo where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_EmpNo = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_EmpNo))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_DeptNo_Res As ClassPNR
        '    BCD_DeptNo_Res = New ClassPNR
        '    BCD_DeptNo_Res.SendPNR_BCDEmpNo = B_EmpNo
        '    SendMsgMIS = 1

        'End If




        'If Trim(M_ProjNo) <> "" Or Trim(M_ProjNo) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_ProjNo where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_ProjNo = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_ProjNo))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_ProjNo_Res As ClassPNR
        '    BCD_ProjNo_Res = New ClassPNR
        '    BCD_ProjNo_Res.SendPNR_BCDProjNo = B_ProjNo
        '    SendMsgMIS = 1
        'End If


        ' ''Order Reference
        'If Trim(M_OrderRed) <> "" Or Trim(M_OrderRed) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_OrderRef where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_OrderRef = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_OrderRed))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_Order_Res As ClassPNR
        '    BCD_Order_Res = New ClassPNR
        '    BCD_Order_Res.SendPNR_BCDOrderRef = B_OrderRef
        '    SendMsgMIS = 1
        'End If



        ''Reason Of Trip
        'If Trim(M_RTrip) <> "" Or Trim(M_RTrip) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_ReasonOfTrip where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_ReasonOfTrip = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_RTrip))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_ReasonTrip As ClassPNR
        '    BCD_ReasonTrip = New ClassPNR
        '    BCD_ReasonTrip.SendPNR_BCDReason_Trip = B_ReasonOfTrip
        '    SendMsgMIS = 1

        'End If



        ''Air Accomodation Reason Code

        'If Trim(M_AirNoReasonCode) <> "" Or Trim(M_AirNoReasonCode) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_AirNoAccomReasonCD where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_AirNoReasonCode = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_AirNoReasonCode))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_AirNoAccomReasonCD As ClassPNR
        '    BCD_AirNoAccomReasonCD = New ClassPNR
        '    BCD_AirNoAccomReasonCD.SendPNR_BCD_AirNoReasonCode = B_AirNoReasonCode
        '    SendMsgMIS = 1

        'End If



        ''Approver

        'If Trim(M_Approver) <> "" Or Trim(M_Approver) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_Approver where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_Approver = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_Approver))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_Approver As ClassPNR
        '    BCD_Approver = New ClassPNR
        '    BCD_Approver.SendPNR_BCD_Approver = B_Approver
        '    SendMsgMIS = 1

        'End If


        ''Approvel Code

        'If Trim(M_ApproverCode) <> "" Or Trim(M_ApproverCode) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_Approver where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_ApprovalCode = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_ApproverCode))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_ApprovalCode As ClassPNR
        '    BCD_ApprovalCode = New ClassPNR
        '    BCD_ApprovalCode.SendPNR_BCD_ApprovalCode = B_ApprovalCode
        '    SendMsgMIS = 1

        'End If



        ''Trav Status

        'If Trim(M_TravStat) <> "" Or Trim(M_TravStat) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_TravStatus where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_TravStatus = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_TravStat))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_TravStatus As ClassPNR
        '    BCD_TravStatus = New ClassPNR
        '    BCD_TravStatus.SendPNR_BCD_TravStatus = B_TravStatus
        '    SendMsgMIS = 1

        'End If



        ''Manager Superior

        'If Trim(M_MgrSup) <> "" Or Trim(M_MgrSup) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_MgrSup where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_MgrSup = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_MgrSup))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_MgrSup As ClassPNR
        '    BCD_MgrSup = New ClassPNR
        '    BCD_MgrSup.SendPNR_BCD_MgrSup = B_MgrSup
        '    SendMsgMIS = 1

        'End If


        '' Client Data1

        'If Trim(M_CSData1) <> "" Or Trim(M_CSData1) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_ClientData1 where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_C_Data1 = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_CSData1))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_T_ClientData1 As ClassPNR
        '    BCD_T_ClientData1 = New ClassPNR
        '    BCD_T_ClientData1.SendPNR_BCD_ClientData1 = B_C_Data1
        '    SendMsgMIS = 1

        'End If



        '' Client Data2

        'If Trim(M_CSData2) <> "" Or Trim(M_CSData2) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_ClientData2 where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_C_Data2 = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_CSData2))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_T_ClientData2 As ClassPNR
        '    BCD_T_ClientData2 = New ClassPNR
        '    BCD_T_ClientData2.SendPNR_BCD_ClientData2 = B_C_Data2
        '    SendMsgMIS = 1

        'End If


        '' Client Data3

        'If Trim(M_CSData3) <> "" Or Trim(M_CSData3) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_ClientData3 where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_C_Data3 = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_CSData3))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_T_ClientData3 As ClassPNR
        '    BCD_T_ClientData3 = New ClassPNR
        '    BCD_T_ClientData3.SendPNR_BCD_ClientData3 = B_C_Data3
        '    SendMsgMIS = 1

        'End If


        '' Client Data4

        'If Trim(M_CSData4) <> "" Or Trim(M_CSData4) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_ClientData4 where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_C_Data4 = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_CSData4))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_T_ClientData4 As ClassPNR
        '    BCD_T_ClientData4 = New ClassPNR
        '    BCD_T_ClientData4.SendPNR_BCD_ClientData4 = B_C_Data4
        '    SendMsgMIS = 1

        'End If


        '' Client Data12

        'If Trim(M_CSData12) <> "" Or Trim(M_CSData12) <> Nothing Then

        '    CHECK_RS1()
        '    SQL_QUERY = "Select * from BCDMIS..T_ClientData12 where clientID  = '" & Trim(GlobalClientNo) & "'"
        '    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        '    With RS1

        '        If Not RS1.EOF Then
        '            B_C_Data12 = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", "") & Trim(M_CSData12))
        '            RS1.MoveNext()
        '        End If
        '    End With

        '    RS1.Close()

        '    Dim BCD_T_ClientData12 As ClassPNR
        '    BCD_T_ClientData12 = New ClassPNR
        '    BCD_T_ClientData12.SendPNR_BCD_ClientData12 = B_C_Data12
        '    SendMsgMIS = 1

        'End If



        '===================================================
        '===================FOR TRAVCOM ====================
        '===================================================


        If Trim(M_GC) <> "" Or Trim(M_GC) <> Nothing Then
            Dim GCResult As ClassPNR
            GCResult = New ClassPNR
            GCResult.SendPNR_MIS_GC = M_GC
            SendMsgMIS = 1
        End If


        If Trim(M_LCNo) <> "" Or Trim(M_LCNo) <> Nothing Then
            Dim LCResult As ClassPNR
            LCResult = New ClassPNR
            LCResult.SendPNR_MIS_LC = M_LCNo
            SendMsgMIS = 1
        End If


        If Trim(M_EmpNo) <> "" Or Trim(M_EmpNo) <> Nothing Then
            Dim ENResult As ClassPNR
            ENResult = New ClassPNR
            ENResult.SendPNR_MIS_EN = M_EmpNo
            SendMsgMIS = 1
        End If

        If Trim(M_TravStat) <> "" Or Trim(M_TravStat) <> Nothing Then
            Dim TSResult As ClassPNR
            TSResult = New ClassPNR
            TSResult.SendPNR_MIS_TVS = M_TravStat
            SendMsgMIS = 1
        End If


        If Trim(M_CCC) <> "" Or Trim(M_CCC) <> Nothing Then
            Dim CCResult As ClassPNR
            CCResult = New ClassPNR
            CCResult.SendPNR_MIS_CCC = M_CCC
            SendMsgMIS = 1
        End If


        If Trim(M_ProjNo) <> "" Or Trim(M_ProjNo) <> Nothing Then
            Dim PNResult As ClassPNR
            PNResult = New ClassPNR
            PNResult.SendPNR_MIS_ProjNo = M_ProjNo
            SendMsgMIS = 1
        End If

        If Trim(M_DeptNo) <> "" Or Trim(M_DeptNo) <> Nothing Then
            Dim DNResult As ClassPNR
            DNResult = New ClassPNR
            DNResult.SendPNR_MIS_DeptNo = M_DeptNo
            SendMsgMIS = 1
        End If


        If Trim(M_OrderRed) <> "" Or Trim(M_OrderRed) <> Nothing Then
            Dim ORResult As ClassPNR
            ORResult = New ClassPNR
            ORResult.SendPNR_MIS_OrderRef = M_OrderRed
            SendMsgMIS = 1
        End If


        If Trim(M_Approver) <> "" Or Trim(M_Approver) <> Nothing Then
            Dim AppResult As ClassPNR
            AppResult = New ClassPNR
            AppResult.SendPNR_MIS_Approver = M_Approver
            SendMsgMIS = 1
        End If


        If Trim(M_ApproverCode) <> "" Or Trim(M_ApproverCode) <> Nothing Then
            Dim ACodeResult As ClassPNR
            ACodeResult = New ClassPNR
            ACodeResult.SendPNR_MIS_ApproverCode = M_ApproverCode
            SendMsgMIS = 1
        End If

        If Trim(M_MgrSup) <> "" Or Trim(M_MgrSup) <> Nothing Then
            Dim MgrResult As ClassPNR
            MgrResult = New ClassPNR
            MgrResult.SendPNR_MIS_MgrSup = M_MgrSup
            SendMsgMIS = 1
        End If

        If Trim(M_RTrip) <> "" Or Trim(M_RTrip) <> Nothing Then
            Dim RtResult As ClassPNR
            RtResult = New ClassPNR
            RtResult.SendPNR_MIS_RTrip = M_RTrip
            SendMsgMIS = 1
        End If

        If Trim(M_MClass) <> "" Or Trim(M_MClass) <> Nothing Then
            Dim MCResult As ClassPNR
            MCResult = New ClassPNR
            MCResult.SendPNR_MIS_MClass = M_MClass
            SendMsgMIS = 1
        End If

        If Trim(M_SOT) <> "" Or Trim(M_SOT) <> Nothing Then
            Dim SotResult As ClassPNR
            SotResult = New ClassPNR
            SotResult.SendPNR_MIS_SOT = M_SOT
            SendMsgMIS = 1
        End If

        If Trim(M_TourCode) <> "" Or Trim(M_TourCode) <> Nothing Then
            Dim TCResult As ClassPNR
            TCResult = New ClassPNR
            TCResult.SendPNR_MIS_TCode = M_TourCode
            SendMsgMIS = 1
        End If


        If Trim(M_RCode) <> "" Or Trim(M_RCode) <> Nothing Then
            Dim RCResult As ClassPNR
            RCResult = New ClassPNR
            RCResult.SendPNR_MIS_RCode = M_RCode
            SendMsgMIS = 1
        End If


        If Trim(M_RCodeDenied) <> "" Or Trim(M_RCodeDenied) <> Nothing Then
            Dim RCodeDenResult As ClassPNR
            RCodeDenResult = New ClassPNR
            RCodeDenResult.SendPNR_MIS_RCodeDen = M_RCodeDenied
            SendMsgMIS = 1
        End If


        If Trim(M_FFlyr) <> "" Or Trim(M_FFlyr) <> Nothing Then
            Dim FFlyrResult As ClassPNR
            FFlyrResult = New ClassPNR
            FFlyrResult.SendPNR_MIS_FFLyr = M_FFlyr
            SendMsgMIS = 1
        End If


        If Trim(M_HotelReasonCode) <> "" Or Trim(M_HotelReasonCode) <> Nothing Then
            Dim HotelResult As ClassPNR
            HotelResult = New ClassPNR
            HotelResult.SendPNR_MIS_HotelRC = M_HotelReasonCode
            SendMsgMIS = 1
        End If


        If Trim(M_HotelBookedF) <> "" Or Trim(M_HotelBookedF) <> Nothing Then
            Dim HBResult As ClassPNR
            HBResult = New ClassPNR
            HBResult.SendPNR_MIS_HB = M_HotelBookedF
            SendMsgMIS = 1
        End If


        If Trim(M_AirNoReasonCode) <> "" Or Trim(M_AirNoReasonCode) <> Nothing Then
            Dim ANRResult As ClassPNR
            ANRResult = New ClassPNR
            ANRResult.SendPNR_MIS_ANRC = M_AirNoReasonCode
            SendMsgMIS = 1
        End If


        If Trim(M_CarBookedFlag) <> "" Or Trim(M_CarBookedFlag) <> Nothing Then
            Dim CBFResult As ClassPNR
            CBFResult = New ClassPNR
            CBFResult.SendPNR_MIS_CBF = M_CarBookedFlag
            SendMsgMIS = 1
        End If

        If Trim(M_SalesChannel) <> "" Or Trim(M_SalesChannel) <> Nothing Then
            Dim SCResult As ClassPNR
            SCResult = New ClassPNR
            SCResult.SendPNR_MIS_SC = M_SalesChannel
            SendMsgMIS = 1
        End If

        If Trim(M_RecordType) <> "" Or Trim(M_RecordType) <> Nothing Then
            Dim RTypeResult As ClassPNR
            RTypeResult = New ClassPNR
            RTypeResult.SendPNR_MIS_RT = M_RecordType
            SendMsgMIS = 1
        End If


        If Trim(M_CSData1) <> "" Or Trim(M_CSData1) <> Nothing Then
            Dim CSD1Result As ClassPNR
            CSD1Result = New ClassPNR
            CSD1Result.SendPNR_MIS_CS1 = M_CSData1
            SendMsgMIS = 1
        End If


        If Trim(M_CSData2) <> "" Or Trim(M_CSData2) <> Nothing Then
            Dim CSD2Result As ClassPNR
            CSD2Result = New ClassPNR
            CSD2Result.SendPNR_MIS_CS2 = M_CSData2
            SendMsgMIS = 1
        End If

        If Trim(M_CSData3) <> "" Or Trim(M_CSData3) <> Nothing Then
            Dim CSD3Result As ClassPNR
            CSD3Result = New ClassPNR
            CSD3Result.SendPNR_MIS_CS3 = M_CSData3
            SendMsgMIS = 1
        End If

        If Trim(M_CSData4) <> "" Or Trim(M_CSData4) <> Nothing Then
            Dim CSD4Result As ClassPNR
            CSD4Result = New ClassPNR
            CSD4Result.SendPNR_MIS_CS4 = M_CSData4
            SendMsgMIS = 1
        End If


        If Trim(M_CSData5) <> "" Or Trim(M_CSData5) <> Nothing Then
            Dim CSD5Result As ClassPNR
            CSD5Result = New ClassPNR
            CSD5Result.SendPNR_MIS_CS5 = M_CSData5
            SendMsgMIS = 1
        End If


        If Trim(M_CSData6) <> "" Or Trim(M_CSData6) <> Nothing Then
            Dim CSD6Result As ClassPNR
            CSD6Result = New ClassPNR
            CSD6Result.SendPNR_MIS_CS6 = M_CSData6
            SendMsgMIS = 1
        End If

        If Trim(M_CSData7) <> "" Or Trim(M_CSData7) <> Nothing Then
            Dim CSD7Result As ClassPNR
            CSD7Result = New ClassPNR
            CSD7Result.SendPNR_MIS_CS7 = M_CSData7
            SendMsgMIS = 1
        End If

        If Trim(M_CSData8) <> "" Or Trim(M_CSData8) <> Nothing Then
            Dim CSD8Result As ClassPNR
            CSD8Result = New ClassPNR
            CSD8Result.SendPNR_MIS_CS8 = M_CSData8
            SendMsgMIS = 1
        End If



        If Trim(M_CSData12) <> "" Or Trim(M_CSData12) <> Nothing Then
            Dim CSD12Result As ClassPNR
            CSD12Result = New ClassPNR
            CSD12Result.SendPNR_MIS_CS12 = M_CSData12
            SendMsgMIS = 1
        End If

        If SendMsgMIS = 1 Then
            MsgBox(" BCD MIS Entries has been successfully sent..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":::BCD MIS:::")
        End If

    End Sub


    Private Sub CopyToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CopyToolStripMenuItem.Click

        If AbacusSmartKeys.SelectedText <> "" Then
            AbacusSmartKeys.Copy()
        ElseIf rtxtAbacus.SelectedText <> "" Then
            rtxtAbacus.Copy()

            'ElseIf rtxtResult.SelectedText <> "" Then
            '    rtxtResult.Copy()
        Else
            MsgBox("No data has been selected..", vbCritical + vbOKOnly, "Copy Error!")
        End If

    End Sub


    Private Sub btnNonAir_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNonAir.Click

        Dim ans As MsgBoxResult

        ans = MsgBox("Delete all records for Non-Air Transactions ? ", MsgBoxStyle.Question + MsgBoxStyle.YesNo, " Delete Record ? ")

        If ans = MsgBoxResult.Yes Then

            If ((DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 0) And (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 13)) Then
                MsgBox("No Data to Delete..", MsgBoxStyle.OkOnly)
            Else

                cboProductCode.Text = Nothing
                cboVendorCode.Text = Nothing
                cboProdTYpe.Items.Clear()
                cboProdTYpe.Text = Nothing
                txtComP.Text = Nothing
                cboCostCurr.Text = Nothing
                txtCostAmt.Text = Nothing
                txtSFAmt.Text = Nothing
                txtNoPax.Text = Nothing

                '==Clear all the products found in the list
                DGW1.Rows.Clear()
                DGW1.Columns.Clear()
                DGW1.ColumnHeadersVisible = False
                DGW1.RowHeadersVisible = False


                txtRMRefFare.Text = Nothing
                txtRMLF.Text = Nothing
                txtRMExpCode.Text = Nothing

                txtDatein.Text = Nothing
                txtDateOut.Text = Nothing

                MRdom.Checked = False                          ' For Non BSP Only
                MRIntl.Checked = False
                MRReg.Checked = False
                MRdom.Enabled = False
                MRIntl.Enabled = False
                MRReg.Enabled = False

            End If

        Else

            Exit Sub
        End If

    End Sub

    Private Sub btnRemarks_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRemarks.Click


        Dim ansRemarks As MsgBoxResult

        ansRemarks = MsgBox("Delete all records for Remarks ? ", MsgBoxStyle.Question + MsgBoxStyle.YesNo, " Delete Record ? ")

        If ansRemarks = MsgBoxResult.Yes Then


            If (Trim(cboConventionName.Text)) = Nothing And (Trim(txtConventionPlace.Text)) = Nothing And
               (Trim(txtDateofConvention.Text)) = Nothing And (Trim(cboBookerName.Text)) = Nothing And
               (Trim(txtHotelName.Text)) = Nothing And (Trim(txtAuthorizedNo.Text)) = Nothing And
               (Trim(txtTBSNo.Text)) = Nothing And (Trim(txtEmployee.Text)) = Nothing And
               (Trim(txtCCGL.Text)) = Nothing And (Trim(txtLnNo.Text)) = Nothing And (Trim(txtccDetails.Text)) = Nothing Then

                MsgBox("No Data to Delete..", MsgBoxStyle.OkOnly)

            Else

                cboConventionName.Text = Nothing
                txtConventionPlace.Text = Nothing

                txtDateofConvention.ReadOnly = True
                txtDateofConvention.Text = Nothing
                txtDateofConvention.BackColor = Color.White
                DateConvention.Enabled = True

                cboBookerName.Text = Nothing
                txtHotelName.Text = Nothing
                txtAuthorizedNo.Text = Nothing
                txtTBSNo.Text = Nothing
                txtEmployee.Text = Nothing
                txtCCGL.Text = Nothing
                txtLnNo.Text = Nothing
                txtccDetails.Text = Nothing
                TxtTravEmail.Text = Nothing


            End If

        End If

    End Sub


    Private Sub btnNext_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNext.Click

        If Not TabCAPI.SelectedIndex = 8 Then
            TabCAPI.SelectedIndex += 1
        End If

    End Sub


    Private Sub btnBack_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnBack.Click
        If Not TabCAPI.SelectedIndex = 0 Then
            TabCAPI.SelectedIndex -= 1
        End If
    End Sub



    Private Sub btnAddTicket_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddTicket.Click

        TicketSegment.Add(cboAlineCode.Text & "-" & txtTicketNumber.Text)
        If Trim(cboAlineCode.Text) = Nothing Then

            MsgBox("Airline code must not be empty..", MsgBoxStyle.OkOnly)
            TabCAPI.SelectedIndex = 1
            cboAlineCode.Focus()

        ElseIf Trim(txtTicketNumber.Text) = Nothing Then

            MsgBox("Ticket Number must not be empty..", MsgBoxStyle.OkOnly)
            TabCAPI.SelectedIndex = 1
            txtTicketNumber.Focus()

        ElseIf (Len(Trim(cboAlineCode.Text)) < 3) Then

            MsgBox("Invalid 3 Digits Airline Code..Please check your entry", MsgBoxStyle.OkOnly)
            TabCAPI.SelectedIndex = 1
            cboAlineCode.Focus()

        ElseIf (Len(Trim(txtTicketNumber.Text)) < 10) Then

            MsgBox("Please check your entry for Ticket Number..", MsgBoxStyle.OkOnly)
            TabCAPI.SelectedIndex = 1
            txtTicketNumber.Focus()
        ElseIf (Len(Trim(cboAlineCode.Text)) >= 3) And (Len(Trim(txtTicketNumber.Text)) >= 10) And (Trim(cboAlineCode.Text) <> Nothing And Trim(txtTicketNumber.Text) <> Nothing) Then

            TicketField.Text = TicketField.Text + Trim(cboAlineCode.Text & "-" & txtTicketNumber.Text) + vbCrLf
            txtTicketNumber.Text = Nothing

        End If


    End Sub



    Private Sub btnClearTicket_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClearTicket.Click

        For i = 0 To TicketSegment.Count - 1
            TicketSegment(i) = Nothing
        Next

        cboAlineCode.Text = Nothing
        txtTicketNumber.Text = Nothing
        TicketField.Text = Nothing

    End Sub


    '========BCD MIS Button



    Private Sub btnLFare_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnLFare.Click


        strLowFare = "True"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_LowFare where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing



            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()


    End Sub



    Private Sub btnRCdes_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRCdes.Click


        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "True"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing



            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()


    End Sub



    Private Sub btnCurrCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCurrCode.Click


        strLowFare = "False"
        strCurrCode = "True"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_CurrCode where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing



            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()


    End Sub



    Private Sub btnTravName_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnTravName.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "True"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_TravaName where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 2
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing

            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub



    Private Sub btnTravStatus_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnTravStatus.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        'strtravStatus = "False"
        strtravStatus = "True"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_TravStatus where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 3
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub



    Private Sub btnCostCenter_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCostCenter.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "True"
        'strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_CostCenter where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 4
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing


            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub

    Private Sub btnProjNo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnProjNo.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "True"
        'strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ProjNo where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 5
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing


            End If




        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub


    Private Sub btnDeptNo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDeptNo.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "True"
        'strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_DeptNo where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub


    Private Sub btnOrderRef_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnOrderRef.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        'strOrderRef = "False"
        strOrderRef = "True"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_OrderRef where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                '  CtrlFieldEquivalent = 7
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing


            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub


    Private Sub btnApprover_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnApprover.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "True"
        ' strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_Approver where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 8
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing


            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub


    Private Sub btnApproverCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnApproverCode.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        ' strApproverCode = "False"
        strApproverCode = "True"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()

        SQL_QUERY = "Select * from BCDMIS..T_ApprovalCode where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                'CtrlFieldEquivalent = 9
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub



    Private Sub btnMgrSup_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnMgrSup.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "True"
        ' strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"


        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_MgrSup where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                'CtrlFieldEquivalent = 10
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing


            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub


    Private Sub btnReasonTrip_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnReasonTrip.Click


        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "True"
        ' strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ReasonofTrip where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 11
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing


            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub

    Private Sub btnMajorClass_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "True"
        '  strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 12
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing

            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub



    Private Sub btnStopOverFlag_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStopOverFlag.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "True"
        '  strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_StopOverFlag where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                '  CtrlFieldEquivalent = 13
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
            End If



        End With

        RS1.Close()
        FrmFieldMap.Show()
    End Sub


    Private Sub btnTourCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnTourCode.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "True"
        ' strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_TourCode where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 14
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub


    Private Sub btnReasonCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "True"

        '  strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                '  CtrlFieldEquivalent = 15
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub


    Private Sub btnRCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "True"
        '  strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                ' CtrlFieldEquivalent = 16
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub


    Private Sub btnHotlReasonCd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnHotlReasonCd.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "True"
        ' strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_HotelReasonCode where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                '  CtrlFieldEquivalent = 17
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub

    Private Sub btnEmployeeNo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEmployeeNo.Click

        strEmpNo = "True"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_EmpNo where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing



            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub

    Private Sub btnHotelBookedFlag_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnHotelBookedFlag.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "True"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"


        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_HotelBookedFlag where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub


    Private Sub btnAReasonCD_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAReasonCD.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "True"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_AirNoAccomReasonCD where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub


    Private Sub btnCarBookedFlag_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCarBookedFlag.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "True"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_CarBookedFlag where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub

    Private Sub btnSalesChannel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSalesChannel.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "True"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_SalesChannel where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub


    Private Sub btnRecordType_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRecordType.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "True"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_RecordType where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub


    Private Sub btnCSData1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData1.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "True"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData1 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()

                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub

    Private Sub btnCSData2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData2.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "True"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData2 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else

                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing

            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub

    Private Sub btnCSData3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData3.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "True"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData3 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If

        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub

    Private Sub btnCSData4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData4.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "True"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData4 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub

    Private Sub btnCSData5_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData5.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "True"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData5 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub


    Private Sub btnCSData6_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData6.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "True"
        strCSData7 = "False"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData6 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub



    Private Sub btnCSData7_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData7.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "True"
        strCSData8 = "False"

        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData7 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub

    Private Sub btnCSData8_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData8.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "True"
        strCSData12 = "False"

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData8 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing
            End If



        End With

        RS1.Close()

        FrmFieldMap.Show()
    End Sub



    Private Sub btnCSData12_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData12.Click

        strLowFare = "False"
        strCurrCode = "False"
        strReasonCode = "False"
        strEmpNo = "False"
        strHotelBookedFlag = "False"
        strtravName = "False"
        strtravStatus = "False"
        strCostCenter = "False"
        strProjectNo = "False"
        strDeptNo = "False"
        strOrderRef = "False"
        strApprover = "False"
        strApproverCode = "False"
        strMgrSup = "False"
        strReasonOfTrip = "False"
        strMajorClass = "False"
        strStopOverFlag = "False"
        strTourCode = "False"
        strReasCode = "False"
        strReasCodeDen = "False"
        strHotelReasonCode = "False"
        strHotelBookedFlag = "False"
        strAirNoAccom = "False"
        strCarBookedFlag = "False"
        strSalesChannel = "False"
        strRecordType = "False"
        strCSData1 = "False"
        strCSData2 = "False"
        strCSData3 = "False"
        strCSData4 = "False"
        strCSData5 = "False"
        strCSData6 = "False"
        strCSData7 = "False"
        strCSData8 = "False"
        strCSData12 = "True"


        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..T_ClientData12 where clientID  = '" & Trim(GlobalClientNo) & "'"
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then
                FrmFieldMap.txtBCDEntry.Text = Trim(((RS1.Fields("BCD_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtAbacusEntry.Text = Trim(((RS1.Fields("ABR_Code").Value).ToString()).Replace(" ", ""))
                FrmFieldMap.txtFieldMapping.Text = Trim(RS1.Fields("FieldName").Value).ToString()
                RS1.MoveNext()
            Else
                FrmFieldMap.txtBCDEntry.Text = Nothing
                FrmFieldMap.txtFieldMapping.Text = Nothing
                FrmFieldMap.txtAbacusEntry.Text = Nothing

            End If


        End With

        RS1.Close()

        FrmFieldMap.Show()

    End Sub


    Private Sub btnMISSet_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnMISSet.Click

        FrmPasswordMIS.txtId.Text = Nothing
        FrmPasswordMIS.txtPassword.Text = Nothing
        FrmPasswordMIS.txtId.Focus()
        FrmPasswordMIS.Show()

    End Sub


    Private Sub btnAirAccomRCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAirAccomRCode.Click


        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_AccommodationReasonCode where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListType()
                FrmListType.Show()
                CtrlListType = 2
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Accomodation Reason Code ::")
            End If
            RS.Close()
        End With


    End Sub

    Private Sub btnApprovalCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAprovalCode.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ApprovalCode where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then

                FrmListType.frmApprovalCode()
                FrmListType.Show()

                CtrlListType = 1

            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Approver Code ::")
            End If
            RS.Close()
        End With

    End Sub


    Private Sub btnTravStatusCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnTravStatusCode.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_TravellerStatus where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListTravellerStatus()
                FrmListType.Show()
                CtrlListType = 3
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, ":: Traveller Status ::")
            End If
            RS.Close()
        End With

    End Sub

    Private Sub btnCostCenterCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCostCenterCode.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_CostCenterCode where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCostCenter()
                FrmListType.Show()
                CtrlListType = 4
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Cost Center Code ::")
            End If
            RS.Close()
        End With

    End Sub


    Private Sub btnProjNumber_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnProjNumber.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ProjectNumber where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListProjectNumber()
                FrmListType.Show()
                CtrlListType = 5
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Project Number ::")
            End If
            RS.Close()
        End With

    End Sub

    Private Sub btnDepNumber_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDepNumber.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_DepartmentNumber where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListDepartmentNumber()
                FrmListType.Show()
                CtrlListType = 6
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Department Number ::")
            End If
            RS.Close()
        End With

    End Sub




    Private Sub btnOrderR_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnOrderR.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_OrderReference where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListOrderReference()
                FrmListType.Show()
                CtrlListType = 7
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Order Reference ::")
            End If
            RS.Close()
        End With

    End Sub



    Private Sub btnApproverMIS_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnApproverMIS.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_Approver where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListApprover()
                FrmListType.Show()
                CtrlListType = 8
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Approver ::")
            End If
            RS.Close()
        End With

    End Sub


    Private Sub btnMgrSuperior_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnMgrSuperior.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ManagerSuperior where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListMgrSuperior()
                FrmListType.Show()
                CtrlListType = 9
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Manager Superior ::")
            End If
            RS.Close()
        End With

    End Sub


    Private Sub btnReasonOfTrip_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnReasonOfTrip.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ReasonOfTrip where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListReasonOfTrip()
                FrmListType.Show()
                CtrlListType = 10
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Reason of Trip ::")
            End If
            RS.Close()
        End With

    End Sub



    Private Sub btnCSData1Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData1Mis.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData1 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData1()
                FrmListType.Show()
                CtrlListType = 11
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 1 ::")
            End If
            RS.Close()
        End With

    End Sub



    Private Sub btnCSData2Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData2Mis.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData2 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData2()
                FrmListType.Show()
                CtrlListType = 12
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 2 ::")
            End If
            RS.Close()
        End With

    End Sub



    Private Sub btnCSData3Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData3Mis.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData3 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData3()
                FrmListType.Show()
                CtrlListType = 13
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 3 ::")
            End If
            RS.Close()
        End With
    End Sub



    Private Sub btnCSData4Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData4Mis.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData4 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData4()
                FrmListType.Show()
                CtrlListType = 14
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 4 ::")
            End If
            RS.Close()
        End With

    End Sub

    Private Sub btnCSData5Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData5Mis.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData5 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData5()
                FrmListType.Show()
                CtrlListType = 24
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 5 ::")
            End If
            RS.Close()
        End With

    End Sub

    Private Sub btnCSData6Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData6Mis.Click
        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData6 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData6()
                FrmListType.Show()
                CtrlListType = 23
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 6 ::")
            End If
            RS.Close()
        End With
    End Sub

    Private Sub btnCSData7Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData7Mis.Click
        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData7 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData7()
                FrmListType.Show()
                CtrlListType = 22
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 7 ::")
            End If
            RS.Close()
        End With
    End Sub



    Private Sub btnCSData8Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData8Mis.Click
        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData8 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData8()
                FrmListType.Show()
                CtrlListType = 21
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 8 ::")
            End If
            RS.Close()
        End With
    End Sub



    Private Sub btnCSData12Mis_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCSData12Mis.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_ClientData12 where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListCSData12()
                FrmListType.Show()
                CtrlListType = 25
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: CS Data 12 ::")
            End If
            RS.Close()
        End With

    End Sub






    Private Sub btnEmpNumber_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEmpNumber.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_EmployeeNumber where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListEmployeeNumber()
                FrmListType.Show()
                CtrlListType = 15
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " Employee Number")
            End If
            RS.Close()
        End With


    End Sub


    ''=================Reference Tool

    Private Sub frmClientListType()

        '==Clear all the products found in the list
        DataGridClientList.Rows.Clear()
        DataGridClientList.Columns.Clear()
        DataGridClientList.ColumnHeadersVisible = False
        DataGridClientList.RowHeadersVisible = False


        Call createGridViewHeader_ClientList()

        CHECK_RS1()

        SQL_QUERY = "Select * from BCDMIS..ClientListBI order by AccountName "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            Do While Not RS1.EOF

                If Not RS1.EOF Then

                    DataGridClientList.Rows.Add()
                    ctr = DataGridClientList.Rows.Count - 1

                    DataGridClientList.Rows.Item(ctr).Cells(0).Value = Trim((RS1.Fields("ClientNo").Value).ToString())
                    DataGridClientList.Rows.Item(ctr).Cells(1).Value = Trim((RS1.Fields("AccountName").Value).ToString())
                    DataGridClientList.Rows.Item(ctr).Cells(2).Value = Trim((RS1.Fields("CreditTerm").Value).ToString())
                    DataGridClientList.Rows.Item(ctr).Cells(3).Value = Trim((RS1.Fields("PaymentForm").Value).ToString())
                    DataGridClientList.Rows.Item(ctr).Cells(4).Value = Trim((RS1.Fields("GovTaxonSF").Value).ToString())
                    DataGridClientList.Rows.Item(ctr).Cells(5).Value = Trim((RS1.Fields("AcctBiller").Value).ToString())
                    DataGridClientList.Rows.Item(ctr).Cells(6).Value = Trim((RS1.Fields("Remarks").Value).ToString())

                    RS1.MoveNext()

                End If

            Loop
            RS1.Close()
        End With


    End Sub



    Private Sub createGridViewHeader_ClientList()

        DataGridClientList.ColumnCount = 7
        DataGridClientList.ColumnHeadersVisible = True

        ' Set the column header style.
        Dim columnHeaderStyle As New DataGridViewCellStyle()

        columnHeaderStyle.BackColor = Color.CadetBlue

        columnHeaderStyle.Font = New Font("Arial", 7, FontStyle.Regular)

        DataGridClientList.ColumnHeadersDefaultCellStyle = columnHeaderStyle
        DataGridClientList.RowTemplate.Height = 18
        DataGridClientList.RowsDefaultCellStyle.Font = New Font("Arial", 7, FontStyle.Regular)

        ' Set the column header names.
        DataGridClientList.Columns(0).Name = "Client Number"
        DataGridClientList.Columns(0).Width = 100

        DataGridClientList.Columns(1).Name = "Account Name"
        DataGridClientList.Columns(1).Width = 200

        DataGridClientList.Columns(2).Name = "Credit Term"
        DataGridClientList.Columns(2).Width = 70

        DataGridClientList.Columns(3).Name = "Payment Form"
        DataGridClientList.Columns(3).Width = 100

        DataGridClientList.Columns(4).Name = "Gov Tax on SF"
        DataGridClientList.Columns(4).Width = 100

        DataGridClientList.Columns(5).Name = "Account Biller"
        DataGridClientList.Columns(5).Width = 100

        DataGridClientList.Columns(6).Name = "Remarks"
        DataGridClientList.Columns(6).Width = 250


    End Sub



    Private Sub btnSearchSortBy_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSearchSortBy.Click


        If rdButtonClientN.Checked = True Then

            '==Clear all the products found in the list
            DataGridClientList.Rows.Clear()
            DataGridClientList.Columns.Clear()
            DataGridClientList.ColumnHeadersVisible = False
            DataGridClientList.RowHeadersVisible = False


            Call createGridViewHeader_ClientList()

            CHECK_RS1()

            SQL_QUERY = "Select * from BCDMIS..ClientListBI order by ClientNo "
            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS1

                Do While Not RS1.EOF

                    If Not RS1.EOF Then

                        DataGridClientList.Rows.Add()
                        ctr = DataGridClientList.Rows.Count - 1

                        DataGridClientList.Rows.Item(ctr).Cells(0).Value = Trim((RS1.Fields("ClientNo").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(1).Value = Trim((RS1.Fields("AccountName").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(2).Value = Trim((RS1.Fields("CreditTerm").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(3).Value = Trim((RS1.Fields("PaymentForm").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(4).Value = Trim((RS1.Fields("GovTaxonSF").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(5).Value = Trim((RS1.Fields("AcctBiller").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(6).Value = Trim((RS1.Fields("Remarks").Value).ToString())

                        RS1.MoveNext()

                    End If

                Loop
                RS1.Close()
            End With


        End If



        If rdButtonClientName.Checked = True Then

            '==Clear all the products found in the list
            DataGridClientList.Rows.Clear()
            DataGridClientList.Columns.Clear()
            DataGridClientList.ColumnHeadersVisible = False
            DataGridClientList.RowHeadersVisible = False


            Call createGridViewHeader_ClientList()

            CHECK_RS1()

            SQL_QUERY = "Select * from BCDMIS..ClientListBI order by AccountName "
            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS1

                Do While Not RS1.EOF

                    If Not RS1.EOF Then

                        DataGridClientList.Rows.Add()
                        ctr = DataGridClientList.Rows.Count - 1

                        DataGridClientList.Rows.Item(ctr).Cells(0).Value = Trim((RS1.Fields("ClientNo").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(1).Value = Trim((RS1.Fields("AccountName").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(2).Value = Trim((RS1.Fields("CreditTerm").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(3).Value = Trim((RS1.Fields("PaymentForm").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(4).Value = Trim((RS1.Fields("GovTaxonSF").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(5).Value = Trim((RS1.Fields("AcctBiller").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(6).Value = Trim((RS1.Fields("Remarks").Value).ToString())

                        RS1.MoveNext()

                    End If

                Loop
                RS1.Close()
            End With

        End If


        If RdButtonNonTax.Checked = True Then

            '==Clear all the products found in the list
            DataGridClientList.Rows.Clear()
            DataGridClientList.Columns.Clear()
            DataGridClientList.ColumnHeadersVisible = False
            DataGridClientList.RowHeadersVisible = False


            Call createGridViewHeader_ClientList()

            CHECK_RS1()

            SQL_QUERY = "Select * from BCDMIS..ClientListBI order by GovTaxonSF"
            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS1

                Do While Not RS1.EOF

                    If Not RS1.EOF Then

                        DataGridClientList.Rows.Add()
                        ctr = DataGridClientList.Rows.Count - 1

                        DataGridClientList.Rows.Item(ctr).Cells(0).Value = Trim((RS1.Fields("ClientNo").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(1).Value = Trim((RS1.Fields("AccountName").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(2).Value = Trim((RS1.Fields("CreditTerm").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(3).Value = Trim((RS1.Fields("PaymentForm").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(4).Value = Trim((RS1.Fields("GovTaxonSF").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(5).Value = Trim((RS1.Fields("AcctBiller").Value).ToString())
                        DataGridClientList.Rows.Item(ctr).Cells(6).Value = Trim((RS1.Fields("Remarks").Value).ToString())

                        RS1.MoveNext()

                    End If

                Loop

            End With
            RS1.Close()
        End If


    End Sub



    Private Sub btnSearchClientList_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSearchClientList.Click

        'Client(Name)
        'Client(Number)

        If Trim(CcboClientOption.Text) <> Nothing And Trim(txtClientNameSearch.Text) <> Nothing Then

            If Trim(CcboClientOption.Text) = "Client Name" Then

                '==Clear all the products found in the list
                DataGridClientList.Rows.Clear()
                DataGridClientList.Columns.Clear()
                DataGridClientList.ColumnHeadersVisible = False
                DataGridClientList.RowHeadersVisible = False


                Call createGridViewHeader_ClientList()

                CHECK_RS1()

                SQL_QUERY = "Select * from BCDMIS..ClientListBI where AccountName like '%" & Trim(txtClientNameSearch.Text) & "%'"
                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS1

                    Do While Not RS1.EOF

                        If Not RS1.EOF Then

                            DataGridClientList.Rows.Add()
                            ctr = DataGridClientList.Rows.Count - 1

                            DataGridClientList.Rows.Item(ctr).Cells(0).Value = Trim((RS1.Fields("ClientNo").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(1).Value = Trim((RS1.Fields("AccountName").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(2).Value = Trim((RS1.Fields("CreditTerm").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(3).Value = Trim((RS1.Fields("PaymentForm").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(4).Value = Trim((RS1.Fields("GovTaxonSF").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(5).Value = Trim((RS1.Fields("AcctBiller").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(6).Value = Trim((RS1.Fields("Remarks").Value).ToString())

                            RS1.MoveNext()
                        Else
                            MsgBox("Record Not Found!..", vbCritical, ":: Search ::")
                        End If

                    Loop

                End With
                RS1.Close()

            End If


            If Trim(CcboClientOption.Text) = "Client Number" Then

                '==Clear all the products found in the list
                DataGridClientList.Rows.Clear()
                DataGridClientList.Columns.Clear()
                DataGridClientList.ColumnHeadersVisible = False
                DataGridClientList.RowHeadersVisible = False


                Call createGridViewHeader_ClientList()

                CHECK_RS1()

                SQL_QUERY = "Select * from BCDMIS..ClientListBI where ClientNo ='" & Trim(txtClientNameSearch.Text) & "'"
                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS1

                    Do While Not RS1.EOF

                        If Not RS1.EOF Then

                            DataGridClientList.Rows.Add()
                            ctr = DataGridClientList.Rows.Count - 1

                            DataGridClientList.Rows.Item(ctr).Cells(0).Value = Trim((RS1.Fields("ClientNo").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(1).Value = Trim((RS1.Fields("AccountName").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(2).Value = Trim((RS1.Fields("CreditTerm").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(3).Value = Trim((RS1.Fields("PaymentForm").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(4).Value = Trim((RS1.Fields("GovTaxonSF").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(5).Value = Trim((RS1.Fields("AcctBiller").Value).ToString())
                            DataGridClientList.Rows.Item(ctr).Cells(6).Value = Trim((RS1.Fields("Remarks").Value).ToString())

                            RS1.MoveNext()

                        Else
                            MsgBox("Record Not Found!..", vbCritical, ":: Search ::")
                        End If

                    Loop

                End With
                RS1.Close()
            End If

        Else
            MsgBox("Incomplete Details..", vbCritical, ":: Search ::")
        End If


    End Sub


    Private Sub RdBtnReIssue_click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RdBtnReIssue.Click

        TabCAPI.TabPages.Remove(TabPage1) 'Pre Booking
        TabCAPI.TabPages.Remove(TabPage4) 'BCD MIS
        TabCAPI.TabPages.Remove(TabPage6) 'Settings
        'TabControl1.TabPages.Remove(TabPage9) 'Settings


    End Sub


    Private Sub RdBtnAllEntries_click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RdBtnAllEntries.Click

        TabCAPI.TabPages.Insert(0, TabPage1) 'Pre Booking
        TabCAPI.TabPages.Insert(4, TabPage4)
        TabCAPI.TabPages.Insert(6, TabPage6) 'Settings
        '   TabControl1.TabPages.Insert(9, TabPage6) 'Settings

        TabCAPI.SelectedIndex = 0




    End Sub


    Private Sub btnHotelReasonCode_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnHotelReasonCode.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_HotelReasonCode where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListHotelReasonCode()
                FrmListType.Show()
                CtrlListType = 16
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Hotel Reason Code ::")
            End If
            RS.Close()
        End With
    End Sub


    Private Sub btnReasonCD_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnReasonCD.Click

        txtDescRCode.Text = Nothing
        txtReasonCode.Text = Nothing
        ' txtRCodeDenied.Text = Nothing

        If Trim(txtSellingFare.Text) <> Nothing Or Trim(txtSFSegment.Text) <> Nothing Then

            CHECK_RS()

            SQL_QUERY = "Select * from BCDMIS..C_ReasonCodes where ClientID = '" & Trim(GlobalCustNO) & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS

                If Not RS.EOF Then
                    FrmListType.frmListReasonCodes()
                    FrmListType.Show()
                    CtrlListType = 17
                Else
                    MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: FARE TYPE REASON CODE ::")
                End If
                RS.Close()
            End With
        End If

    End Sub


    Private Sub btnReasonCodeDen_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnReasonCodeDen.Click

        txtRCodeDenied.Text = Nothing

        If Trim(txtSellingFare.Text) <> Nothing Or Trim(txtSFSegment.Text) <> Nothing Then

            CHECK_RS()

            SQL_QUERY = "Select * from BCDMIS..C_ReasonCodeDenied where ClientID = '" & Trim(GlobalCustNO) & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)


            With RS

                If Not RS.EOF Then

                    FrmListType.frmListReasonCodeDenied()
                    FrmListType.Show()
                    CtrlListType = 18

                    'If UCase(Trim(txtDescRCode.Text)) = "EXCHANGE NO VALUE" Or UCase(Trim(txtDescRCode.Text)) = "EXCHANGE WITH VALUE" Then

                    '    CHECK_RS()
                    '    SQL_QUERY = "Select * from BCDMIS..C_ReasonCodeDenied where ClientID = '" & Trim(GlobalCustNO) & "' and  UPPER(Description)='" & UCase(Trim(txtDescRCode.Text)) & "'"
                    '    RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    '    With RS

                    '        If Not RS.EOF Then
                    '            If Trim(RS.Fields("Comparison").Value).ToString() = "Equal To" Then
                    '                txtLowFare.Text = txtSellingFare.Text
                    '                txtRCodeDenied.Text = Trim((RS.Fields("Code").Value).ToString())
                    '            End If
                    '        End If

                    '    End With

                    'Else
                    '    FrmListType.frmListReasonCodeDenied()
                    '    FrmListType.Show()
                    '    CtrlListType = 18
                    'End If

                Else
                    MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: AIR REASON CODES ::")
                End If

                RS.Close()

            End With

        End If


    End Sub


    Private Sub btnMajorCls_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnMajorCls.Click

        CHECK_RS()

        SQL_QUERY = "Select * from BCDMIS..C_MajorClass where ClientID = '" & Trim(GlobalCustNO) & "'"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS

            If Not RS.EOF Then
                FrmListType.frmListMajorClass()
                FrmListType.Show()
                CtrlListType = 19
            Else
                MsgBox(" No Record Found..", vbCritical + vbOKOnly, " :: Major Class ::")
            End If
            RS.Close()
        End With

    End Sub


    Private Sub txtHotelBookedF_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtHotelBookedF.SelectedIndexChanged
        txtHotelBookedF_N.Text = Trim(txtHotelBookedF.Text)
    End Sub


    Private Sub txtCarBookedFlag_N_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCarBookedFlag_N.SelectedIndexChanged
        txtCarBookedFlag.Text = Trim(txtCarBookedFlag_N.Text)
    End Sub


    Private Sub RecordType_F_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RecordType_F.SelectedIndexChanged
        Dim s As String = Trim(RecordType_F.Text)
        Dim a As String() = Split(s, "=")
        txtRecordType.Text = a(0)

    End Sub

    Private Sub txtTourCode_N_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTourCode_N.SelectedIndexChanged
        txtTourCode.Text = Trim(txtTourCode_N.Text)
    End Sub




    'Private Sub btnRetrieve_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRetrieve.Click

    '    Dim strTemp As String
    '    Dim strCode() As String
    '    Dim mainOutput As String

    '    objSession = New k1aHostToolKit.HostSession
    '    objPnr = New s1aPNR.PNR

    '    rtxtResult.Clear()
    '    airSegments.Clear()
    '    AirSegmentsTxt.Clear()
    '    AirSegmentsCon.Clear()
    '    myArrayBoard.Clear()
    '    myArrayOff.Clear()
    '    TcktNo.Clear()
    '    PName.Clear()
    '    ItineraryInfo.Clear()
    '    AirSegmentsTxt.Clear()
    '    AirSegmentsCon.Clear()
    '    AirSegmentsConStat.Clear()
    '    AirSegmentsRef.Clear()
    '    myArrayStatus.Clear()

    '    Stat = ""

    '    mainOutput = buildHeader()

    '    If Len(txtRLoc.Text) <> 0 Then

    '        If chkPax.Checked = False And chkContact.Checked = False And chkItinerary.Checked = False And chkRemark.Checked = False And chkTicket.Checked = False Then
    '            MsgBox("PNR Element must not be empty...Thanks!", vbCritical + vbOKOnly, "Retrieved Error!..")
    '        Else

    '            If Len(Trim(txtRLoc.Text)) > 6 Then
    '                MsgBox("Length of RLOC exceeded its required value!..", vbCritical + vbOKOnly, "Retrieved Error!..")
    '            Else

    '                If checkAlphaNumeric(Trim(txtRLoc.Text)) = True Then

    '                    objResponse = objSession.Send("RT" + txtRLoc.Text)
    '                    objPnr.RetrieveCurrent(objSession)

    '                    strTemp = objResponse.GetLineFromBuffer(2)
    '                    strCode = strTemp.Split(" ")

    '                    Me.Cursor = Cursors.WaitCursor

    '                    If Trim(UCase(strCode(0).ToString)) = "SECURED" Or Trim(UCase(strCode(0).ToString)) = "INVALID" Or Trim(UCase(strCode(0).ToString)) = "IGNORED" Or Trim(UCase(strCode(0).ToString)) = "TRANSACTION" Or Trim(UCase(strCode(0).ToString)) = "ENTRY" Or Trim(UCase(strCode(0).ToString)) = "FUNCTION" Then

    '                        MsgBox("Invalid Entry....Please try again..Thanks!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "Retrieved Error!")
    '                        objResponse = objSession.Send("IG")
    '                        objSession = Nothing
    '                        objResponse = Nothing
    '                        Me.Cursor = Cursors.Default
    '                        Call init()

    '                    ElseIf Trim(UCase(strCode(0).ToString)) = "INACTIVITY" Then

    '                        MsgBox("Inactivity Time Out-Sign In!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "Retrieved Error!")
    '                        objResponse = objSession.Send("IG")
    '                        objSession = Nothing
    '                        objResponse = Nothing
    '                        Me.Cursor = Cursors.Default
    '                        Call init()

    '                    ElseIf Trim(UCase(strCode(0).ToString)) = "SIGN" Then

    '                        MsgBox("Please Sign-In....", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "Retrieved Error!")
    '                        objResponse = objSession.Send("IG")
    '                        objSession = Nothing
    '                        objResponse = Nothing
    '                        Me.Cursor = Cursors.Default
    '                        Call init()

    '                    ElseIf Trim(UCase(strCode(0).ToString)) = "NO" Then

    '                        MsgBox("NO MATCH FOR RECORD LOCATOR..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "Retrieved Error!")
    '                        objResponse = objSession.Send("IG")
    '                        objSession = Nothing
    '                        objResponse = Nothing
    '                        Me.Cursor = Cursors.Default
    '                        Call init()

    '                    Else

    '                        mainOutput = mainOutput + vbCrLf + vbCrLf + "AMADEUS REF NO: " + getReloc()

    '                        If chkPax.Checked Then
    '                            If getPax().ToString <> Nothing Then
    '                                mainOutput = mainOutput + vbCrLf + vbCrLf + "Passenger(s): " + vbTab + vbTab + vbTab + vbTab + vbCrLf + GetPaxTckDet()
    '                                mainOutput = mainOutput + vbCrLf + getItineraryInfo()
    '                            End If
    '                        End If

    '                        If chkContact.Checked Then
    '                            If getContactInfo().ToString <> Nothing Then
    '                                mainOutput = mainOutput + vbCrLf + "Contact Info(s): " + vbCrLf + getContactInfo() + vbCrLf
    '                            End If
    '                        End If

    '                        If chkRemark.Checked Then
    '                            If getRemark().ToString <> Nothing Then
    '                                mainOutput = mainOutput + vbCrLf + "Remark(s): " + vbCrLf + getRemark() + vbCrLf
    '                            End If
    '                        End If

    '                        rtxtResult.Text = mainOutput
    '                        rtxtResult.SelectionAlignment = HorizontalAlignment.Left
    '                        Me.Cursor = Cursors.Default

    '                    End If
    '                End If
    '            End If
    '        End If

    '    Else
    '        MsgBox("Record locator must not be empty!..", vbCritical + vbOKOnly, " Retrieved Error!..")
    '        txtRLoc.Focus()
    '        Me.Cursor = Cursors.Default

    '    End If

    'End Sub


    ''PURPOSE : CHECK ENTRY IF ALPHANUMERIC
    'Public Function checkAlphaNumeric(ByVal strInputText As String) As Boolean

    '    Dim intCounter As Integer
    '    Dim strCompare As String
    '    Dim strInput As String
    '    checkAlphaNumeric = False

    '    For intCounter = 1 To Len(strInputText)

    '        strCompare = Mid$(strInputText, intCounter, 1)
    '        strInput = Mid$(strInputText, intCounter + 1, Len(strInputText))
    '        If strCompare Like ("[A-Z]") Or strCompare Like ("[a-z]") Or strCompare Like ("[0-9]") Then
    '            checkAlphaNumeric = True
    '        Else
    '            checkAlphaNumeric = False
    '            MsgBox("Record locator is invalid..", vbCritical + vbOKOnly, "Retrieved Error!")
    '            Exit Function
    '        End If

    '    Next intCounter

    'End Function

    'Private Function buildHeader() As String

    '    Dim ItiHeader As String
    '    ItiHeader = "ITINERARY INFORMATION"

    '    Return "****" + ItiHeader + "****"

    'End Function

    'Private Sub init()

    '    chkContact.Checked = False
    '    chkItinerary.Checked = False
    '    chkPax.Checked = False
    '    chkRemark.Checked = False
    '    chkTicket.Checked = False
    '    chkAll.Checked = False

    '    txtRLoc.Clear()
    '    txtRLoc.Focus()
    '    rtxtResult.Clear()

    'End Sub
    'Private Function getReloc() As String
    '    objPnr.RetrieveCurrent(objSession)
    '    getReloc = objPnr.Header.recordlocator
    'End Function

    'Private Function getPax() As String

    '    Dim cnt As Integer
    '    Dim objName As s1aPNR.NameElement
    '    Dim ctr As Integer
    '    Dim paxes As New ArrayList
    '    Dim allpax As String = ""

    '    objPnr.RetrieveCurrent(objSession)
    '    For Each objName In objPnr.NameElements
    '        cnt = 1 + cnt
    '        paxes.Add(objName.LastName & "/" & objName.Initial)
    '    Next

    '    'combining of data
    '    For i = 0 To paxes.Count - 1
    '        ctr = ctr + 1
    '        allpax = allpax + "          " & ctr.ToString() & ". " & paxes(i) & vbCrLf
    '    Next

    '    Return allpax

    'End Function


    ''For TicketImage Format

    'Private Function GetPaxTckDet() As String

    '    Dim Pxtck As String = ""
    '    Dim PaxTemp As String = ""
    '    Dim TckTemp As String = ""
    '    Dim cntr As Integer
    '    Dim Ctr As Integer
    '    Dim ilenPax As Integer
    '    Dim ObjPaxName As s1aPNR.NameElement

    '    objSession = New k1aHostToolKit.HostSession
    '    objPnr = New s1aPNR.PNR

    '    objPnr.RetrieveCurrent(objSession)

    '    'Get Pax Name
    '    For Each ObjPaxName In objPnr.NameElements
    '        PName.Add(ObjPaxName.Text)
    '    Next

    '    If PName.Count = Nothing And PName.Count = 0 Then
    '        objResponse = objSession.Send("ig")
    '    Else
    '        For cntr = 0 To PName.Count - 1
    '            Ctr = Ctr + 1
    '            ilenPax = Len(PName(cntr))
    '            PaxTemp = Ctr.ToString() + "." + Trim(Mid(PName(cntr), 3, ilenPax))
    '            PaxTemp = PaxTemp.PadRight((45 + PaxTemp.Count) - PaxTemp.Count, mPadding)
    '            Pxtck = Pxtck + PaxTemp + vbCrLf
    '        Next
    '    End If

    '    ALLLength = DepDate.Count
    '    GetPaxTckDet = Pxtck

    'End Function


    'Private Function getItineraryInfo() As String

    '    'initialization
    '    Dim allItinerary As String = ""
    '    Dim BoardPt As String = ""
    '    Dim OffPt As String = ""
    '    Dim AirStatus As String = ""
    '    Dim AirCodeRecloc As String
    '    Dim ItineraryCheckOpen As String = ""
    '    Dim ItineraryCheckFlwn As String = ""
    '    Dim sGet As String = ""

    '    'For Margin
    '    Dim AirFlghtNo As String = ""
    '    Dim DPDate As String = ""
    '    Dim AClass As String = ""
    '    Dim ArvlDate As String = ""
    '    Dim DpTime As String = ""
    '    Dim ArvlTime As String = ""

    '    'Counter Initialization
    '    Dim CtrBoard As Integer
    '    Dim ctrOff As Integer
    '    Dim ctrStat As Integer
    '    Dim i As Integer

    '    'Initialization for Itineray Header
    '    Dim MainTckHeader As String = ""
    '    Dim Flt As String, strDDate As String, strClass As String = Nothing, StrOrig As String, StrDes As String, StrDTime As String, StrATime As String, strADate As String
    '    Dim strStat As String, StrRef As String

    '    Dim objAirSegment As s1aPNR.AirSegment
    '    Dim objAirFlnSegment As s1aPNR.AirFlownSegment

    '    '======================================================
    '    'Get Itinerary details
    '    '======================================================
    '    For Each objAirSegment In objPnr.AirSegments
    '        'segment out
    '        myArrayBoard.Add(Trim(AirlineCodes(objAirSegment.BoardPoint)) & "(" & objAirSegment.BoardPoint & ")")
    '        myArrayOff.Add(Trim(AirlineCodes(objAirSegment.OffPoint)) & "(" & objAirSegment.OffPoint & ")")
    '        AirFlghtNo = (objAirSegment.Airline + objAirSegment.FlightNo)
    '        AirFlghtNo = AirFlghtNo.PadRight((8 + AirFlghtNo.Length) - AirFlghtNo.Length, mPadding)
    '        DPDate = Format(objAirSegment.DepartureDate, "ddMMM")
    '        DPDate = DPDate.PadRight((7 + DPDate.Length) - DPDate.Length, mPadding)

    '        If chkTicket.Checked = True Then
    '            AClass = Trim(objAirSegment.Class)
    '            AClass = AClass.PadRight((6 + AClass.Length) - AClass.Length, mPadding)
    '        End If

    '        ArvlDate = Format(objAirSegment.ArrivalDate, "ddMMM")
    '        ArvlDate = ArvlDate.PadRight((6 + ArvlDate.Length) - ArvlDate.Length, mPadding)
    '        DpTime = (Format(objAirSegment.DepartureTime, "HHmm"))
    '        DpTime = DpTime.PadRight((6 + DpTime.Length) - DpTime.Length, mPadding)
    '        ArvlTime = Format(objAirSegment.ArrivalTime, "HHmm")
    '        ArvlTime = ArvlTime.PadRight((6 + ArvlTime.Length) - ArvlTime.Length, mPadding)
    '        AirStatus = AirlineStatus(objAirSegment.StatusCode)
    '        myArrayStatus.Add(AirStatus)
    '        AirCodeRecloc = AirlineReloc(objAirSegment.Text)
    '        AirCodeRecloc = AirCodeRecloc.PadRight((21 + AirCodeRecloc.Length) - AirCodeRecloc.Length, mPadding)
    '        ItineraryCheckOpen = objAirSegment.Text
    '        '---For Itinerary Details----
    '        AirSegmentsTxt.Add(AirFlghtNo & DPDate & AClass)
    '        AirSegmentsCon.Add(DpTime & ArvlTime & ArvlDate)
    '        AirSegmentsConStat.Add(AirStatus)
    '        AirSegmentsRef.Add(AirCodeRecloc)

    '    Next

    '    '----------------------------------------------------
    '    'Check for Flown Segment
    '    '----------------------------------------------------
    '    For Each objAirFlnSegment In objPnr.AirFlownSegments
    '        ItineraryCheckFlwn = objAirFlnSegment.Text
    '    Next

    '    '----------------------------------------------------
    '    'Get the Maximum length of the string for BoardPoint
    '    '----------------------------------------------------
    '    For CtrBoard = 0 To myArrayBoard.Count - 1
    '        If CtrBoard = 0 Then
    '            MaxValBoard = Len(myArrayBoard(CtrBoard).ToString)
    '        Else
    '            If MaxValBoard < Len(myArrayBoard(CtrBoard).ToString) Then
    '                MaxValBoard = Len(myArrayBoard(CtrBoard).ToString)
    '            End If
    '        End If
    '    Next

    '    '---------------------------------------------------
    '    'Get the Maximum length of the string for Offpoint
    '    '---------------------------------------------------
    '    For ctrOff = 0 To myArrayOff.Count - 1
    '        If ctrOff = 0 Then
    '            MaxValOff = Len(myArrayOff(ctrOff).ToString)
    '        Else
    '            If MaxValOff < Len(myArrayOff(ctrOff).ToString) Then
    '                MaxValOff = Len(myArrayOff(ctrOff).ToString)
    '            End If
    '        End If
    '    Next

    '    '---------------------------------------------------
    '    'Get the Maximum length of the string for Status
    '    '---------------------------------------------------

    '    For ctrStat = 0 To myArrayStatus.Count - 1
    '        If ctrStat = 0 Then
    '            MaxValStat = Len(myArrayStatus(ctrStat).ToString)
    '        Else
    '            If MaxValStat < Len(myArrayStatus(ctrStat).ToString) Then
    '                MaxValStat = Len(myArrayStatus(ctrStat).ToString)
    '            End If
    '        End If
    '    Next

    '    If MaxValStat = 2 Then
    '        MaxValStat = 7
    '    Else
    '        MaxValStat = MaxValStat + 2
    '    End If


    '    If Len(ItineraryCheckOpen) = 0 And Len(ItineraryCheckFlwn) = 0 Then

    '        MainTckHeader = "-------------------------------------------------------------------------------------------------------------------" + vbCrLf + _
    '                         vbTab + vbTab + vbTab + vbTab + vbTab + vbTab + "NO ITINERARY" + vbCrLf + _
    '                        "-------------------------------------------------------------------------------------------------------------------"
    '        getItineraryInfo = MainTckHeader


    '    ElseIf Len(ItineraryCheckOpen) = 0 And Len(ItineraryCheckFlwn) <> 0 Then

    '        MainTckHeader = "-------------------------------------------------------------------------------------------------------------------" + vbCrLf + _
    '                          vbTab + vbTab + vbTab + vbTab + vbTab + vbTab + "TICKET/s FLOWN" + vbCrLf + _
    '                         "-------------------------------------------------------------------------------------------------------------------"
    '        getItineraryInfo = MainTckHeader

    '    ElseIf (Len(ItineraryCheckOpen) <> 0 And Len(ItineraryCheckFlwn) <> 0) Or (Len(ItineraryCheckOpen) <> 0 And Len(ItineraryCheckFlwn) = 0) Then

    '        '-------------------------------------------------
    '        'combining all itinerary details
    '        '-------------------------------------------------

    '        Dim HeaderStr As New ArrayList
    '        Dim icnt As Integer
    '        Dim MaxHeader As Integer

    '        For i = 0 To AirSegmentsTxt.Count - 1
    '            BoardPt = myArrayBoard(i).ToString
    '            BoardPt = BoardPt.PadRight(((MaxValBoard + 3) + BoardPt.Length) - BoardPt.Length, mPadding)
    '            OffPt = myArrayOff(i).ToString
    '            OffPt = OffPt.PadRight(((MaxValOff + 3) + OffPt.Length) - OffPt.Length, mPadding)
    '            AirStatus = myArrayStatus(i).ToString
    '            AirStatus = AirStatus.PadRight(((MaxValStat) + AirStatus.Length) - AirStatus.Length, mPadding)
    '            allItinerary = allItinerary + Trim(AirSegmentsTxt(i) + BoardPt + OffPt + AirSegmentsCon(i) + AirStatus + AirSegmentsRef(i)) + vbCrLf
    '            HeaderStr.Add(Len(Trim(AirSegmentsTxt(i) + BoardPt + OffPt + AirSegmentsCon(i) + AirStatus + AirSegmentsRef(i))))

    '        Next

    '        '---------------------------------------------------
    '        'Get the Maximum length of the Header
    '        '---------------------------------------------------


    '        For icnt = 0 To HeaderStr.Count - 1
    '            If icnt = 0 Then
    '                MaxHeader = HeaderStr(icnt).ToString
    '            Else
    '                If MaxHeader < HeaderStr(icnt).ToString Then
    '                    MaxHeader = HeaderStr(icnt).ToString


    '                End If
    '            End If
    '        Next


    '        Flt = "Flight"
    '        Flt = Flt.PadRight(8, mPadding)
    '        strDDate = "Date"
    '        strDDate = strDDate.PadRight(7, mPadding)

    '        If chkTicket.Checked = True Then
    '            strClass = "Class"
    '            strClass = strClass.PadRight(6, mPadding)
    '        End If

    '        StrOrig = "Origin"
    '        StrOrig = StrOrig.PadRight(MaxValBoard + 3, mPadding)
    '        StrDes = "Destination"
    '        StrDes = StrDes.PadRight(MaxValOff + 3, mPadding)
    '        StrDTime = "Dep"
    '        StrDTime = StrDTime.PadRight(6, mPadding)
    '        StrATime = "Arrvl"
    '        StrATime = StrATime.PadRight(6, mPadding)
    '        strADate = "Arrvl"
    '        strADate = strADate.PadRight(6, mPadding)
    '        strStat = "Status"
    '        strStat = strStat.PadRight(MaxValStat, mPadding)
    '        StrRef = "Ref"
    '        StrRef = StrRef.PadRight(21, mPadding)

    '        Dim iLine As Integer
    '        Dim LineH As String = ""

    '        For iLine = 0 To MaxHeader
    '            LineH = LineH + "-"
    '        Next

    '        MainTckHeader = Trim(LineH) + vbCrLf + Trim(Flt + strDDate + strClass + StrOrig + StrDes + StrDTime + StrATime + strADate + strStat + StrRef) + vbCrLf + Trim(LineH)
    '        sGet = MainTckHeader + vbCrLf + allItinerary + LineH

    '    End If


    '    getItineraryInfo = sGet



    'End Function


    'Private Function AirlineCodes(ByVal BoardPt As String)

    '    Dim ds As New System.Data.DataSet
    '    Dim dbRead As OleDbDataReader
    '    Dim dbCmd As OleDbCommand

    '    Dim sql As String = "Select * from AIRPORT where CITY_CODE= '" & BoardPt & "'"
    '    Dim da As System.Data.OleDb.OleDbDataAdapter = New System.Data.OleDb.OleDbDataAdapter(sql, ModAccess.CONNECTDBAccess)
    '    dbCmd = New OleDbCommand(sql, ModAccess.CONNECTDBAccess)
    '    dbRead = dbCmd.ExecuteReader
    '    Do While dbRead.Read
    '        BoardPt = dbRead(2)
    '    Loop

    '    Return BoardPt

    'End Function


    'Private Function AirlineStatus(ByVal AirStatus As String)

    '    If AirStatus.Substring(0, 2) = "HK" Or AirStatus.Substring(0, 2) = "RR" Or AirStatus.Substring(0, 2) = "TK" Or AirStatus.Substring(0, 2) = "KK" Or AirStatus.Substring(0, 2) = "GK" Then
    '        Stat = "OK"
    '    ElseIf AirStatus.Substring(0, 2) = "HL" Or AirStatus.Substring(0, 2) = "GL" Then
    '        Stat = "WAITLISTED"
    '    ElseIf AirStatus.Substring(0, 2) = "UC" Then
    '        Stat = "UNCONFIRMED"
    '    ElseIf AirStatus.Substring(0, 2) = "HX" Then
    '        Stat = "CANCELLED"
    '    End If

    '    AirStatus = Stat
    '    Return AirStatus
    'End Function



    'Private Function AirlineReloc(ByVal AirCodeRecloc As String)

    '    Dim A_Reloc As New ArrayList
    '    Dim A_Cnt As Integer
    '    Dim FinReloc As String = ""

    '    Dim I_Segment As String = AirCodeRecloc
    '    Dim W_Split As String() = I_Segment.Split(" ")

    '    For A_Cnt = 0 To W_Split.GetUpperBound(0)

    '        If W_Split(A_Cnt).ToString() <> Nothing Then

    '            If Trim(W_Split(13).ToString()) = "E" Then
    '                FinReloc = W_Split(15).ToString
    '                Exit For
    '            ElseIf Trim(W_Split(14).ToString()) = "E" Then
    '                FinReloc = W_Split(16).ToString
    '                Exit For
    '            ElseIf Trim(W_Split(15).ToString()) = "E" Then
    '                FinReloc = W_Split(17).ToString
    '                Exit For
    '            End If

    '        End If
    '    Next

    '    AirCodeRecloc = FinReloc 'W_Split(W_Split.Count - 1)
    '    Return AirCodeRecloc

    'End Function

    'Private Function getContactInfo() As String

    '    Dim cnt As Integer
    '    Dim objPhone As s1aPNR.PhoneElement
    '    Dim ApSegments As New ArrayList
    '    Dim AllSegments As String = ""
    '    Dim Ctn As Integer = 0
    '    Dim sPhone As String = ""

    '    objPnr.RetrieveCurrent(objSession)

    '    For Each objPhone In objPnr.PhoneElements
    '        cnt = 1 + cnt
    '        ApSegments.Add(objPhone.FreeFlow)
    '    Next

    '    For Ctn = 0 To ApSegments.Count - 1
    '        AllSegments = ApSegments(Ctn)
    '    Next

    '    For rowCnt = 0 To ApSegments.Count - 1

    '    Next

    '    getContactInfo = vbTab & sPhone

    'End Function


    'Private Function getRemark() As String
    '    'Dim cnt As Integer
    '    Dim objPhone As s1aPNR.RemarkElement
    '    Dim strRem As New ArrayList
    '    Dim allRemarks As String = ""
    '    Dim ctr As Integer

    '    objPnr.RetrieveCurrent(objSession)
    '    For Each objPhone In objPnr.RemarkElements
    '        strRem.Add(objPhone.FreeFlow)
    '    Next

    '    'combining of data
    '    For i = 0 To strRem.Count - 1
    '        ctr = ctr + 1
    '        allRemarks = allRemarks + "          " & ctr.ToString() & ". " & strRem(i) & vbCrLf
    '    Next

    '    getRemark = allRemarks

    'End Function

    'Private Sub rtxtResult_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles rtxtResult.MouseUp

    '    If e.Button = Windows.Forms.MouseButtons.Right Then
    '        ContextMenuStrip1.Show(rtxtResult, New Point(e.X, e.Y))
    '    End If

    'End Sub

    'Private Sub chkAll_click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkAll.Click

    '    chkContact.Checked = True
    '    chkItinerary.Checked = True
    '    chkPax.Checked = True
    '    chkRemark.Checked = True
    '    chkTicket.Checked = True

    'End Sub



    Private Sub Btn_PDN_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Btn_PDN.Click

        If Trim(CC_TravllerName.Text) <> Nothing Then
            objResponse = objSession.Send(Trim("PDN/-" & Trim(CC_TravllerName.Text)))
            strErrorCheck = objResponse.GetLineFromBuffer(2)
            strErrorCheckNew = objResponse.GetLineFromBuffer(1)
            strStatus = strErrorCheck.Split(" ")
            strStatusNew = strErrorCheckNew.Split(" ")
            Call Traveller_CreditCheck()
        Else
            CC_TravllerName.Focus()
        End If

    End Sub




    Private Sub Traveller_CreditCheck()

        If Trim(UCase(strStatus(0).ToString)) = "INVALID" Then

            MsgBox("Invalid Entry..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            CC_TravllerName.Text = Nothing
            CC_TravllerName.Focus()
            LstTravellerCredit.Items.Clear()
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatusNew(0).ToString)) = "CHECK" Then

            MsgBox("Check Input..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            CC_TravllerName.Text = Nothing
            CC_TravllerName.Focus()
            LstTravellerCredit.Items.Clear()
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatus(0).ToString)) = "INACTIVITY" Then

            MsgBox("Inactivity Time Out-Sign In!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            CC_TravllerName.Text = Nothing
            CC_TravllerName.Focus()
            LstTravellerCredit.Items.Clear()
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatus(0).ToString)) = "SIGN" Then

            MsgBox("Please Sign-In....", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            CC_TravllerName.Text = Nothing
            CC_TravllerName.Focus()
            LstTravellerCredit.Items.Clear()
            Me.Cursor = Cursors.Default

        ElseIf Trim(UCase(strStatus(0).ToString)) = "TRAVELLER" Then

            MsgBox("Traveller Name Not Found....", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":::TAIS:::")
            objResponse = objSession.Send("IG")
            CC_TravllerName.Text = Nothing
            CC_TravllerName.Focus()
            LstTravellerCredit.Items.Clear()
            Me.Cursor = Cursors.Default

        Else

            strErrorCheck = objResponse.GetLineFromBuffer(1)
            strErrorSim = objResponse.GetLineFromBuffer(3)

            strStatus = strErrorCheck.Split(" ")
            strStatusSim = strErrorSim.Split(" ")


            If Trim(UCase(strStatus(0).ToString)) = "INPUT:" And Trim(UCase(strStatusSim(0).ToString)) = "SIMILAR" Then

                LstTravellerCredit.Items.Clear()

                For i = 6 To objResponse.NumberOfLines - 1
                    LstTravellerCredit.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(2, 26))
                Next

                Me.Cursor = Cursors.Default


                '---Traveller
                RdTrav_MoveDown.Enabled = True
                RdTrav_MoveDown.Checked = False
                RdTrav_MoveUp.Enabled = True
                RdTrav_MoveUp.Checked = False
                RdTrav_PDMoveDown.Enabled = True
                RdTrav_PDMoveDown.Checked = False
                RdTrav_PDMoveUp.Enabled = True
                RdTrav_PDMoveUp.Checked = False
                Trav_PDOk.Enabled = True
                PDN_TravEnter.Enabled = True
                TravPDN_LineNo.Enabled = False

                LstTravellerCredit.Enabled = True


            ElseIf Trim(UCase(strStatus(0).ToString)) = "*T*" Then

                RT_TravTxt.Text = objResponse.Text

                Dim i As Integer
                Dim x As Integer

                Dim strFP As Array

                Dim strFPNo As Array
                Dim strCCNo As Array
                Dim strRMH As Array
                Dim strRMHdata As Array

                x = RT_TravTxt.Lines.Length - 1

                For i = 0 To x - 2


                    strFpName = Trim((RT_TravTxt.Lines(i)).IndexOf("1  A  NM"))   'Pax Name

                    If Trim((RT_TravTxt.Lines(i)).IndexOf("MH")) > 0 Then

                        strRMH = RT_TravTxt.Lines(i).Split("MH")

                        If strRMH(1) <> Nothing Then

                            If strRMH(1).lastindexof("EXPDATE") > 0 Then

                                strRMHdata = strRMH(1).split("EXPDATE")

                                CardExpirationDate.Text = strRMHdata(2).ToString

                                If strRMHdata(0) <> Nothing Then

                                    If strRMHdata(0).lastindexof("CC") > 0 Then
                                        Dim getCC As Array
                                        getCC = strRMHdata(0).split("CC")
                                        CardNumber.Text = getCC(2).ToString.Substring(2, Len(getCC(2)) - 2)
                                        If getCC(2).ToString.Substring(0, 2) = "AX" Then
                                            CreditCardType.Text = "AMERICAN EXPRESS"
                                        ElseIf getCC(2).ToString.Substring(0, 2) = "VI" Then
                                            CreditCardType.Text = "VISA"
                                        End If
                                    Else
                                        CardNumber.Text = strRMHdata(0).ToString.Substring(2, Len(strRMHdata(0)) - 2)
                                    End If


                                End If


                            End If
                        End If

                    End If ' End MH

                    If Trim((RT_TravTxt.Lines(i)).IndexOf("FP")) > 0 And Trim((RT_TravTxt.Lines(i)).IndexOf("(T)FP")) < 0 Then

                        strFP = RT_TravTxt.Lines(i).Split("FP")
                        strFPNo = strFP(1).split("EXP")

                        If strFP(1) <> Nothing Then

                            If strFP(1).lastindexof("EXP") > 0 Then

                                strFPNo = strFP(1).split("EXP")

                                CardExpirationDate.Text = strFPNo(1).ToString.Substring(2, 4)

                                If strFPNo(0) <> Nothing Then

                                    Dim checkStr As String = strFPNo(0)

                                    Dim CCchar As String
                                    CCchar = Nothing

                                    Dim xi As Integer

                                    For xi = 0 To checkStr.Length - 1

                                        If Char.IsNumber(checkStr(xi)) And checkStr(xi) <> "/" Then

                                            CCchar = CCchar & checkStr(xi)
                                            CardNumber.Text = CCchar
                                        End If
                                    Next


                                    If checkStr.LastIndexOf("VI") > 0 Then
                                        CreditCardType.Text = "VISA"
                                    ElseIf checkStr.LastIndexOf("AX") > 0 Then
                                        CreditCardType.Text = "AMERICAN EXPRESS"
                                    ElseIf checkStr.LastIndexOf("CA") > 0 Or checkStr.LastIndexOf("MC") > 0 Then
                                        CreditCardType.Text = "MASTER CARD"
                                    End If


                                End If


                            Else

                                If strFP(1).lastindexof("/") > 0 Then


                                    strCCNo = strFP(1).split("/")

                                    CardExpirationDate.Text = strCCNo(1)

                                    If strCCNo.Length > 1 Then

                                        If Len(strCCNo(0)) > 10 Then

                                            Dim checkStr As String = strCCNo(0)

                                            Dim CCchar As String
                                            CCchar = Nothing

                                            Dim xi As Integer

                                            For xi = 0 To checkStr.Length - 1
                                                If Char.IsNumber(checkStr(xi)) And checkStr(xi) <> "/" Then

                                                    CCchar = CCchar & checkStr(xi)
                                                    CardNumber.Text = CCchar
                                                End If
                                            Next

                                            'CardNumber.Text = strCCNo(0).Substring(strCCNo(0).firstindexof("/") - 4, 4) 'strCCNo(0).Substring(6, Len(strCCNo(0)) - 6)

                                            If checkStr.LastIndexOf("VI") > 0 Then
                                                CreditCardType.Text = "VISA"
                                            ElseIf checkStr.LastIndexOf("AX") > 0 Then
                                                CreditCardType.Text = "AMERICAN EXPRESS"
                                            ElseIf checkStr.LastIndexOf("CA") > 0 Or checkStr.LastIndexOf("MC") > 0 Then
                                                CreditCardType.Text = "MASTER CARD"
                                            End If

                                        End If

                                    End If


                                End If

                            End If

                        End If

                    End If

                    If Trim((RT_TravTxt.Lines(i)).IndexOf("RMH /G-")) > 0 Then

                        strFP = RT_TravTxt.Lines(i).Split("RMH /G-")
                        strFPNo = strFP(1).split("EXP")

                        If strFP(1) <> Nothing Then


                            If strFP(1).lastindexof("EXP") > 0 Then

                                strFPNo = strFP(1).split("EXP")

                                CardExpirationDate.Text = strFPNo(1).ToString.Substring(2, 4)

                                If strFPNo(0) <> Nothing Then

                                    If strFPNo(0).lastindexof("CC") > 0 Then

                                        Dim getCC As Array

                                        getCC = strFPNo(0).split("/G-CC")

                                        CardNumber.Text = getCC(1).Substring(Math.Max(0, getCC(1).Length - 16)) ''Right(getCC(3).ToString, 16) '.Substring(2, Len(getCC(2)) - 2)

                                        If getCC(1).ToString.Substring(4, 2) = "AX" Then
                                            CreditCardType.Text = "AMERICAN EXPRESS"
                                        ElseIf getCC(1).ToString.Substring(4, 2) = "VI" Then
                                            CreditCardType.Text = "VISA"
                                        ElseIf getCC(1).ToString.Substring(4, 2) = "MC" Or getCC(1).ToString.Substring(4, 2) = "CA" Then
                                            CreditCardType.Text = "MASTER CARD"
                                        End If
                                    Else
                                        'CardNumber.Text = strFPNo(0).ToString.Substring(2, Len(strFPNo(0)) - 2)
                                    End If

                                End If


                            ElseIf strFP(1).lastindexof("/") > 0 Then

                                strFPNo = strFP(1).split("/")

                                CardExpirationDate.Text = strFPNo(1).ToString.Substring(0, 4)

                                If strFPNo(0) <> Nothing Then

                                    If strFPNo(0).lastindexof("CC") > 0 Then

                                        Dim getCC As Array

                                        getCC = strFPNo(0).split("/G-CC")

                                        CardNumber.Text = getCC(1).Substring(Math.Max(0, getCC(1).Length - 16)) ''Right(getCC(3).ToString, 16) '.Substring(2, Len(getCC(2)) - 2)

                                        If getCC(1).ToString.Substring(4, 2) = "AX" Then
                                            CreditCardType.Text = "AMERICAN EXPRESS"
                                        ElseIf getCC(1).ToString.Substring(4, 2) = "VI" Then
                                            CreditCardType.Text = "VISA"
                                        ElseIf getCC(1).ToString.Substring(4, 2) = "MC" Or getCC(1).ToString.Substring(4, 2) = "CA" Then
                                            CreditCardType.Text = "MASTER CARD"
                                        End If
                                    Else
                                        ' CardNumber.Text = strFPNo(0).ToString.Substring(2, Len(strFPNo(0)) - 2)
                                    End If
                                End If

                            End If ' End else



                        End If

                    End If


                    'If Trim((RT_TravTxt.Lines(i)).IndexOf("FP")) > 0 Then 'And Trim((RT_TravTxt.Lines(i)).IndexOf("(T)FP")) < 0 Then

                    '    strFP = RT_TravTxt.Lines(i).Split("FP")

                    '    strFPNo = strFP(1).split("EXP")

                    '    If strFP(1) <> Nothing Then


                    '        If strFP(1).lastindexof("EXP") > 0 Then

                    '            strFPNo = strFP(1).split("EXP")

                    '            CardExpirationDate.Text = strFPNo(1).ToString.Substring(2, 4)

                    '            If strFPNo(0) <> Nothing Then

                    '                If strFPNo(0).lastindexof("CC") > 0 Then
                    '                    Dim getCC As Array
                    '                    getCC = strFPNo(0).split("CC")
                    '                    CardNumber.Text = getCC(2).ToString.Substring(2, Len(getCC(2)) - 2)

                    '                    If getCC(2).ToString.Substring(0, 2) = "AX" Then
                    '                        CreditCardType.Text = "AMERICAN EXPRESS"
                    '                    ElseIf getCC(2).ToString.Substring(0, 2) = "VI" Then
                    '                        CreditCardType.Text = "VISA"
                    '                    End If
                    '                Else
                    '                    CardNumber.Text = strFPNo(0).ToString.Substring(2, Len(strFPNo(0)) - 2)
                    '                End If
                    '            End If

                    '        ElseIf strFP(1).lastindexof("/") > 0 Then

                    '            strFPNo = strFP(1).split("/")




                    '            CardExpirationDate.Text = strFPNo(1).ToString.Substring(0, 4)

                    '            If strFPNo(0) <> Nothing Then

                    '                If strFPNo(0).lastindexof("CC") > 0 Then

                    '                    Dim getCC As Array
                    '                    getCC = strFPNo(0).split("CC")

                    '                    CardNumber.Text = getCC(2).ToString.Substring(2, Len(getCC(2)) - 2)
                    '                    If getCC(2).ToString.Substring(0, 2) = "AX" Then
                    '                        CreditCardType.Text = "AMERICAN EXPRESS"
                    '                    ElseIf getCC(2).ToString.Substring(0, 2) = "VI" Then
                    '                        CreditCardType.Text = "VISA"
                    '                    End If
                    '                Else
                    '                    CardNumber.Text = strFPNo(0).ToString.Substring(2, Len(strFPNo(0)) - 2)
                    '                End If
                    '            End If

                    '        Else

                    '            If strFP(1).lastindexof("/") > 0 Then
                    '                CardExpirationDate.Text = strFP(1).Substring(strFP(1).lastindexof("/") - 4, 4)
                    '                strCCNo = strFP(1).split("/")

                    '                If strCCNo.Length > 2 Then

                    '                    If Len(strCCNo(1)) > 10 Then
                    '                        CardNumber.Text = strCCNo(1)
                    '                    Else
                    '                        Dim checkStr As String = strCCNo(0)
                    '                        CardNumber.Text = Mid(checkStr, 8, Len(checkStr))

                    '                        If Mid(checkStr, 6, 2) = "VI" Then
                    '                            CreditCardType.Text = "VISA"
                    '                        ElseIf Mid(checkStr, 6, 2) = "AX" Then
                    '                            CreditCardType.Text = "AMERICAN EXPRESS"
                    '                        End If

                    '                    End If


                    '                    If strCCNo(0).ToString.LastIndexOf("CC") > 0 Then

                    '                        Dim checkStr As String = strCCNo(0)

                    '                        If Mid(checkStr, 4, 2) = "VI" Then
                    '                            CreditCardType.Text = "VISA"
                    '                        ElseIf Mid(checkStr, 4, 2) = "AX" Then
                    '                            CreditCardType.Text = "AMERICAN EXPRESS"
                    '                        End If

                    '                    End If

                    '                End If


                    '            End If

                    '        End If

                    '    End If

                    'End If


                    If strFpName > 0 Then

                        Dim FPName As Integer
                        Dim strFPName As String

                        FPName = RT_TravTxt.Lines(i).LastIndexOf("1")

                        strFPName = (Mid(RT_TravTxt.Lines(i), FPName + 2))
                        CardHolderName.Text = Trim(strFPName)

                    End If

                    If i = x - 2 And RT_TravTxt.Lines(i) <> "END OF DISPLAY" Then
                        objResponse = objSession.Send("MD")
                        RT_TravTxt.Text = objResponse.Text
                        x = RT_TravTxt.Lines.Length - 1
                        i = 0
                    End If


                Next


            End If

            '=============================
            '     For Credit Monitoring
            '=============================


            If Trim(CardHolderName.Text) <> Nothing And
               Trim(CardNumber.Text) <> Nothing And
               Trim(CardExpirationDate.Text) <> Nothing Then

                INS_QUERY = "insert into TAIS_SERVER..CreditMonitoring(UserGDSId, TravellerName, DateRetrieved)" _
                & " values ('" & Trim(txtAgentId.Text) & "', '" & Trim(CardHolderName.Text) & "', '" & Trim(txtDateTime_CC.Text) & "')"

                CNN.Execute(INS_QUERY)

            End If

        End If


    End Sub




    Private Sub LstTravellerCredit_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles LstTravellerCredit.SelectedIndexChanged


        CardHolderName.Text = Nothing
        CardNumber.Text = Nothing
        CardExpirationDate.Text = Nothing
        CreditCardType.Text = Nothing
        RdTrav_MoveDown.Enabled = True
        RdTrav_MoveDown.Checked = False
        RdTrav_MoveUp.Enabled = True
        RdTrav_MoveUp.Checked = False
        RdTrav_PDMoveDown.Enabled = True
        RdTrav_PDMoveDown.Checked = False
        RdTrav_PDMoveUp.Enabled = True
        RdTrav_PDMoveUp.Checked = False
        Trav_PDOk.Enabled = True


        Dim I_Pax As String = LstTravellerCredit.SelectedItem.ToString()
        Dim W_Split As String() = I_Pax.Split(" ")

        If Trim(W_Split(0).ToString()) = "" Or Trim(W_Split(0).ToString()) = Nothing Then
            TravPDN_LineNo.Text = (Trim(W_Split(1).ToString()))
        End If

        If (Trim(W_Split(1).ToString()) = "" Or Trim(W_Split(1).ToString()) = Nothing) And (Trim(W_Split(0).ToString()) = "" Or Trim(W_Split(0).ToString()) = Nothing) Then
            TravPDN_LineNo.Text = (Trim(W_Split(2).ToString()))
        End If

        If Trim(W_Split(0).ToString()) <> "" Then
            TravPDN_LineNo.Text = (Trim(W_Split(0).ToString()))
        End If

    End Sub



    Private Sub PDN_TravEnter_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PDN_TravEnter.Click

        RdTrav_MoveDown.Enabled = False
        RdTrav_MoveDown.Checked = False
        RdTrav_MoveUp.Enabled = False
        RdTrav_MoveUp.Checked = False
        RdTrav_PDMoveDown.Enabled = False
        RdTrav_PDMoveDown.Checked = False
        RdTrav_PDMoveUp.Enabled = False
        RdTrav_PDMoveUp.Checked = False

        Trav_PDOk.Enabled = False

        If Trim(TravPDN_LineNo.Text) <> Nothing Then

            Me.Cursor = Cursors.WaitCursor

            If IsNumeric(Trim(TravPDN_LineNo.Text)) = True Then

                objResponse = objSession.Send("PD" + TravPDN_LineNo.Text)
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                RT_TravTxt.Text = objResponse.Text

                strStatus = strErrorCheck.Split(" ")

                If Trim(UCase(strStatus(0).ToString)) = "ELEMENT" Then
                    MsgBox("Element does not exist..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                    TravPDN_LineNo.Text = ""

                ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
                    MsgBox("Invalid input..Please check your entry..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                    TravPDN_LineNo.Text = ""

                ElseIf Trim(UCase(strStatus(0).ToString)) = "NO" Then
                    MsgBox("No Profile Found....", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                    TravPDN_LineNo.Text = ""
                ElseIf Trim(UCase(strStatus(0).ToString)) = "REQUESTED" Then
                    MsgBox("Requested Display Not Scrollable...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                ElseIf Trim(UCase(strStatus(0).ToString)) = "TRANSACTION" Then
                    MsgBox("Transaction Code Not Supported...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
                    MsgBox("Check Transaction Code...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                    objSession.Send("IG")
                Else

                    RT_TravTxt.Text = objResponse.Text

                    Dim i As Integer
                    Dim x As Integer

                    Dim strFP As Array
                    Dim strFPNo As Array
                    Dim strCCNo As Array

                    x = RT_TravTxt.Lines.Length - 1

                    For i = 0 To x - 2


                        strFpName = Trim((RT_TravTxt.Lines(i)).IndexOf("1  A  NM"))

                        If Trim((RT_TravTxt.Lines(i)).IndexOf("FP")) > 0 And Trim((RT_TravTxt.Lines(i)).IndexOf("(T)FP")) < 0 Then

                            strFP = RT_TravTxt.Lines(i).Split("FP")
                            strFPNo = strFP(1).split("EXP")

                            If strFP(1) <> Nothing Then

                                If strFP(1).lastindexof("EXP") > 0 Then

                                    strFPNo = strFP(1).split("EXP")

                                    CardExpirationDate.Text = strFPNo(1).ToString.Substring(2, 4)

                                    If strFPNo(0) <> Nothing Then

                                        Dim checkStr As String = strFPNo(0)

                                        Dim CCchar As String
                                        CCchar = Nothing

                                        Dim xi As Integer

                                        For xi = 0 To checkStr.Length - 1

                                            If Char.IsNumber(checkStr(xi)) And checkStr(xi) <> "/" Then

                                                CCchar = CCchar & checkStr(xi)
                                                CardNumber.Text = CCchar
                                            End If
                                        Next


                                        If checkStr.LastIndexOf("VI") > 0 Then
                                            CreditCardType.Text = "VISA"
                                        ElseIf checkStr.LastIndexOf("AX") > 0 Then
                                            CreditCardType.Text = "AMERICAN EXPRESS"
                                        ElseIf checkStr.LastIndexOf("CA") > 0 Or checkStr.LastIndexOf("MC") > 0 Then
                                            CreditCardType.Text = "MASTER CARD"
                                        End If


                                    End If


                                Else

                                    If strFP(1).lastindexof("/") > 0 Then


                                        strCCNo = strFP(1).split("/")

                                        CardExpirationDate.Text = strCCNo(1)

                                        If strCCNo.Length > 1 Then

                                            If Len(strCCNo(0)) > 10 Then

                                                Dim checkStr As String = strCCNo(0)

                                                Dim CCchar As String
                                                CCchar = Nothing

                                                Dim xi As Integer

                                                For xi = 0 To checkStr.Length - 1
                                                    If Char.IsNumber(checkStr(xi)) And checkStr(xi) <> "/" Then

                                                        CCchar = CCchar & checkStr(xi)
                                                        CardNumber.Text = CCchar
                                                    End If
                                                Next

                                                'CardNumber.Text = strCCNo(0).Substring(strCCNo(0).firstindexof("/") - 4, 4) 'strCCNo(0).Substring(6, Len(strCCNo(0)) - 6)

                                                If checkStr.LastIndexOf("VI") > 0 Then
                                                    CreditCardType.Text = "VISA"
                                                ElseIf checkStr.LastIndexOf("AX") > 0 Then
                                                    CreditCardType.Text = "AMERICAN EXPRESS"
                                                ElseIf checkStr.LastIndexOf("CA") > 0 Or checkStr.LastIndexOf("MC") > 0 Then
                                                    CreditCardType.Text = "MASTER CARD"
                                                End If

                                            End If

                                        End If


                                    End If

                                End If

                            End If

                        End If

                        If Trim((RT_TravTxt.Lines(i)).IndexOf("RMH /G-")) > 0 Then

                            strFP = RT_TravTxt.Lines(i).Split("RMH /G-")
                            strFPNo = strFP(1).split("EXP")

                            If strFP(1) <> Nothing Then


                                If strFP(1).lastindexof("EXP") > 0 Then

                                    strFPNo = strFP(1).split("EXP")

                                    CardExpirationDate.Text = strFPNo(1).ToString.Substring(2, 4)

                                    If strFPNo(0) <> Nothing Then

                                        If strFPNo(0).lastindexof("CC") > 0 Then

                                            Dim getCC As Array

                                            getCC = strFPNo(0).split("/G-CC")

                                            CardNumber.Text = getCC(1).Substring(Math.Max(0, getCC(1).Length - 16)) ''Right(getCC(3).ToString, 16) '.Substring(2, Len(getCC(2)) - 2)

                                            If getCC(1).ToString.Substring(4, 2) = "AX" Then
                                                CreditCardType.Text = "AMERICAN EXPRESS"
                                            ElseIf getCC(1).ToString.Substring(4, 2) = "VI" Then
                                                CreditCardType.Text = "VISA"
                                            ElseIf getCC(1).ToString.Substring(4, 2) = "MC" Or getCC(1).ToString.Substring(4, 2) = "CA" Then
                                                CreditCardType.Text = "MASTER CARD"
                                            End If
                                        Else
                                            'CardNumber.Text = strFPNo(0).ToString.Substring(2, Len(strFPNo(0)) - 2)
                                        End If

                                    End If


                                ElseIf strFP(1).lastindexof("/") > 0 Then

                                    strFPNo = strFP(1).split("/")

                                    CardExpirationDate.Text = strFPNo(1).ToString.Substring(0, 4)

                                    If strFPNo(0) <> Nothing Then

                                        If strFPNo(0).lastindexof("CC") > 0 Then

                                            Dim getCC As Array

                                            getCC = strFPNo(0).split("/G-CC")

                                            CardNumber.Text = getCC(1).Substring(Math.Max(0, getCC(1).Length - 16)) ''Right(getCC(3).ToString, 16) '.Substring(2, Len(getCC(2)) - 2)

                                            If getCC(1).ToString.Substring(4, 2) = "AX" Then
                                                CreditCardType.Text = "AMERICAN EXPRESS"
                                            ElseIf getCC(1).ToString.Substring(4, 2) = "VI" Then
                                                CreditCardType.Text = "VISA"
                                            ElseIf getCC(1).ToString.Substring(4, 2) = "MC" Or getCC(1).ToString.Substring(4, 2) = "CA" Then
                                                CreditCardType.Text = "MASTER CARD"
                                            End If
                                        Else
                                            ' CardNumber.Text = strFPNo(0).ToString.Substring(2, Len(strFPNo(0)) - 2)
                                        End If
                                    End If

                                End If ' End else



                            End If

                        End If





                        If strFpName > 0 Then

                            Dim FPName As Integer
                            Dim strFPName As String

                            FPName = RT_TravTxt.Lines(i).LastIndexOf("1")

                            strFPName = (Mid(RT_TravTxt.Lines(i), FPName + 2))
                            CardHolderName.Text = Trim(strFPName)

                        End If

                        If i = x - 2 And RT_TravTxt.Lines(i) <> "END OF DISPLAY" Then
                            objResponse = objSession.Send("MD")
                            RT_TravTxt.Text = objResponse.Text
                            x = RT_TravTxt.Lines.Length - 1
                            i = 0
                        End If




                    Next


                End If

                '=============================
                '     For Credit Monitoring
                '=============================


                If Trim(CardHolderName.Text) <> Nothing And
                   Trim(CardNumber.Text) <> Nothing And
                   Trim(CardExpirationDate.Text) <> Nothing Then

                    INS_QUERY = "insert into TAIS_SERVER..CreditMonitoring(UserGDSId, TravellerName, DateRetrieved)" _
                    & " values ('" & Trim(txtAgentId.Text) & "', '" & Trim(CardHolderName.Text) & "', '" & Trim(txtDateTime_CC.Text) & "')"

                    CNN.Execute(INS_QUERY)

                End If

            End If


        End If




    End Sub


    Private Sub Trav_PDOk_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Trav_PDOk.Click

        LstTravellerCredit.Items.Clear()

        If RdTrav_MoveDown.Checked <> False Or RdTrav_MoveUp.Checked <> False Or RdTrav_PDMoveDown.Checked <> False Or RdTrav_PDMoveUp.Checked <> False Then

            If RdTrav_MoveDown.Checked = True Then

                LstTravellerCredit.Items.Clear()
                objResponse = objSession.Send("MD")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    LstTravellerCredit.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(1, 25))
                Next

            End If

            If RdTrav_MoveUp.Checked = True Then

                LstTravellerCredit.Items.Clear()

                objResponse = objSession.Send("MU")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    LstTravellerCredit.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(1, 25))
                Next

            End If

            If RdTrav_PDMoveDown.Checked = True Then

                LstTravellerCredit.Items.Clear()

                objResponse = objSession.Send("PDMD")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    LstTravellerCredit.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(1, 25))
                Next
            End If


            If RdTrav_PDMoveUp.Checked = True Then

                LstTravellerCredit.Items.Clear()

                objResponse = objSession.Send("PDMU")
                strErrorCheck = objResponse.GetLineFromBuffer(2)

                For i = 1 To objResponse.NumberOfLines - 1
                    LstTravellerCredit.Items.Add((objResponse.GetLineFromBuffer(i)).Substring(1, 25))
                Next

            End If

        Else
            MsgBox("Please choose a parameter from the option box..Thanks!", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "::TAIS::")
        End If
    End Sub


    Private Sub CC_TravllerName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles CC_TravllerName.KeyDown

        TravPDN_LineNo.Text = Nothing
        CardNumber.Text = Nothing
        CardExpirationDate.Text = Nothing
        CreditCardType.Text = Nothing
        CardHolderName.Text = Nothing

        RdTrav_MoveDown.Enabled = False
        RdTrav_MoveUp.Enabled = False
        RdTrav_PDMoveDown.Enabled = False
        RdTrav_PDMoveUp.Enabled = False

        PDN_TravEnter.Enabled = False
        Trav_PDOk.Enabled = False
        LstTravellerCredit.Items.Clear()

    End Sub


    Private Sub txtAgentId_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txtAgentId.KeyDown
        Call initCreditAccess()
    End Sub


    Private Sub initCreditAccess()


        LstTravellerCredit.Items.Clear()
        TravPDN_LineNo.Text = Nothing
        CardNumber.Text = Nothing
        CardExpirationDate.Text = Nothing
        CreditCardType.Text = Nothing
        CardHolderName.Text = Nothing
        CC_TravllerName.Text = Nothing

        RdTrav_MoveDown.Enabled = False
        RdTrav_MoveUp.Enabled = False
        RdTrav_PDMoveDown.Enabled = False
        RdTrav_PDMoveUp.Enabled = False

        PDN_TravEnter.Enabled = False
        Trav_PDOk.Enabled = False

    End Sub



    Private Sub pdnLogIn_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles pdnLogIn.Click

        If Trim(txtAgentId.Text) = Nothing Then
            MsgBox(" Please Log-In..", vbCritical + vbOKOnly, " :: TAIS::")
            TabCAPI.SelectedIndex = 8
            txtAgentId.Focus()

        Else

            If Trim(txtAgentId.Text) <> "" Or Trim(txtAgentId.Text) <> Nothing Then

                CHECK_RS3()

                SQL_QUERY = "Select * from TAIS_SERVER..ProfileAgentInfo where InitialSignIn = '" & Trim(txtAgentId.Text) & "'"
                RS3.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS3

                    If Not RS3.EOF Then

                        If Trim(RS3.Fields("CreditCardAccess").Value) = "Allowed" Then

                            objResponse = objSession.Send("JD")
                            strErrorCheck = objResponse.GetLineFromBuffer(4)
                            strErrorCheckNew = objResponse.GetLineFromBuffer(2)

                            Dim r As Integer
                            Dim rIndex As Integer
                            r = Trim(strErrorCheckNew.IndexOf("MNLPH210M"))
                            rIndex = Trim(strErrorCheckNew.IndexOf("MNLPH27FB"))

                            If r > 0 Then
                                ' rIndex = objResponse.GetLineFromBuffer(6).IndexOf("A-IN")
                                If objResponse.GetLineFromBuffer(6).IndexOf("A-IN") > 0 Or objResponse.GetLineFromBuffer(5).IndexOf("A-IN") > 0 Then

                                    'objResponse = objSession.Send("JO*")
                                Else
                                    objResponse = objSession.Send("JUI/O-MNLPH27FB/JI" & Trim(txtAgentId.Text) & "-" & RS3.Fields("GDSSignIn").Value)
                                    If objResponse.GetLineFromBuffer(2).IndexOf("SIGN") > 0 Then

                                        CC_TravllerName.Text = Nothing
                                        CC_TravllerName.Focus()
                                    End If
                                End If

                            End If


                            If objResponse.GetLineFromBuffer(2).IndexOf("MNLPH27FB") > 0 Or objResponse.GetLineFromBuffer(3).IndexOf("MNLPH27FB") > 0 Then

                                If objResponse.GetLineFromBuffer(7).IndexOf("PRD") > 0 Or objResponse.GetLineFromBuffer(6).IndexOf("PRD") > 0 Or objResponse.GetLineFromBuffer(5).IndexOf("PRD") > 0 Then

                                    CC_TravllerName.Text = Nothing
                                    CC_TravllerName.Focus()
                                ElseIf objResponse.GetLineFromBuffer(7).IndexOf("NOT") > 0 Or objResponse.GetLineFromBuffer(6).IndexOf("NOT") > 0 Or objResponse.GetLineFromBuffer(5).IndexOf("NOT") > 0 Then

                                    objResponse = objSession.Send("JI" & Trim(txtAgentId.Text) & "-" & RS3.Fields("GDSSignIn").Value)
                                    If objResponse.GetLineFromBuffer(2).IndexOf("COMPLETE") > 0 Or objResponse.GetLineFromBuffer(1).IndexOf("COMPLETE") > 0 Then

                                        CC_TravllerName.Text = Nothing
                                        CC_TravllerName.Focus()
                                    End If
                                End If
                            End If

                        Else
                            MsgBox("You do not have access to this Module...Please contact administrator...", vbCritical + vbOKOnly, " :: TAIS::")

                        End If
                    Else
                        MsgBox("User ID not found..", , ":::Security Check::")

                        txtAgentId.Text = Nothing
                        txtAgentId.Focus()
                    End If

                End With

            Else
                MsgBox("Agent ID must not be empty..", , ":::Security Check::")

            End If

            RS3.Close()

        End If

    End Sub


    Private Sub PdnLogOut_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PdnLogOut.Click

        objResponse = objSession.Send("JO*")
        objResponse = objSession.Send("JUO")

        LstTravellerCredit.Items.Clear()
        CardExpirationDate.Text = Nothing
        CardHolderName.Text = Nothing
        CardNumber.Text = Nothing
        CreditCardType.Text = Nothing
        CC_TravllerName.Text = Nothing

    End Sub


    Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick
        txtDateTime_CC.Text = DateTime.Now
    End Sub


    Private Sub rty()

        If Trim(txtGlobalCustNo.Text) <> Nothing Then

            Me.Cursor = Cursors.WaitCursor

            objResponse = objSession.Send("RTR/*COD")
            strErrorCheck = objResponse.GetLineFromBuffer(2)

            RichTextBox2.Text = objResponse.Text

            strStatus = strErrorCheck.Split(" ")

            If Trim(UCase(strStatus(0).ToString)) = "ELEMENT" Then
                MsgBox("Element does not exist..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
                txtLineNo.Text = ""
                txtLineNo.Focus()
            ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
                MsgBox("Invalid input..Please check your entry..", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
                txtLineNo.Text = ""
                txtLineNo.Focus()
            ElseIf Trim(UCase(strStatus(0).ToString)) = "NO" Then
                MsgBox("No Element Found....", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
                txtLineNo.Text = ""
                txtLineNo.Focus()
            ElseIf Trim(UCase(strStatus(0).ToString)) = "REQUESTED" Then
                MsgBox("Requested Display Not Scrollable...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
            ElseIf Trim(UCase(strStatus(0).ToString)) = "TRANSACTION" Then
                MsgBox("Transaction Code Not Supported...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
            ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
                MsgBox("Check Transaction Code...", MsgBoxStyle.OkOnly, ":::TAIS:::")
                objSession.Send("IG")
            Else

                '========BL Department=====
                'If Trim(txtAccess.Text) = "1" Then

                Dim i As Integer
                Dim x As Integer

                x = RichTextBox2.Lines.Length - 1

                For i = 0 To x - 2

                    COD1 = Trim((RichTextBox2.Lines(i)).IndexOf("COD1*"))
                    COD2 = Trim((RichTextBox2.Lines(i)).IndexOf("COD2*"))
                    COD3 = Trim((RichTextBox2.Lines(i)).IndexOf("COD3*"))
                    COD4 = Trim((RichTextBox2.Lines(i)).IndexOf("COD4*"))
                    COD5 = Trim((RichTextBox2.Lines(i)).IndexOf("COD5*"))
                    COD6 = Trim((RichTextBox2.Lines(i)).IndexOf("COD6*"))
                    COD7 = Trim((RichTextBox2.Lines(i)).IndexOf("COD7*"))
                    COD8 = Trim((RichTextBox2.Lines(i)).IndexOf("COD8*"))
                    COD9 = Trim((RichTextBox2.Lines(i)).IndexOf("COD9*"))
                    COD10 = Trim((RichTextBox2.Lines(i)).IndexOf("COD10*"))
                    COD11 = Trim((RichTextBox2.Lines(i)).IndexOf("COD11*"))
                    COD12 = Trim((RichTextBox2.Lines(i)).IndexOf("COD12*"))
                    COD13 = Trim((RichTextBox2.Lines(i)).IndexOf("COD13*"))
                    COD14 = Trim((RichTextBox2.Lines(i)).IndexOf("COD14*"))
                    COD15 = Trim((RichTextBox2.Lines(i)).IndexOf("COD15*"))
                    COD16 = Trim((RichTextBox2.Lines(i)).IndexOf("COD16*"))
                    COD17 = Trim((RichTextBox2.Lines(i)).IndexOf("COD17*"))
                    COD18 = Trim((RichTextBox2.Lines(i)).IndexOf("COD18*"))
                    COD19 = Trim((RichTextBox2.Lines(i)).IndexOf("COD19*"))
                    COD20 = Trim((RichTextBox2.Lines(i)).IndexOf("COD20*"))

                    If COD1 > 0 Then
                        Dim C1 As Integer
                        C1 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD1 = (Mid(RichTextBox2.Lines(i), C1 + 2))
                        COD = COD + "COD1"
                    End If

                    If COD2 > 0 Then
                        Dim C2 As Integer
                        C2 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD2 = (Mid(RichTextBox2.Lines(i), C2 + 2))
                        COD = COD + "COD2"
                    End If

                    If COD3 > 0 Then
                        Dim C3 As Integer
                        C3 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD3 = (Mid(RichTextBox2.Lines(i), C3 + 2))
                        COD = COD + "COD3"
                    End If

                    If COD4 > 0 Then
                        Dim C4 As Integer
                        C4 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD4 = (Mid(RichTextBox2.Lines(i), C4 + 2))
                        COD = COD + "COD4"
                    End If

                    If COD5 > 0 Then
                        Dim C5 As Integer
                        C5 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD5 = (Mid(RichTextBox2.Lines(i), C5 + 2))
                        COD = COD + "COD5"
                    End If

                    If COD6 > 0 Then
                        Dim C6 As Integer
                        C6 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD6 = (Mid(RichTextBox2.Lines(i), C6 + 2))
                        COD = COD + "COD6"
                    End If

                    If COD7 > 0 Then
                        Dim C7 As Integer
                        C7 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD7 = (Mid(RichTextBox2.Lines(i), C7 + 2))
                        COD = COD + "COD7"
                    End If

                    If COD8 > 0 Then
                        Dim C8 As Integer
                        C8 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD8 = (Mid(RichTextBox2.Lines(i), C8 + 2))
                        COD = COD + "COD8"
                    End If

                    If COD9 > 0 Then
                        Dim C9 As Integer
                        C9 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD9 = (Mid(RichTextBox2.Lines(i), C9 + 2))
                        COD = COD + "COD9"
                    End If


                    If COD10 > 0 Then
                        Dim C10 As Integer
                        C10 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD10 = (Mid(RichTextBox2.Lines(i), C10 + 2))
                        COD = COD + "COD10"
                    End If


                    If COD11 > 0 Then
                        Dim C11 As Integer
                        C11 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD11 = (Mid(RichTextBox2.Lines(i), C11 + 2))
                        COD = COD + "COD11"
                    End If

                    If COD12 > 0 Then
                        Dim C12 As Integer
                        C12 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD12 = (Mid(RichTextBox2.Lines(i), C12 + 2))
                        COD = COD + "COD12"
                    End If


                    If COD13 > 0 Then
                        Dim C13 As Integer
                        C13 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD13 = (Mid(RichTextBox2.Lines(i), C13 + 2))
                        COD = COD + "COD13"
                    End If

                    If COD14 > 0 Then
                        Dim C14 As Integer
                        C14 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD14 = (Mid(RichTextBox2.Lines(i), C14 + 2))
                        COD = COD + "COD14"
                    End If

                    If COD15 > 0 Then
                        Dim C15 As Integer
                        C15 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD15 = (Mid(RichTextBox2.Lines(i), C15 + 2))
                        COD = COD + "COD15"
                    End If


                    If COD16 > 0 Then
                        Dim C16 As Integer
                        C16 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD16 = (Mid(RichTextBox2.Lines(i), C16 + 2))
                        COD = COD + "COD16"
                    End If


                    If COD17 > 0 Then
                        Dim C17 As Integer
                        C17 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD17 = (Mid(RichTextBox2.Lines(i), C17 + 2))
                        COD = COD + "COD17"
                    End If



                    If COD18 > 0 Then
                        Dim C18 As Integer
                        C18 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD18 = (Mid(RichTextBox2.Lines(i), C18 + 2))
                        COD = COD + "COD18"
                    End If


                    If COD19 > 0 Then
                        Dim C19 As Integer
                        C19 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD19 = (Mid(RichTextBox2.Lines(i), C19 + 2))
                        COD = COD + "COD19"
                    End If


                    If COD20 > 0 Then
                        Dim C20 As Integer
                        C20 = RichTextBox2.Lines(i).LastIndexOf("/")
                        strCOD20 = (Mid(RichTextBox2.Lines(i), C20 + 2))
                        COD = COD + "COD20"
                    End If







                    'If i = x - 2 And RichTextBox2.Lines(i) = "END OF DISPLAY" Then

                    '    objResponse = objSession.Send("PT*")
                    '    strErrorCheck = objResponse.GetLineFromBuffer(1)
                    '    strStatus = strErrorCheck.Split(" ")

                    '    If Trim(UCase(strStatus(0).ToString)) = "INVALID/NOT" Then
                    '        objResponse = objSession.Send("RT")
                    '        Me.Cursor = Cursors.Default
                    '    End If

                    'ElseIf i = x - 2 And RichTextBox2.Lines(i) <> "END OF DISPLAY" Then
                    '    objResponse = objSession.Send("MD")
                    '    RichTextBox2.Text = objResponse.Text
                    '    x = RichTextBox2.Lines.Length - 1
                    '    i = 0
                    'End If

                Next








                '===== Accomodation Reason Code

                CHECK_RSAccom()
                SQL_QUERY = "Select * from BCDMIS..F_AccomodationReasonCD where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSAccom.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSAccom

                    If Not RSAccom.EOF Then


                        If Trim((RSAccom.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSAccom.Fields("Required").Value).ToString()) = "Required" Then
                            txtAirNoReasonCD.BackColor = Color.Yellow
                        End If

                        If Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtAirNoReasonCD.Text = strCOD1
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtAirNoReasonCD.Text = strCOD2
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtAirNoReasonCD.Text = strCOD3
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtAirNoReasonCD.Text = strCOD4
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtAirNoReasonCD.Text = strCOD5
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtAirNoReasonCD.Text = strCOD6
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtAirNoReasonCD.Text = strCOD7
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtAirNoReasonCD.Text = strCOD8
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtAirNoReasonCD.Text = strCOD9
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtAirNoReasonCD.Text = strCOD10
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtAirNoReasonCD.Text = strCOD11
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtAirNoReasonCD.Text = strCOD12
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtAirNoReasonCD.Text = strCOD13
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtAirNoReasonCD.Text = strCOD14
                        ElseIf Trim((RSAccom.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtAirNoReasonCD.Text = strCOD15
                        End If

                        RSAccom.MoveNext()
                    End If
                    RSAccom.Close()
                End With




                '====Approver Field
                CHECK_RSApprver()
                SQL_QUERY = "Select * from BCDMIS..F_Approver where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSApprver.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSApprver
                    If Not RSApprver.EOF Then

                        If Trim((RSApprver.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSApprver.Fields("Required").Value).ToString()) = "Required" Then
                            txtApprover.BackColor = Color.Yellow
                        End If

                        If Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtApprover.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtApprover.Text = strCOD2
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtApprover.Text = strCOD3
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtApprover.Text = strCOD4
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtApprover.Text = strCOD5
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtApprover.Text = strCOD6
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtApprover.Text = strCOD7
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtApprover.Text = strCOD8
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtApprover.Text = strCOD9
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtApprover.Text = strCOD10
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtApprover.Text = strCOD11
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtApprover.Text = strCOD12
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtApprover.Text = strCOD13
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtApprover.Text = strCOD14
                        ElseIf Trim((RSApprver.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtApprover.Text = strCOD15
                        End If

                        RSApprver.MoveNext()

                    End If

                    RSApprver.Close()

                End With



                '====Approvel Code Field

                CHECK_RSApprval()
                SQL_QUERY = "Select * from BCDMIS..F_ApprovalCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSApprval.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSApprval
                    If Not RSApprval.EOF Then


                        If Trim((RSApprval.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSApprval.Fields("Required").Value).ToString()) = "Required" Then
                            txtApproverCode.BackColor = Color.Yellow
                        End If

                        If Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtApproverCode.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtApproverCode.Text = strCOD2
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtApproverCode.Text = strCOD3
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtApproverCode.Text = strCOD4
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtApproverCode.Text = strCOD5
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtApproverCode.Text = strCOD6
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtApproverCode.Text = strCOD7
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtApproverCode.Text = strCOD8
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtApproverCode.Text = strCOD9
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtApproverCode.Text = strCOD10
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtApproverCode.Text = strCOD11
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtApproverCode.Text = strCOD12
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtApproverCode.Text = strCOD13
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtApproverCode.Text = strCOD14
                        ElseIf Trim((RSApprval.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtApproverCode.Text = strCOD15
                        End If

                        RSApprval.MoveNext()

                    End If

                    RSApprval.Close()
                End With





                '====Cost Center Code Field

                CHECK_RSCCGL()
                SQL_QUERY = "Select * from BCDMIS..F_CostCenterCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSCCGL.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSCCGL
                    If Not RSCCGL.EOF Then


                        If Trim((RSCCGL.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSCCGL.Fields("Required").Value).ToString()) = "Required" Then
                            txtCostCenterCode.BackColor = Color.Yellow
                        End If

                        If Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCostCenterCode.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCostCenterCode.Text = strCOD2
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCostCenterCode.Text = strCOD3
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCostCenterCode.Text = strCOD4
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCostCenterCode.Text = strCOD5
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCostCenterCode.Text = strCOD6
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCostCenterCode.Text = strCOD7
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCostCenterCode.Text = strCOD8
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCostCenterCode.Text = strCOD9
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCostCenterCode.Text = strCOD10
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCostCenterCode.Text = strCOD11
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCostCenterCode.Text = strCOD12
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCostCenterCode.Text = strCOD13
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCostCenterCode.Text = strCOD14
                        ElseIf Trim((RSCCGL.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCostCenterCode.Text = strCOD15
                        End If

                        RSCCGL.MoveNext()

                    End If

                    RSCCGL.Close()
                End With



                '====Department Field

                CHECK_RSDeptNo()
                SQL_QUERY = "Select * from BCDMIS..F_DepartmentNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSDeptNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSDeptNo
                    If Not RSDeptNo.EOF Then


                        If Trim((RSDeptNo.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSDeptNo.Fields("Required").Value).ToString()) = "Required" Then
                            txtDeptNo.BackColor = Color.Yellow
                        End If


                        If Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtDeptNo.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtDeptNo.Text = strCOD2
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtDeptNo.Text = strCOD3
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtDeptNo.Text = strCOD4
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtDeptNo.Text = strCOD5
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtDeptNo.Text = strCOD6
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtDeptNo.Text = strCOD7
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtDeptNo.Text = strCOD8
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtDeptNo.Text = strCOD9
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtDeptNo.Text = strCOD10
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtDeptNo.Text = strCOD11
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtDeptNo.Text = strCOD12
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtDeptNo.Text = strCOD13
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtDeptNo.Text = strCOD14
                        ElseIf Trim((RSDeptNo.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtDeptNo.Text = strCOD15
                        End If

                        RSDeptNo.MoveNext()
                    End If

                    RSDeptNo.Close()
                End With



                '====Employee No Field

                CHECK_RSEmpNo()
                SQL_QUERY = "Select * from BCDMIS..F_EmployeeNo where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSEmpNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSEmpNo
                    If Not RSEmpNo.EOF Then


                        If Trim((RSEmpNo.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSEmpNo.Fields("Required").Value).ToString()) = "Required" Then
                            txtEmployeeNo.BackColor = Color.Yellow
                        End If


                        If Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtEmployeeNo.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtEmployeeNo.Text = strCOD2
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtEmployeeNo.Text = strCOD3
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtEmployeeNo.Text = strCOD4
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtEmployeeNo.Text = strCOD5
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtEmployeeNo.Text = strCOD6
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtEmployeeNo.Text = strCOD7
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtEmployeeNo.Text = strCOD8
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtEmployeeNo.Text = strCOD9
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtEmployeeNo.Text = strCOD10
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtEmployeeNo.Text = strCOD11
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtEmployeeNo.Text = strCOD12
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtEmployeeNo.Text = strCOD13
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtEmployeeNo.Text = strCOD14
                        ElseIf Trim((RSEmpNo.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtEmployeeNo.Text = strCOD15
                        End If

                        RSEmpNo.MoveNext()

                    End If
                    RSEmpNo.Close()
                End With






                '====Manager Superior No Field

                CHECK_RSMgr()
                SQL_QUERY = "Select * from BCDMIS..F_MgrSuperior where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSMgr.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSMgr
                    If Not RSMgr.EOF Then


                        If Trim((RSMgr.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSMgr.Fields("Required").Value).ToString()) = "Required" Then
                            txtMgrSuperior.BackColor = Color.Yellow
                        End If

                        If Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtMgrSuperior.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtMgrSuperior.Text = strCOD2
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtMgrSuperior.Text = strCOD3
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtMgrSuperior.Text = strCOD4
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtMgrSuperior.Text = strCOD5
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtMgrSuperior.Text = strCOD6
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtMgrSuperior.Text = strCOD7
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtMgrSuperior.Text = strCOD8
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtMgrSuperior.Text = strCOD9
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtMgrSuperior.Text = strCOD10
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtMgrSuperior.Text = strCOD11
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtMgrSuperior.Text = strCOD12
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtMgrSuperior.Text = strCOD13
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtMgrSuperior.Text = strCOD14
                        ElseIf Trim((RSMgr.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtMgrSuperior.Text = strCOD15
                        End If

                        RSMgr.MoveNext()

                    End If

                    RSMgr.Close()
                End With





                '====Order Reference Field

                CHECK_RSOrdrRef()
                SQL_QUERY = "Select * from BCDMIS..F_OrderReference where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSOrdrRef.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSOrdrRef
                    If Not RSOrdrRef.EOF Then


                        If Trim((RSOrdrRef.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSOrdrRef.Fields("Required").Value).ToString()) = "Required" Then
                            txtOrderRef.BackColor = Color.Yellow
                        End If

                        If Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtOrderRef.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtOrderRef.Text = strCOD2
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtOrderRef.Text = strCOD3
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtOrderRef.Text = strCOD4
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtOrderRef.Text = strCOD5
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtOrderRef.Text = strCOD6
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtOrderRef.Text = strCOD7
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtOrderRef.Text = strCOD8
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtOrderRef.Text = strCOD9
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtOrderRef.Text = strCOD10
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtOrderRef.Text = strCOD11
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtOrderRef.Text = strCOD12
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtOrderRef.Text = strCOD13
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtOrderRef.Text = strCOD14
                        ElseIf Trim((RSOrdrRef.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtOrderRef.Text = strCOD15
                        End If

                        RSOrdrRef.MoveNext()

                    End If
                    RSOrdrRef.Close()
                End With





                '====Project Number Field

                CHECK_RSProjNum()
                SQL_QUERY = "Select * from BCDMIS..F_ProjectNumber where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSProjNum.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSProjNum
                    If Not RSProjNum.EOF Then


                        If Trim((RSProjNum.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSProjNum.Fields("Required").Value).ToString()) = "Required" Then
                            txtProjectNo.BackColor = Color.Yellow
                        End If

                        If Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtProjectNo.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtProjectNo.Text = strCOD2
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtProjectNo.Text = strCOD3
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtProjectNo.Text = strCOD4
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtProjectNo.Text = strCOD5
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtProjectNo.Text = strCOD6
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtProjectNo.Text = strCOD7
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtProjectNo.Text = strCOD8
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtProjectNo.Text = strCOD9
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtProjectNo.Text = strCOD10
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtProjectNo.Text = strCOD11
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtProjectNo.Text = strCOD12
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtProjectNo.Text = strCOD13
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtProjectNo.Text = strCOD14
                        ElseIf Trim((RSProjNum.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtProjectNo.Text = strCOD15
                        End If

                        RSProjNum.MoveNext()
                    End If
                    RSProjNum.Close()
                End With






                '====Reason Trip Field

                CHECK_RSReasnTrip()
                SQL_QUERY = "Select * from BCDMIS..F_ReasonOfTrip where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSReasnTrip.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSReasnTrip
                    If Not RSReasnTrip.EOF Then


                        If Trim((RSReasnTrip.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSReasnTrip.Fields("Required").Value).ToString()) = "Required" Then
                            txtReasonofTrip.BackColor = Color.Yellow
                        End If

                        If Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtReasonofTrip.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtReasonofTrip.Text = strCOD2
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtReasonofTrip.Text = strCOD3
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtReasonofTrip.Text = strCOD4
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtReasonofTrip.Text = strCOD5
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtReasonofTrip.Text = strCOD6
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtReasonofTrip.Text = strCOD7
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtReasonofTrip.Text = strCOD8
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtReasonofTrip.Text = strCOD9
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtReasonofTrip.Text = strCOD10
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtReasonofTrip.Text = strCOD11
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtReasonofTrip.Text = strCOD12
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtReasonofTrip.Text = strCOD13
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtReasonofTrip.Text = strCOD14
                        ElseIf Trim((RSReasnTrip.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtReasonofTrip.Text = strCOD15
                        End If

                        RSReasnTrip.MoveNext()

                    End If
                    RSReasnTrip.Close()
                End With




                '====Traveller Status Field

                CHECK_RSTravStat()
                SQL_QUERY = "Select * from BCDMIS..F_TravellerStatus where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSTravStat.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSTravStat
                    If Not RSTravStat.EOF Then


                        If Trim((RSTravStat.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSTravStat.Fields("Required").Value).ToString()) = "Required" Then
                            txtTravellerStat.BackColor = Color.Yellow
                        End If

                        If Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtTravellerStat.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtTravellerStat.Text = strCOD2
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtTravellerStat.Text = strCOD3
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtTravellerStat.Text = strCOD4
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtTravellerStat.Text = strCOD5
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtTravellerStat.Text = strCOD6
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtTravellerStat.Text = strCOD7
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtTravellerStat.Text = strCOD8
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtTravellerStat.Text = strCOD9
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtTravellerStat.Text = strCOD10
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtTravellerStat.Text = strCOD11
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtTravellerStat.Text = strCOD12
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtTravellerStat.Text = strCOD13
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtTravellerStat.Text = strCOD14
                        ElseIf Trim((RSTravStat.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtTravellerStat.Text = strCOD15
                        End If

                        RSTravStat.MoveNext()

                    End If

                    RSTravStat.Close()
                End With



                '====Client Data 1 Field

                CHECK_RSCSData1()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData1 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSCSData1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSCSData1

                    If Not RSCSData1.EOF Then

                        If Trim((RSCSData1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSCSData1.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData1.BackColor = Color.Yellow
                        End If

                        If Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData1.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData1.Text = strCOD2
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData1.Text = strCOD3
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData1.Text = strCOD4
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData1.Text = strCOD5
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData1.Text = strCOD6
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData1.Text = strCOD7
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData1.Text = strCOD8
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData1.Text = strCOD9
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData1.Text = strCOD10
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData1.Text = strCOD11
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData1.Text = strCOD12
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData1.Text = strCOD13
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData1.Text = strCOD14
                        ElseIf Trim((RSCSData1.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData1.Text = strCOD15
                        End If

                        RSCSData1.MoveNext()

                    End If
                    RSCSData1.Close()
                End With





                '====Client Data 2 Field

                CHECK_RSCSData2()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData2 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSCSData2.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSCSData2
                    If Not RSCSData2.EOF Then


                        If Trim((RSCSData2.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSCSData2.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData2.BackColor = Color.Yellow
                        End If

                        If Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData2.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData2.Text = strCOD2
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData2.Text = strCOD3
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData2.Text = strCOD4
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData2.Text = strCOD5
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData2.Text = strCOD6
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData2.Text = strCOD7
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData2.Text = strCOD8
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData2.Text = strCOD9
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData2.Text = strCOD10
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData2.Text = strCOD11
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData2.Text = strCOD12
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData2.Text = strCOD13
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData2.Text = strCOD14
                        ElseIf Trim((RSCSData2.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData2.Text = strCOD15
                        End If

                        RSCSData2.MoveNext()
                    End If

                    RSCSData2.Close()
                End With




                '====Client Data 3 Field

                CHECK_RSCSData3()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData3 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSCSData3.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSCSData3
                    If Not RSCSData3.EOF Then


                        If Trim((RSCSData3.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSCSData3.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData3.BackColor = Color.Yellow
                        End If

                        If Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData3.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData3.Text = strCOD2
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData3.Text = strCOD3
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData3.Text = strCOD4
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData3.Text = strCOD5
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData3.Text = strCOD6
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData3.Text = strCOD7
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData3.Text = strCOD8
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData3.Text = strCOD9
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData3.Text = strCOD10
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData3.Text = strCOD11
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData3.Text = strCOD12
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData3.Text = strCOD13
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData3.Text = strCOD14
                        ElseIf Trim((RSCSData3.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData3.Text = strCOD15
                        End If

                        RSCSData3.MoveNext()

                    End If
                    RSCSData3.Close()
                End With




                '====Client Data 4 Field

                CHECK_RSCSData4()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData4 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSCSData4.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSCSData4
                    If Not RSCSData4.EOF Then


                        If Trim((RSCSData4.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RSCSData4.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData4.BackColor = Color.Yellow
                        End If

                        If Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData4.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData4.Text = strCOD2
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData4.Text = strCOD3
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData4.Text = strCOD4
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData4.Text = strCOD5
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData4.Text = strCOD6
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData4.Text = strCOD7
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData4.Text = strCOD8
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData4.Text = strCOD9
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData4.Text = strCOD10
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData4.Text = strCOD11
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData4.Text = strCOD12
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData4.Text = strCOD13
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData4.Text = strCOD14
                        ElseIf Trim((RSCSData4.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData4.Text = strCOD15
                        End If

                        RSCSData4.MoveNext()

                    End If

                    RSCSData4.Close()

                End With



                '====Client Data 5 Field

                check_RS_CSData5()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData5 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RS_CSData5.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS_CSData5
                    If Not RS_CSData5.EOF Then


                        If Trim((RS_CSData5.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS_CSData5.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData5.BackColor = Color.Yellow
                        End If

                        If Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData5.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData5.Text = strCOD2
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData5.Text = strCOD3
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData5.Text = strCOD4
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData5.Text = strCOD5
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData5.Text = strCOD6
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData5.Text = strCOD7
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData5.Text = strCOD8
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData5.Text = strCOD9
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData5.Text = strCOD10
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData5.Text = strCOD11
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData5.Text = strCOD12
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData5.Text = strCOD13
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData5.Text = strCOD14
                        ElseIf Trim((RS_CSData5.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData5.Text = strCOD15
                        End If

                        RS_CSData5.MoveNext()

                    End If

                    RS_CSData5.Close()

                End With


                ' CS Data 6


                '====Client Data 6 Field

                check_RS_CSData6()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData6 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RS_CSData6.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS_CSData6
                    If Not RS_CSData6.EOF Then


                        If Trim((RS_CSData6.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS_CSData6.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData6.BackColor = Color.Yellow
                        End If

                        If Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData6.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData6.Text = strCOD2
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData6.Text = strCOD3
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData6.Text = strCOD4
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData6.Text = strCOD5
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData6.Text = strCOD6
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData6.Text = strCOD7
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData6.Text = strCOD8
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData6.Text = strCOD9
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData6.Text = strCOD10
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData6.Text = strCOD11
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData6.Text = strCOD12
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData6.Text = strCOD13
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData6.Text = strCOD14
                        ElseIf Trim((RS_CSData6.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData6.Text = strCOD15
                        End If

                        RS_CSData6.MoveNext()

                    End If

                    RS_CSData6.Close()

                End With




                '====Client Data 7 Field

                check_RS_CSData7()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData7 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RS_CSData7.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS_CSData7
                    If Not RS_CSData7.EOF Then


                        If Trim((RS_CSData7.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS_CSData7.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData7.BackColor = Color.Yellow
                        End If

                        If Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData7.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData7.Text = strCOD2
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData7.Text = strCOD3
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData7.Text = strCOD4
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData7.Text = strCOD5
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData7.Text = strCOD6
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData7.Text = strCOD7
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData7.Text = strCOD8
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData7.Text = strCOD9
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData7.Text = strCOD10
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData7.Text = strCOD11
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData7.Text = strCOD12
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData7.Text = strCOD13
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData7.Text = strCOD14
                        ElseIf Trim((RS_CSData7.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData7.Text = strCOD15
                        End If

                        RS_CSData7.MoveNext()

                    End If

                    RS_CSData7.Close()

                End With







                '====Client Data 8 Field

                check_RS_CSData8()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData8 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RS_CSData8.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS_CSData8
                    If Not RS_CSData8.EOF Then


                        If Trim((RS_CSData8.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS_CSData8.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData8.BackColor = Color.Yellow
                        End If

                        If Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData8.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData8.Text = strCOD2
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData8.Text = strCOD3
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData8.Text = strCOD4
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData8.Text = strCOD5
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData8.Text = strCOD6
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData8.Text = strCOD7
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData8.Text = strCOD8
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData8.Text = strCOD9
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData8.Text = strCOD10
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData8.Text = strCOD11
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData8.Text = strCOD12
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData8.Text = strCOD13
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData8.Text = strCOD14
                        ElseIf Trim((RS_CSData8.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData8.Text = strCOD15
                        End If

                        RS_CSData8.MoveNext()

                    End If

                    RS_CSData8.Close()

                End With



                '====Client Data 12 Field

                check_RS_CSData12()
                SQL_QUERY = "Select * from BCDMIS..F_ClientData12 where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RS_CSData12.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RS_CSData12
                    If Not RS_CSData12.EOF Then


                        If Trim((RS_CSData12.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS_CSData12.Fields("Required").Value).ToString()) = "Required" Then
                            txtCSData12.BackColor = Color.Yellow
                        End If

                        If Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD1" Then
                            txtCSData12.Text = strCOD1  'Field Mapping
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD2" Then
                            txtCSData12.Text = strCOD2
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD3" Then
                            txtCSData12.Text = strCOD3
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD4" Then
                            txtCSData12.Text = strCOD4
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD5" Then
                            txtCSData12.Text = strCOD5
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD6" Then
                            txtCSData12.Text = strCOD6
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD7" Then
                            txtCSData12.Text = strCOD7
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD8" Then
                            txtCSData12.Text = strCOD8
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD9" Then
                            txtCSData12.Text = strCOD9
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD10" Then
                            txtCSData12.Text = strCOD10
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD11" Then
                            txtCSData12.Text = strCOD11
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD12" Then
                            txtCSData12.Text = strCOD12
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD13" Then
                            txtCSData12.Text = strCOD13
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD14" Then
                            txtCSData12.Text = strCOD14
                        ElseIf Trim((RS_CSData12.Fields("CODS").Value).ToString()) = "COD15" Then
                            txtCSData12.Text = strCOD15
                        End If

                        RS_CSData12.MoveNext()

                    End If

                    RS_CSData12.Close()

                End With



            End If

            Me.Cursor = Cursors.Default

            'Else
            '    MsgBox("Invalid input..Please check your entry..", MsgBoxStyle.OkOnly, " TAIS - Traveller Profile?")
            '    Me.Cursor = Cursors.Default
            '    txtLineNo.Text = ""
            '    txtLineNo.Focus()
            'End If

        Else
            MsgBox("Please select Client Name..", MsgBoxStyle.Information + vbOKOnly, ":::TAIS:::")
            cboClientName.Focus()
        End If

    End Sub

    Private Sub TOEG_Trav()


        Me.Cursor = Cursors.WaitCursor

        objResponse = objSession.Send("RTR/TOEG")

        strErrorCheck = objResponse.GetLineFromBuffer(2)

        strStatus = strErrorCheck.Split(" ")

        If Trim(UCase(strStatus(0).ToString)) = "ELEMENT" Then
            MsgBox("Element does not exist..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objSession.Send("IG")
            txtLineNo.Text = ""
            txtLineNo.Focus()
        ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
            MsgBox("Invalid input..Please check your entry..", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objSession.Send("IG")
            txtLineNo.Text = ""
            txtLineNo.Focus()
        ElseIf Trim(UCase(strStatus(0).ToString)) = "NO" Then
            MsgBox("No Element Found....", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objSession.Send("IG")
            txtLineNo.Text = ""
            txtLineNo.Focus()
        ElseIf Trim(UCase(strStatus(0).ToString)) = "REQUESTED" Then
            MsgBox("Requested Display Not Scrollable...", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objSession.Send("IG")
        ElseIf Trim(UCase(strStatus(0).ToString)) = "TRANSACTION" Then
            MsgBox("Transaction Code Not Supported...", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objSession.Send("IG")
        ElseIf Trim(UCase(strStatus(0).ToString)) = "CHECK" Then
            MsgBox("Check Transaction Code...", MsgBoxStyle.OkOnly, ":::TAIS:::")
            objSession.Send("IG")
        Else

            Dim strTOEG() As String
            Dim strCheck() As String

            strCheck = objResponse.GetLineFromBuffer(2).Split(" ")
            strTOEG = objResponse.GetLineFromBuffer(2).Split("-")

            If Trim(UCase(strCheck(0).ToString)) = "NO" Then
                TxtTravEmail.Text = Nothing
                TOEGCheck = 0
            ElseIf strTOEG.Count > 1 Then
                TxtTravEmail.Text = (strTOEG(1).ToString) '.Replace("@", ".AT.")
                TOEGCheck = 1
            End If



        End If



    End Sub


    Private Sub btnRecall_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRecall.Click

        If Trim(txtGlobalCustNo.Text) <> Nothing Then
            Call rty()
            Call TOEG_Trav()
        Else
            MsgBox("Please select Client Name..", MsgBoxStyle.Information + vbOKOnly, ":::TAIS:::")
            TabCAPI.SelectedIndex = 0
            cboClient.Focus()
        End If

    End Sub


    Private Sub cboTicketType_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTicketType.SelectedIndexChanged

        Dim s As String = Trim(cboTicketType.Text)
        Dim a As String() = Split(s, "-")
        txt_eticket.Text = a(0)

    End Sub


    Private Sub cboNetTicket_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboNetTicket.SelectedIndexChanged
        Dim s As String = Trim(cboNetTicket.Text)
        Dim a As String() = Split(s, "-")
        txtNetTicket.Text = a(0)
    End Sub


    'Retain Segment in Abacus
    Private Sub btnRetain_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRetain.Click
        If Trim(txtNoOfPax.Text) <> Nothing Then
            rtxtAbacus.Text = "0OTHYYGK" & txtNoOfPax.Text & "MNL" & Trim(txtDateSegment.Text) + vbCrLf
            AbacusSmartKeys.Text = "0OTHYYGK" & txtNoOfPax.Text & "MNL" & Trim(txtDateSegment.Text) + "^e"
        Else
            MsgBox("Number of pax is empty ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
            TabCAPI.SelectedIndex = 1
            txtNoOfPax.Focus()
        End If
    End Sub

    Private Sub btnConvert_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnConvert.Click
        Call AbacusConvertionEntries()
    End Sub


    Private Sub validateMISfields()


        Dim getAllstr As String = Nothing

        If (txtEmployeeNo.Text) <> Nothing Then

            CHECK_RSEmpNo()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D10' and List ='Y' "
            RSEmpNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSEmpNo

                If Not RSEmpNo.EOF Then

                    CHECK_RSC_RSEmpNo()
                    SQL_QUERY = "Select * from BCDMIS..C_EmployeeNumber where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_RSEmpNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_RSEmpNo
                        If Not RSC_RSEmpNo.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_RSEmpNo.Fields("Code").Value)))
                                RSC_RSEmpNo.MoveNext()
                            Loop While Not RSC_RSEmpNo.EOF
                        End If
                        RSC_RSEmpNo.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtEmployeeNo.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::EMPLOYEE NO::")
                            txtEmployeeNo.Clear()
                            txtEmployeeNo.Focus()

                        End If
                    End If



                End If
                RSEmpNo.Close()
            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D10' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtEmployeeNo.Text.Length) Then

                        Dim EmpLength As Integer
                        EmpLength = RS.Fields("length").Value
                        txtEmployeeNo.Text = Mid(txtEmployeeNo.Text, 1, EmpLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::EMPLOYEE NO::")
                        'txtEmployeeNo.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With

        End If


        If (txtTravellerStat.Text) <> Nothing Then
            CHECK_RSTravStat()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D15' and List ='Y' "
            RSTravStat.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSTravStat

                If Not RSTravStat.EOF Then

                    CHECK_RSC_TravStat()
                    SQL_QUERY = "Select * from BCDMIS..C_TravellerStatus where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_TravStat.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_TravStat
                        If Not RSC_TravStat.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_TravStat.Fields("Code").Value)))
                                RSC_TravStat.MoveNext()
                            Loop While Not RSC_TravStat.EOF
                        End If
                        RSC_TravStat.Close()
                    End With

                    If getAllstr <> Nothing Then

                        If getAllstr.IndexOf(Trim(UCase(txtTravellerStat.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TRAVELLER STATUS::")
                            txtTravellerStat.Clear()
                            txtTravellerStat.Focus()

                        End If
                    End If


                End If
                RSTravStat.Close()
            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D15'and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtTravellerStat.Text.Length) Then

                        Dim TravLength As Integer
                        TravLength = RS.Fields("length").Value
                        txtTravellerStat.Text = Mid(txtTravellerStat.Text, 1, TravLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TRAVELLER STATUS::")
                        'txtTravellerStat.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With
        End If



        '================
        ' Cost Center
        '================

        If (txtCostCenterCode.Text) <> Nothing Then

            CHECK_RSCCGL()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D08' and List ='Y' "
            RSCCGL.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCCGL

                If Not RSCCGL.EOF Then

                    CHECK_RSC_CCGL()
                    SQL_QUERY = "Select * from BCDMIS..C_CostCenterCode where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_CCGL.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_CCGL

                        If Not RSC_CCGL.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_CCGL.Fields("Code").Value)))
                                RSC_CCGL.MoveNext()
                            Loop While Not RSC_CCGL.EOF

                        End If

                        RSC_CCGL.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr <> Nothing Then
                            If getAllstr.IndexOf(Trim(UCase(txtCostCenterCode.Text))) < 0 Then
                                MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::COST CENTER CODE::")
                                txtCostCenterCode.Clear()
                                txtCostCenterCode.Focus()

                            End If
                        End If
                    End If
                End If
                RSCCGL.Close()
            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D08' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtCostCenterCode.Text.Length) Then

                        Dim CostLength As Integer
                        CostLength = RS.Fields("length").Value
                        txtCostCenterCode.Text = Mid(txtCostCenterCode.Text, 1, CostLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::COST CENTER CODE::")
                        'txtCostCenterCode.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With

        End If




        '=====================
        ' Project Number
        '=====================

        If txtProjectNo.Text <> Nothing Then
            CHECK_RSProjNum()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D13' and List ='Y' "
            RSProjNum.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSProjNum

                If Not RSProjNum.EOF Then

                    CHECK_RSC_ProjNum()
                    SQL_QUERY = "Select * from BCDMIS..C_ProjectNumber where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_ProjNum.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_ProjNum

                        If Not RSC_ProjNum.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_ProjNum.Fields("Code").Value)))
                                RSC_ProjNum.MoveNext()
                            Loop While Not RSC_ProjNum.EOF
                        End If

                        RSC_ProjNum.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtProjectNo.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::PROJECT NUMBER::")
                            txtProjectNo.Clear()
                            txtProjectNo.Focus()
                        End If
                    End If

                End If

                RSProjNum.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D13' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtProjectNo.Text.Length) Then
                        Dim ProjLength As Integer
                        ProjLength = RS.Fields("length").Value
                        txtProjectNo.Text = Mid(txtProjectNo.Text, 1, ProjLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::PROJECT NUMBER::")
                        'txtProjectNo.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With
        End If





        '=====================
        ' Department Number
        '=====================

        If txtDeptNo.Text <> Nothing Then

            CHECK_RSDeptNo()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D09' and List ='Y' "
            RSDeptNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSDeptNo

                If Not RSDeptNo.EOF Then

                    CHECK_RSC_DeptNo()
                    SQL_QUERY = "Select * from BCDMIS..C_DepartmentNumber where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_DeptNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_DeptNo
                        If Not RSC_DeptNo.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_DeptNo.Fields("Code").Value)))
                                RSC_DeptNo.MoveNext()
                            Loop While Not RSC_DeptNo.EOF
                        End If

                    End With

                    RSC_DeptNo.Close()

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtDeptNo.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                            txtDeptNo.Clear()
                            txtDeptNo.Focus()
                        End If
                    End If



                End If
                RSDeptNo.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D09' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If (RS.Fields("length").Value) < Trim(txtDeptNo.Text.Length) Then
                        Dim DepLength As Integer
                        DepLength = RS.Fields("length").Value
                        txtDeptNo.Text = Mid(txtDeptNo.Text, 1, DepLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                        'txtDeptNo.Focus()
                    End If

                    RS.MoveNext()

                End If
                RS.Close()
            End With


        End If


        '===========================
        ' Order Reference Number
        '===========================

        If txtOrderRef.Text <> Nothing Then

            CHECK_RSOrdrRef()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D12' and List ='Y' "
            RSOrdrRef.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSOrdrRef

                If Not RSOrdrRef.EOF Then

                    CHECK_RSC_OrdrRef()
                    SQL_QUERY = "Select * from BCDMIS..C_OrderReference where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_OrdrRef.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_OrdrRef
                        If Not RSC_OrdrRef.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_OrdrRef.Fields("Code").Value)))
                                RSC_OrdrRef.MoveNext()
                            Loop While Not RSC_OrdrRef.EOF
                        End If


                        RSC_OrdrRef.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtOrderRef.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE NUMBER::")
                            txtOrderRef.Clear()
                            txtOrderRef.Focus()
                        End If

                    End If

                End If

                RSOrdrRef.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D12' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtOrderRef.Text.Length) Then

                        Dim OrderLength As Integer
                        OrderLength = RS.Fields("length").Value
                        txtOrderRef.Text = Mid(txtOrderRef.Text, 1, OrderLength)

                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE NUMBER::")
                        'txtOrderRef.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With

        End If



        '======================
        ' Approver
        '======================

        If txtApprover.Text <> Nothing Then
            CHECK_RSApprver()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D03' and List ='Y' "
            RSApprver.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSApprver

                If Not RSApprver.EOF Then

                    CHECK_RC_Apprver()
                    SQL_QUERY = "Select * from BCDMIS..C_Approver where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RC_Apprver.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RC_Apprver
                        If Not RC_Apprver.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RC_Apprver.Fields("Code").Value)))
                                RC_Apprver.MoveNext()
                            Loop While Not RC_Apprver.EOF
                        End If

                        RC_Apprver.Close()
                    End With


                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtApprover.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER::")
                            txtApprover.Clear()
                            txtApprover.Focus()
                        End If
                    End If

                End If

                RSApprver.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D03' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtApprover.Text.Length) Then

                        Dim ApprLength As Integer
                        ApprLength = RS.Fields("length").Value
                        txtApprover.Text = Mid(txtApprover.Text, 1, ApprLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER::")
                        'txtApprover.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With

        End If




        '===========================
        ' Approver Code
        '===========================
        If txtApproverCode.Text <> Nothing Then
            CHECK_RC_ApprverCode()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D02' and List ='Y' "
            RC_ApprverCode.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RC_ApprverCode

                If Not RC_ApprverCode.EOF Then

                    CHECK_RC_ApprvalCode()
                    SQL_QUERY = "Select * from BCDMIS..C_ApprovalCode where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RC_ApprvalCode.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RC_ApprvalCode
                        If Not RC_ApprvalCode.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RC_ApprvalCode.Fields("Code").Value)))
                                RC_ApprvalCode.MoveNext()
                            Loop While Not RC_ApprvalCode.EOF
                        End If


                        RC_ApprvalCode.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtApproverCode.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER CODE::")
                            txtApproverCode.Clear()
                            txtApproverCode.Focus()
                        End If
                    End If



                End If
                RC_ApprverCode.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D02' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtApproverCode.Text.Length) Then
                        Dim ApprCodeLength As Integer
                        ApprCodeLength = RS.Fields("length").Value
                        txtApprover.Text = Mid(txtApproverCode.Text, 1, ApprCodeLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER CODE::")
                        'txtApproverCode.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With
        End If




        '=====================
        ' Manager Superior
        '=====================

        If txtMgrSuperior.Text <> Nothing Then

            CHECK_RSMgr()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D11' and List ='Y' "
            RSMgr.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSMgr

                If Not RSMgr.EOF Then

                    CHECK_RSC_Mgr()
                    SQL_QUERY = "Select * from BCDMIS..C_ManagerSuperior where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_Mgr.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_Mgr

                        If Not RSC_Mgr.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_Mgr.Fields("Code").Value)))
                                RSC_Mgr.MoveNext()
                            Loop While Not RSC_Mgr.EOF
                        End If


                        RSC_Mgr.Close()

                    End With


                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtMgrSuperior.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::MANAGER SUPERIOR::")
                            txtMgrSuperior.Clear()
                            txtMgrSuperior.Focus()
                        End If
                    End If


                End If
                RSMgr.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D11' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtMgrSuperior.Text.Length) Then
                        Dim MgrSupLength As Integer
                        MgrSupLength = RS.Fields("length").Value
                        txtMgrSuperior.Text = Mid(txtMgrSuperior.Text, 1, MgrSupLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::MANAGER SUPERIOR::")
                        'txtMgrSuperior.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()

            End With



        End If



        '====================
        ' Reason of Trip
        '====================

        If txtReasonofTrip.Text <> Nothing Then

            CHECK_RSReasnTrip()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D14' and List ='Y' "
            RSReasnTrip.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSReasnTrip

                If Not RSReasnTrip.EOF Then

                    CHECK_RSC_ReasnTrip()

                    SQL_QUERY = "Select * from BCDMIS..C_ReasonOfTrip where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_ReasnTrip.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_ReasnTrip
                        If Not RSC_ReasnTrip.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_ReasnTrip.Fields("Code").Value)))
                                RSC_ReasnTrip.MoveNext()
                            Loop While Not RSC_ReasnTrip.EOF
                        End If


                        RSC_ReasnTrip.Close()
                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtReasonofTrip.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::REASON OF TRIP::")
                            txtReasonofTrip.Clear()
                            txtReasonofTrip.Focus()

                        End If
                    End If
                End If

                RSReasnTrip.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D14' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtReasonofTrip.Text.Length) Then
                        Dim RTripLength As Integer
                        RTripLength = RS.Fields("length").Value
                        txtReasonofTrip.Text = Mid(txtReasonofTrip.Text, 1, RTripLength)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::REASON OF TRIP::")
                        'txtReasonofTrip.Focus()
                    End If
                    RS.MoveNext()

                End If

                RS.Close()

            End With

        End If



        '=======================
        ' Air Accomodation Code
        '=======================

        If txtAirNoReasonCD.Text <> Nothing Then


            CHECK_RSAccom()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D01' and List ='Y' "
            RSAccom.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSAccom

                If Not RSAccom.EOF Then

                    CHECK_RC_Accom()
                    SQL_QUERY = "Select * from BCDMIS..C_AccommodationReasonCode where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RC_Accom.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RC_Accom
                        If Not RC_Accom.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RC_Accom.Fields("Code").Value)))
                                RC_Accom.MoveNext()
                            Loop While Not RC_Accom.EOF
                        End If

                        RC_Accom.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtAirNoReasonCD.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::AIR ACCOMODATION REASON CODE::")
                            txtAirNoReasonCD.Clear()
                            txtAirNoReasonCD.Focus()
                        End If
                    End If
                End If

                RSAccom.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D01' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtAirNoReasonCD.Text.Length) Then
                        Dim AReasonCode As Integer
                        AReasonCode = RS.Fields("length").Value
                        txtAirNoReasonCD.Text = Mid(txtAirNoReasonCD.Text, 1, AReasonCode)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::AIR ACCOMODATION REASON CODE::")
                        'txtAirNoReasonCD.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With


        End If



        '=======================
        ' Client Data 1
        '=======================
        If txtCSData1.Text <> Nothing Then

            CHECK_RSCSData1()

            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D04' and List ='Y' "
            RSCSData1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCSData1

                If Not RSCSData1.EOF Then

                    CHECK_RSC_SData1()
                    SQL_QUERY = "Select * from BCDMIS..C_ClientData1 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_SData1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_SData1
                        If Not RSC_SData1.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData1.Fields("Code").Value)))
                                RSC_SData1.MoveNext()
                            Loop While Not RSC_SData1.EOF
                        End If


                        RSC_SData1.Close()
                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtCSData1.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 1::")
                            txtCSData1.Clear()
                            txtCSData1.Focus()
                        End If
                    End If


                End If
                RSCSData1.Close()
            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D04' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If Trim(RS.Fields("length").Value) < Trim(txtCSData1.Text.Length) Then
                        Dim CSData1Length As Integer
                        CSData1Length = RS.Fields("length").Value
                        txtCSData1.Text = Mid(txtCSData1.Text, 1, CSData1Length)
                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 1::")
                        'txtCSData1.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With

        End If


        '==========================
        ' Client Data 2
        '==========================

        If txtCSData2.Text <> Nothing Then

            CHECK_RSCSData2()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D05' and List ='Y' "
            RSCSData2.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCSData2

                If Not RSCSData2.EOF Then

                    CHECK_RSC_SData2()
                    SQL_QUERY = "Select * from BCDMIS..C_ClientData2 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_SData2.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_SData2
                        If Not RSC_SData2.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData2.Fields("Code").Value)))
                                RSC_SData2.MoveNext()
                            Loop While Not RSC_SData2.EOF
                        End If


                        RSC_SData2.Close()
                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtCSData2.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 2::")
                            txtCSData2.Clear()
                            txtCSData2.Focus()
                        End If
                    End If

                End If

                RSCSData2.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D05' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtCSData2.Text.Length) Then

                        Dim CSData2Length As Integer
                        CSData2Length = RS.Fields("length").Value
                        txtCSData2.Text = Mid(txtCSData2.Text, 1, CSData2Length)

                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 2::")
                        'txtCSData2.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()

            End With


        End If

        '=====================
        ' Client Data 3
        '=====================

        If txtCSData3.Text <> Nothing Then

            CHECK_RSCSData3()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D06' and List ='Y' "
            RSCSData3.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCSData3

                If Not RSCSData3.EOF Then

                    CHECK_RSC_SData3()
                    SQL_QUERY = "Select * from BCDMIS..C_ClientData3 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_SData3.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_SData3
                        If Not RSC_SData3.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData3.Fields("Code").Value)))
                                RSC_SData3.MoveNext()
                            Loop While Not RSC_SData3.EOF
                        End If

                        RSC_SData3.Close()
                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtCSData3.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 3::")
                            txtCSData3.Clear()
                            txtCSData3.Focus()
                        End If
                    End If
                End If
                RSCSData3.Close()

            End With

            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D06' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtCSData3.Text.Length) Then

                        Dim CSData3Length As Integer
                        CSData3Length = RS.Fields("length").Value
                        txtCSData3.Text = Mid(txtCSData3.Text, 1, CSData3Length)

                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 3::")
                        'txtCSData3.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With


        End If


        '======================
        ' Client Data 4
        '======================

        If txtCSData4.Text <> Nothing Then

            CHECK_RSCSData4()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D07' and List ='Y' "
            RSCSData4.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCSData4

                If Not RSCSData4.EOF Then

                    CHECK_RSC_SData4()
                    SQL_QUERY = "Select * from BCDMIS..C_ClientData4 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_SData4.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_SData4
                        If Not RSC_SData4.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData4.Fields("Code").Value)))
                                RSC_SData4.MoveNext()
                            Loop While Not RSC_SData4.EOF
                        End If
                        RSC_SData4.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtCSData4.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 4::")
                            txtCSData4.Clear()
                            txtCSData4.Focus()
                        End If
                    End If

                End If
                RSCSData4.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D07' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtCSData4.Text.Length) Then

                        Dim CSData4Length As Integer
                        CSData4Length = RS.Fields("length").Value
                        txtCSData4.Text = Mid(txtCSData4.Text, 1, CSData4Length)

                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 4::")
                        'txtCSData4.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()

            End With


        End If




        '==========================
        ' CLient Data 5
        '==========================


        If txtCSData5.Text <> Nothing Then

            CHECK_RSCSData5()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D20' and List ='Y' "
            RSCSData5.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCSData5

                If Not RSCSData5.EOF Then

                    CHECK_RSC_SData5()
                    SQL_QUERY = "Select * from BCDMIS..C_ClientData5 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_SData5.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_SData5
                        If Not RSC_SData5.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData5.Fields("Code").Value)))
                                RSC_SData5.MoveNext()
                            Loop While Not RSC_SData5.EOF
                        End If
                        RSC_SData5.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtCSData5.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 5::")
                            txtCSData5.Clear()
                            txtCSData5.Focus()
                        End If
                    End If

                End If
                RSCSData5.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D20' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtCSData5.Text.Length) Then

                        Dim CSData5Length As Integer
                        CSData5Length = RS.Fields("length").Value
                        txtCSData5.Text = Mid(txtCSData5.Text, 1, CSData5Length)

                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 5::")
                        'txtCSData5.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()

            End With




        End If



        '========================
        'Client Data 6
        '========================

        If txtCSData6.Text <> Nothing Then

            CHECK_RSCSData6()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D21' and List ='Y' "
            RSCSData6.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCSData6

                If Not RSCSData6.EOF Then

                    CHECK_RSC_SData6()
                    SQL_QUERY = "Select * from BCDMIS..C_ClientData6 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_SData6.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_SData6
                        If Not RSC_SData6.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData6.Fields("Code").Value)))
                                RSC_SData6.MoveNext()
                            Loop While Not RSC_SData6.EOF
                        End If
                        RSC_SData6.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtCSData6.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 6::")
                            txtCSData6.Clear()
                            txtCSData6.Focus()
                        End If
                    End If

                End If
                RSCSData6.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D21' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtCSData6.Text.Length) Then


                        Dim CSData6Length As Integer
                        CSData6Length = RS.Fields("length").Value
                        txtCSData6.Text = Mid(txtCSData6.Text, 1, CSData6Length)

                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 6::")
                        'txtCSData6.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With

        End If


        '====================
        ' CLient Data 7
        '====================

        If txtCSData7.Text <> Nothing Then

            CHECK_RSCSData7()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D22' and List ='Y' "
            RSCSData7.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCSData7

                If Not RSCSData7.EOF Then

                    CHECK_RSC_SData7()
                    SQL_QUERY = "Select * from BCDMIS..C_ClientData7 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_SData7.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_SData7
                        If Not RSC_SData7.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData7.Fields("Code").Value)))
                                RSC_SData7.MoveNext()
                            Loop While Not RSC_SData7.EOF
                        End If
                        RSC_SData7.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtCSData7.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 7::")
                            txtCSData7.Clear()
                            txtCSData7.Focus()
                        End If
                    End If

                End If
                RSCSData7.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D22' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtCSData7.Text.Length) Then

                        Dim CSData7Length As Integer
                        CSData7Length = RS.Fields("length").Value
                        txtCSData7.Text = Mid(txtCSData7.Text, 1, CSData7Length)

                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 7::")
                        'txtCSData7.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With


        End If


        '==============
        ' Client Data 8
        '==============

        If txtCSData8.Text <> Nothing Then

            CHECK_RSCSData8()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D23' and List ='Y' "
            RSCSData8.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RSCSData8

                If Not RSCSData8.EOF Then

                    CHECK_RSC_SData8()
                    SQL_QUERY = "Select * from BCDMIS..C_ClientData8 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                    RSC_SData8.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                    With RSC_SData8
                        If Not RSC_SData8.EOF Then
                            Do
                                getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData8.Fields("Code").Value)))
                                RSC_SData8.MoveNext()
                            Loop While Not RSC_SData8.EOF
                        End If
                        RSC_SData8.Close()

                    End With

                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(UCase(Trim(txtCSData8.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 8::")
                            txtCSData8.Clear()
                            txtCSData8.Focus()
                        End If
                    End If

                End If
                RSCSData8.Close()

            End With


            '=============
            '    If "N"
            '=============
            CHECK_RS()
            SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D23' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS
                If Not RS.EOF Then
                    If RS.Fields("length").Value < Trim(txtCSData8.Text.Length) Then

                        Dim CSData8Length As Integer
                        CSData8Length = RS.Fields("length").Value
                        txtCSData8.Text = Mid(txtCSData8.Text, 1, CSData8Length)

                        'MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 8::")
                        'txtCSData8.Focus()
                    End If
                    RS.MoveNext()
                End If
                RS.Close()
            End With

        End If





    End Sub



    '=============================
    ' EMPLOYEE NUMBER
    '=============================

    Private Sub txtEmployeeNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtEmployeeNo.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D10' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtEmployeeNo.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtEmployeeNo.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::EMPLOYEE NO::")
                            txtEmployeeNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtEmployeeNo.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtEmployeeNo.SelectionStart = txtEmployeeNo.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtEmployeeNo.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtEmployeeNo.Text), "^([\d]|[\s])+$") Then
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::EMPLOYEE NO::")
                            txtEmployeeNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtEmployeeNo.Text, "[^\d]", ""))
                            txtEmployeeNo.SelectionStart = txtEmployeeNo.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtEmployeeNo.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtEmployeeNo.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::EMPLOYEE NO::")
                            txtEmployeeNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtEmployeeNo.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtEmployeeNo.SelectionStart = txtEmployeeNo.TextLength
                            Exit Sub
                        End If
                    End If
                End If


            End If

        End With

        RS1.Close()


    End Sub




    Private Sub txtEmployeeNo_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtEmployeeNo.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSEmpNo()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D10' and List ='Y' "
        RSEmpNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSEmpNo

            If Not RSEmpNo.EOF Then

                CHECK_RSC_RSEmpNo()
                SQL_QUERY = "Select * from BCDMIS..C_EmployeeNumber where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_RSEmpNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_RSEmpNo
                    If Not RSC_RSEmpNo.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_RSEmpNo.Fields("Code").Value)))
                            RSC_RSEmpNo.MoveNext()
                        Loop While Not RSC_RSEmpNo.EOF
                    End If
                    RSC_RSEmpNo.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtEmployeeNo.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::EMPLOYEE NO::")
                        txtEmployeeNo.Clear()
                        txtEmployeeNo.Focus()

                    End If
                End If



            End If
            RSEmpNo.Close()
        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D10' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtEmployeeNo.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::EMPLOYEE NO::")
                    txtEmployeeNo.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub



    '==============================
    '=====Traveller Status
    '==============================

    Private Sub txtTravellerStat_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTravellerStat.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D15' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtTravellerStat.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtTravellerStat.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TRAVELLER STATUS::")
                            txtTravellerStat.Text = (System.Text.RegularExpressions.Regex.Replace(txtTravellerStat.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtTravellerStat.SelectionStart = txtTravellerStat.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtTravellerStat.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtTravellerStat.Text), "^([\d]|[\s])+$") Then
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TRAVELLER STATUS::")
                            txtTravellerStat.Text = (System.Text.RegularExpressions.Regex.Replace(txtTravellerStat.Text, "[^\d]", ""))
                            txtTravellerStat.SelectionStart = txtTravellerStat.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtTravellerStat.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtTravellerStat.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TRAVELLER STATUS::")
                            txtTravellerStat.Text = (System.Text.RegularExpressions.Regex.Replace(txtTravellerStat.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtTravellerStat.SelectionStart = txtTravellerStat.TextLength
                            Exit Sub
                        End If

                    End If
                End If


            End If
            RS1.Close()
        End With


    End Sub



    '==============================
    '=====Traveller Status
    '==============================

    Private Sub txtTravellerStat_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtTravellerStat.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSTravStat()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D15' and List ='Y' "
        RSTravStat.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSTravStat

            If Not RSTravStat.EOF Then

                CHECK_RSC_TravStat()
                SQL_QUERY = "Select * from BCDMIS..C_TravellerStatus where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_TravStat.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_TravStat
                    If Not RSC_TravStat.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_TravStat.Fields("Code").Value)))
                            RSC_TravStat.MoveNext()
                        Loop While Not RSC_TravStat.EOF
                    End If
                    RSC_TravStat.Close()
                End With

                If getAllstr <> Nothing Then

                    If getAllstr.IndexOf(Trim(UCase(txtTravellerStat.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TRAVELLER STATUS::")
                        txtTravellerStat.Clear()
                        txtTravellerStat.Focus()

                    End If
                End If


            End If
            RSTravStat.Close()
        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D15'and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtTravellerStat.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TRAVELLER STATUS::")
                    txtTravellerStat.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub




    '==============================
    '=====Cost Center Code
    '==============================

    Private Sub txtCostCenterCode_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCostCenterCode.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D08' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCostCenterCode.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCostCenterCode.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::COST CENTER CODE::")
                            txtCostCenterCode.Text = (System.Text.RegularExpressions.Regex.Replace(txtCostCenterCode.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCostCenterCode.SelectionStart = txtCostCenterCode.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCostCenterCode.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCostCenterCode.Text), "^([\d]|[\s])+$") Then
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::COST CENTER CODE::")
                            txtCostCenterCode.Text = (System.Text.RegularExpressions.Regex.Replace(txtCostCenterCode.Text, "[^\d]", ""))
                            txtCostCenterCode.SelectionStart = txtCostCenterCode.TextLength
                            Exit Sub

                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCostCenterCode.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCostCenterCode.Text), "^[a-zA-Z-./,\s@]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::COST CENTER CODE::")
                            txtCostCenterCode.Text = (System.Text.RegularExpressions.Regex.Replace(txtCostCenterCode.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCostCenterCode.SelectionStart = txtCostCenterCode.TextLength
                            Exit Sub
                        End If
                    End If
                End If


            End If
            RS1.Close()
        End With



    End Sub

    '==============================
    '=====Cost Center Code
    '==============================

    Private Sub txtCostCenterCode_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCostCenterCode.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCCGL()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D08' and List ='Y' "
        RSCCGL.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCCGL

            If Not RSCCGL.EOF Then

                CHECK_RSC_CCGL()
                SQL_QUERY = "Select * from BCDMIS..C_CostCenterCode where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_CCGL.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_CCGL

                    If Not RSC_CCGL.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_CCGL.Fields("Code").Value)))
                            RSC_CCGL.MoveNext()
                        Loop While Not RSC_CCGL.EOF

                    End If

                    RSC_CCGL.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr <> Nothing Then
                        If getAllstr.IndexOf(Trim(UCase(txtCostCenterCode.Text))) < 0 Then
                            MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::COST CENTER CODE::")
                            txtCostCenterCode.Clear()
                            txtCostCenterCode.Focus()

                        End If
                    End If
                End If
            End If
            RSCCGL.Close()
        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D08' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCostCenterCode.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::COST CENTER CODE::")
                    txtCostCenterCode.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub




    '========================
    '=====Project Number
    '========================

    Private Sub txtProjectNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtProjectNo.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D13' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtProjectNo.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtProjectNo.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::PROJECT NUMBER::")
                            txtProjectNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtProjectNo.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtProjectNo.SelectionStart = txtProjectNo.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtProjectNo.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtProjectNo.Text), "^([\d]|[\s])+$") Then
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::PROJECT NUMBER::")
                            txtProjectNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtProjectNo.Text, "[^\d]", ""))
                            txtProjectNo.SelectionStart = txtProjectNo.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtProjectNo.Text) <> Nothing Then

                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtProjectNo.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::PROJECT NUMBER::")
                            txtProjectNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtProjectNo.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtProjectNo.SelectionStart = txtProjectNo.TextLength
                            Exit Sub
                        End If
                    End If
                End If


            End If

            RS1.Close()


        End With


    End Sub



    '==============================
    '=====Project Number
    '==============================

    Private Sub txtProjectNo_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtProjectNo.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSProjNum()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D13' and List ='Y' "
        RSProjNum.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSProjNum

            If Not RSProjNum.EOF Then

                CHECK_RSC_ProjNum()
                SQL_QUERY = "Select * from BCDMIS..C_ProjectNumber where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_ProjNum.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_ProjNum

                    If Not RSC_ProjNum.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_ProjNum.Fields("Code").Value)))
                            RSC_ProjNum.MoveNext()
                        Loop While Not RSC_ProjNum.EOF
                    End If

                    RSC_ProjNum.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(Trim(UCase(txtProjectNo.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::PROJECT NUMBER::")
                        txtProjectNo.Clear()
                        txtProjectNo.Focus()
                    End If
                End If

            End If

            RSProjNum.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D13' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtProjectNo.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::PROJECT NUMBER::")
                    txtProjectNo.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub




    '=======================
    ' Department Number
    '=======================

    Private Sub txtDeptNo_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtDeptNo.TextChanged


        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D09' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtDeptNo.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtDeptNo.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                            txtDeptNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtDeptNo.Text, "[^a-zA-Z0-9@\s]", ""))
                            txtDeptNo.SelectionStart = txtDeptNo.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtDeptNo.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtDeptNo.Text), "^[0-9.]+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                            txtDeptNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtDeptNo.Text, "[^\d]", ""))
                            txtDeptNo.SelectionStart = txtDeptNo.TextLength
                            Exit Sub

                        End If


                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtDeptNo.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtDeptNo.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                            txtDeptNo.Text = (System.Text.RegularExpressions.Regex.Replace(txtDeptNo.Text, "[^a-zA-Z-/,\s]", ""))
                            txtDeptNo.SelectionStart = txtDeptNo.TextLength
                            Exit Sub
                        End If
                    End If
                End If


            End If
            RS1.Close()

        End With


    End Sub



    '==============================
    '=====Dept Number
    '==============================

    Private Sub txtDeptNo_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtDeptNo.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSDeptNo()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D09' and List ='Y' "
        RSDeptNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSDeptNo

            If Not RSDeptNo.EOF Then

                CHECK_RSC_DeptNo()
                SQL_QUERY = "Select * from BCDMIS..C_DepartmentNumber where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_DeptNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_DeptNo
                    If Not RSC_DeptNo.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_DeptNo.Fields("Code").Value)))
                            RSC_DeptNo.MoveNext()
                        Loop While Not RSC_DeptNo.EOF
                    End If

                End With

                RSC_DeptNo.Close()

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtDeptNo.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                        txtDeptNo.Clear()
                        txtDeptNo.Focus()
                    End If
                End If



            End If
            RSDeptNo.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D09' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If (RS.Fields("length").Value) < (txtDeptNo.Text.Length) Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                    txtDeptNo.Focus()
                End If

                RS.MoveNext()

            End If

        End With

        RS.Close()

    End Sub



    '==============================
    '=====Dept Number
    '==============================

    Private Sub txtDeptNo_leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtDeptNo.Leave

        Dim getAllstr As String = Nothing

        CHECK_RSDeptNo()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D09' and List ='Y' "
        RSDeptNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSDeptNo

            If Not RSDeptNo.EOF Then

                CHECK_RSC_DeptNo()
                SQL_QUERY = "Select * from BCDMIS..C_DepartmentNumber where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_DeptNo.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_DeptNo
                    If Not RSC_DeptNo.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_DeptNo.Fields("Code").Value)))
                            RSC_DeptNo.MoveNext()
                        Loop While Not RSC_DeptNo.EOF
                    End If

                End With

                RSC_DeptNo.Close()

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtDeptNo.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                        txtDeptNo.Clear()
                        txtDeptNo.Focus()
                    End If
                End If



            End If
            RSDeptNo.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D09' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If (RS.Fields("length").Value) < (txtDeptNo.Text.Length) Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::DEPARTMENT NUMBER::")
                    txtDeptNo.Focus()
                End If

                RS.MoveNext()

            End If

        End With

        RS.Close()

    End Sub








    '======================
    ' Order Reference
    '======================
    Private Sub txtOrderRef_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtOrderRef.TextChanged


        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D12' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtOrderRef.Text) <> Nothing Then

                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtOrderRef.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE::")
                            txtOrderRef.Text = (System.Text.RegularExpressions.Regex.Replace(txtOrderRef.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtOrderRef.SelectionStart = txtOrderRef.TextLength
                            Exit Sub
                        End If

                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtOrderRef.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtOrderRef.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE NO::")
                            txtOrderRef.Text = (System.Text.RegularExpressions.Regex.Replace(txtOrderRef.Text, "[^\d]", ""))
                            txtOrderRef.SelectionStart = txtOrderRef.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtOrderRef.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtOrderRef.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE NO::")
                            txtOrderRef.Text = (System.Text.RegularExpressions.Regex.Replace(txtOrderRef.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtOrderRef.SelectionStart = txtOrderRef.TextLength
                            Exit Sub
                        End If

                    End If
                End If


            End If
            RS1.Close()

        End With

    End Sub


    Private Sub txtOrderRef_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtOrderRef.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSOrdrRef()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D12' and List ='Y' "
        RSOrdrRef.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSOrdrRef

            If Not RSOrdrRef.EOF Then

                CHECK_RSC_OrdrRef()
                SQL_QUERY = "Select * from BCDMIS..C_OrderReference where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_OrdrRef.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_OrdrRef
                    If Not RSC_OrdrRef.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_OrdrRef.Fields("Code").Value)))
                            RSC_OrdrRef.MoveNext()
                        Loop While Not RSC_OrdrRef.EOF
                    End If


                    RSC_OrdrRef.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtOrderRef.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE NUMBER::")
                        txtOrderRef.Clear()
                        txtOrderRef.Focus()
                    End If

                End If

            End If

            RSOrdrRef.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D12' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtOrderRef.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE NUMBER::")
                    txtOrderRef.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub



    'Private Sub txtOrderRef_leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtOrderRef.Leave

    '    Dim getAllstr As String = Nothing

    '    CHECK_RSOrdrRef()
    '    SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D12' and List ='Y' "
    '    RSOrdrRef.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    '    With RSOrdrRef

    '        If Not RSOrdrRef.EOF Then

    '            CHECK_RSC_OrdrRef()
    '            SQL_QUERY = "Select * from BCDMIS..C_OrderReference where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
    '            RSC_OrdrRef.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    '            With RSC_OrdrRef
    '                If Not RSC_OrdrRef.EOF Then
    '                    Do
    '                        getAllstr = Trim(getAllstr + Trim(UCase(RSC_OrdrRef.Fields("Code").Value)))
    '                        RSC_OrdrRef.MoveNext()
    '                    Loop While Not RSC_OrdrRef.EOF
    '                End If


    '                RSC_OrdrRef.Close()

    '            End With

    '            If getAllstr <> Nothing Then
    '                If getAllstr.IndexOf(UCase(Trim(txtOrderRef.Text))) < 0 Then
    '                    MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE NUMBER::")
    '                    txtOrderRef.Clear()
    '                    txtOrderRef.Focus()
    '                End If

    '            End If

    '        End If

    '        RSOrdrRef.Close()

    '    End With


    '    '=============
    '    '    If "N"
    '    '=============
    '    CHECK_RS()
    '    SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D12' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
    '    RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    '    With RS
    '        If Not RS.EOF Then
    '            If RS.Fields("length").Value < txtOrderRef.Text.Length Then
    '                MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::ORDER REFERENCE NUMBER::")
    '                txtOrderRef.Focus()
    '            End If
    '            RS.MoveNext()
    '        End If

    '    End With

    '    RS.Close()

    'End Sub




    '===================

    '===================

    Private Sub txtApprover_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtApprover.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D03' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtApprover.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtApprover.Text), "^[a-zA-Z0-9./,@\s-]+$") Then '/^[a-zA-Z0-9-_]+$/   '"^[a-zA-Z0-9./,@\s]+$"
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER::")
                            txtApprover.Text = (System.Text.RegularExpressions.Regex.Replace(txtApprover.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtApprover.SelectionStart = txtApprover.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtApprover.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtApprover.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER::")
                            txtApprover.Text = (System.Text.RegularExpressions.Regex.Replace(txtApprover.Text, "[^\d]", ""))
                            txtApprover.SelectionStart = txtApprover.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtApprover.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtApprover.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER::")
                            txtApprover.Text = (System.Text.RegularExpressions.Regex.Replace(txtApprover.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtApprover.SelectionStart = txtApprover.TextLength
                            Exit Sub
                        End If
                    End If
                End If

            End If
            RS1.Close()

        End With


    End Sub



    Private Sub txtApprover_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtApprover.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSApprver()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D03' and List ='Y' "
        RSApprver.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSApprver

            If Not RSApprver.EOF Then

                CHECK_RC_Apprver()
                SQL_QUERY = "Select * from BCDMIS..C_Approver where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RC_Apprver.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RC_Apprver
                    If Not RC_Apprver.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RC_Apprver.Fields("Code").Value)))
                            RC_Apprver.MoveNext()
                        Loop While Not RC_Apprver.EOF
                    End If

                    RC_Apprver.Close()
                End With


                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtApprover.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER::")
                        txtApprover.Clear()
                        txtApprover.Focus()
                    End If
                End If

            End If

            RSApprver.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D03' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < (txtApprover.Text.Length) Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER::")
                    txtApprover.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub



    '=========================
    'Approver Code
    '=========================

    Private Sub txtApproverCode_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtApproverCode.TextChanged


        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D02' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtApproverCode.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtApproverCode.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER CODE::")
                            txtApproverCode.Text = (System.Text.RegularExpressions.Regex.Replace(txtApproverCode.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtApproverCode.SelectionStart = txtApproverCode.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtApproverCode.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtApproverCode.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER CODE::")
                            txtApproverCode.Text = (System.Text.RegularExpressions.Regex.Replace(txtApproverCode.Text, "[^\d]", ""))
                            txtApproverCode.SelectionStart = txtApproverCode.TextLength
                            Exit Sub
                        End If

                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtApproverCode.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtApproverCode.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER CODE::")
                            txtApproverCode.Text = (System.Text.RegularExpressions.Regex.Replace(txtApproverCode.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtApproverCode.SelectionStart = txtApproverCode.TextLength
                            Exit Sub
                        End If

                    End If
                End If


            End If
            RS1.Close()

        End With


    End Sub





    Private Sub txtApproverCode_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtApproverCode.Validated

        Dim getAllstr As String = Nothing

        CHECK_RC_ApprverCode()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D02' and List ='Y' "
        RC_ApprverCode.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RC_ApprverCode

            If Not RC_ApprverCode.EOF Then

                CHECK_RC_ApprvalCode()
                SQL_QUERY = "Select * from BCDMIS..C_ApprovalCode where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RC_ApprvalCode.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RC_ApprvalCode
                    If Not RC_ApprvalCode.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RC_ApprvalCode.Fields("Code").Value)))
                            RC_ApprvalCode.MoveNext()
                        Loop While Not RC_ApprvalCode.EOF
                    End If


                    RC_ApprvalCode.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(Trim(UCase(txtApproverCode.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER CODE::")
                        txtApproverCode.Clear()
                        txtApproverCode.Focus()
                    End If
                End If



            End If
            RC_ApprverCode.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D02' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtApproverCode.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::APPROVER CODE::")
                    txtApproverCode.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub





    '============================
    ' Manager Superior
    '============================

    Private Sub txtMgrSuperior_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtMgrSuperior.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D11' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtMgrSuperior.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtMgrSuperior.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::MANAGER SUPERIOR::")
                            txtMgrSuperior.Text = (System.Text.RegularExpressions.Regex.Replace(txtMgrSuperior.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtMgrSuperior.SelectionStart = txtMgrSuperior.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtMgrSuperior.Text) <> Nothing Then

                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtMgrSuperior.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::MANAGER SUPERIOR::")
                            txtMgrSuperior.Text = (System.Text.RegularExpressions.Regex.Replace(txtMgrSuperior.Text, "[^\d]", ""))
                            txtMgrSuperior.SelectionStart = txtMgrSuperior.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtMgrSuperior.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtMgrSuperior.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::MANAGER SUPERIOR::")
                            txtMgrSuperior.Text = (System.Text.RegularExpressions.Regex.Replace(txtMgrSuperior.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtMgrSuperior.SelectionStart = txtMgrSuperior.TextLength
                            Exit Sub
                        End If
                    End If
                End If


            End If
            RS1.Close()

        End With


    End Sub



    Private Sub txtMgrSuperior_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtMgrSuperior.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSMgr()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D11' and List ='Y' "
        RSMgr.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSMgr

            If Not RSMgr.EOF Then

                CHECK_RSC_Mgr()
                SQL_QUERY = "Select * from BCDMIS..C_ManagerSuperior where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_Mgr.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_Mgr

                    If Not RSC_Mgr.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_Mgr.Fields("Code").Value)))
                            RSC_Mgr.MoveNext()
                        Loop While Not RSC_Mgr.EOF
                    End If


                    RSC_Mgr.Close()

                End With


                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(Trim(UCase(txtMgrSuperior.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::MANAGER SUPERIOR::")
                        txtMgrSuperior.Clear()
                        txtMgrSuperior.Focus()
                    End If
                End If


            End If
            RSMgr.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D11' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtMgrSuperior.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::MANAGER SUPERIOR::")
                    txtMgrSuperior.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub





    '=============================
    'Reason of Trip
    '=============================

    Private Sub txtReasonofTrip_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtReasonofTrip.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D14' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtReasonofTrip.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtReasonofTrip.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::REASON OF TRIP::")
                            txtReasonofTrip.Text = (System.Text.RegularExpressions.Regex.Replace(txtReasonofTrip.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtReasonofTrip.SelectionStart = txtReasonofTrip.TextLength
                            Exit Sub
                        End If

                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtReasonofTrip.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtReasonofTrip.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::REASON OF TRIP::")
                            txtReasonofTrip.Text = (System.Text.RegularExpressions.Regex.Replace(txtReasonofTrip.Text, "[^\d]", ""))
                            txtReasonofTrip.SelectionStart = txtReasonofTrip.TextLength
                            Exit Sub

                        End If

                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtReasonofTrip.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtReasonofTrip.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::REASON OF TRIP::")
                            txtReasonofTrip.Text = (System.Text.RegularExpressions.Regex.Replace(txtReasonofTrip.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtReasonofTrip.SelectionStart = txtReasonofTrip.TextLength
                            Exit Sub
                        End If
                    End If
                End If


            End If
            RS1.Close()

        End With


    End Sub




    Private Sub txtReasonoftrip_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtReasonofTrip.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSReasnTrip()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D14' and List ='Y' "
        RSReasnTrip.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSReasnTrip

            If Not RSReasnTrip.EOF Then

                CHECK_RSC_ReasnTrip()

                SQL_QUERY = "Select * from BCDMIS..C_ReasonOfTrip where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_ReasnTrip.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_ReasnTrip
                    If Not RSC_ReasnTrip.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_ReasnTrip.Fields("Code").Value)))
                            RSC_ReasnTrip.MoveNext()
                        Loop While Not RSC_ReasnTrip.EOF
                    End If


                    RSC_ReasnTrip.Close()
                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(Trim(UCase(txtReasonofTrip.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::REASON OF TRIP::")
                        txtReasonofTrip.Clear()
                        txtReasonofTrip.Focus()

                    End If
                End If
            End If

            RSReasnTrip.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D14' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtReasonofTrip.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::REASON OF TRIP::")
                    txtReasonofTrip.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub




    '====================================
    ' Air Accomodation Reason Code
    '====================================

    Private Sub txtAirNoReasonCD_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtAirNoReasonCD.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D01' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtAirNoReasonCD.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtAirNoReasonCD.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::AIR ACCOMODATION REASON CODE::")
                            txtAirNoReasonCD.Text = (System.Text.RegularExpressions.Regex.Replace(txtAirNoReasonCD.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtAirNoReasonCD.SelectionStart = txtAirNoReasonCD.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtAirNoReasonCD.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtAirNoReasonCD.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::AIR ACCOMODATION REASON CODE::")
                            txtAirNoReasonCD.Text = (System.Text.RegularExpressions.Regex.Replace(txtAirNoReasonCD.Text, "[^\d]", ""))
                            txtAirNoReasonCD.SelectionStart = txtAirNoReasonCD.TextLength
                            Exit Sub

                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtAirNoReasonCD.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtAirNoReasonCD.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::AIR ACCOMODATION REASON CODE::")
                            txtAirNoReasonCD.Text = (System.Text.RegularExpressions.Regex.Replace(txtAirNoReasonCD.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtAirNoReasonCD.SelectionStart = txtAirNoReasonCD.TextLength
                            Exit Sub
                        End If
                    End If
                End If
            End If
            RS1.Close()

        End With


    End Sub




    Private Sub txtAirNoReasonCD_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtAirNoReasonCD.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSAccom()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D01' and List ='Y' "
        RSAccom.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSAccom

            If Not RSAccom.EOF Then

                CHECK_RC_Accom()
                SQL_QUERY = "Select * from BCDMIS..C_AccommodationReasonCode where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RC_Accom.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RC_Accom
                    If Not RC_Accom.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RC_Accom.Fields("Code").Value)))
                            RC_Accom.MoveNext()
                        Loop While Not RC_Accom.EOF
                    End If

                    RC_Accom.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(Trim(UCase(txtAirNoReasonCD.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::AIR ACCOMODATION REASON CODE::")
                        txtAirNoReasonCD.Clear()
                        txtAirNoReasonCD.Focus()
                    End If
                End If
            End If

            RSAccom.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D01' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtAirNoReasonCD.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::AIR ACCOMODATION REASON CODE::")
                    txtAirNoReasonCD.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub





    '================================
    ' CS Data 1
    '================================

    Private Sub txtCSData1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData1.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D04' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCSData1.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData1.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS DATA 1::")
                            txtCSData1.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData1.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCSData1.SelectionStart = txtCSData1.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCSData1.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData1.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric characters is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 1::")
                            txtCSData1.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData1.Text, "[^\d]", ""))
                            txtCSData1.SelectionStart = txtCSData1.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCSData1.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData1.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 1::")
                            txtCSData1.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData1.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCSData1.SelectionStart = txtCSData1.TextLength
                            Exit Sub
                        End If
                    End If
                End If
            End If
            RS1.Close()

        End With


    End Sub




    Private Sub txtCSData1_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData1.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCSData1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D04' and List ='Y' "
        RSCSData1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCSData1

            If Not RSCSData1.EOF Then

                CHECK_RSC_SData1()
                SQL_QUERY = "Select * from BCDMIS..C_ClientData1 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_SData1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_SData1
                    If Not RSC_SData1.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData1.Fields("Code").Value)))
                            RSC_SData1.MoveNext()
                        Loop While Not RSC_SData1.EOF
                    End If


                    RSC_SData1.Close()
                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(Trim(UCase(txtCSData1.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 1::")
                        txtCSData1.Clear()
                        txtCSData1.Focus()
                    End If
                End If


            End If
            RSCSData1.Close()
        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D04' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCSData1.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 1::")
                    txtCSData1.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub



    '================================
    ' CS Data 2
    '================================

    Private Sub txtCSData2_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData2.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D05' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCSData2.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData2.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS DATA 2::")
                            txtCSData2.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData2.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCSData2.SelectionStart = txtCSData2.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCSData2.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData2.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 2::")
                            txtCSData2.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData2.Text, "[^\d]", ""))
                            txtCSData2.SelectionStart = txtCSData2.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCSData2.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData2.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 2::")
                            txtCSData2.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData2.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCSData2.SelectionStart = txtCSData2.TextLength
                            Exit Sub
                        End If

                    End If
                End If
            End If
            RS1.Close()

        End With


    End Sub




    Private Sub txtCSData2_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData2.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCSData2()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D05' and List ='Y' "
        RSCSData2.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCSData2

            If Not RSCSData2.EOF Then

                CHECK_RSC_SData2()
                SQL_QUERY = "Select * from BCDMIS..C_ClientData2 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_SData2.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_SData2
                    If Not RSC_SData2.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData2.Fields("Code").Value)))
                            RSC_SData2.MoveNext()
                        Loop While Not RSC_SData2.EOF
                    End If


                    RSC_SData2.Close()
                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(Trim(UCase(txtCSData2.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 2::")
                        txtCSData2.Clear()
                        txtCSData2.Focus()
                    End If
                End If

            End If

            RSCSData2.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D05' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCSData2.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 2::")
                    txtCSData2.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub



    '=============================
    'CS Data 3'
    '=============================

    Private Sub txtCSData3_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData3.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D06' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCSData3.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData3.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 3::")
                            txtCSData3.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData3.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCSData3.SelectionStart = txtCSData3.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCSData3.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData3.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 3::")
                            txtCSData3.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData3.Text, "[^\d]", ""))
                            txtCSData3.SelectionStart = txtCSData3.TextLength
                            Exit Sub

                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCSData3.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData3.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 3::")
                            txtCSData3.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData3.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCSData3.SelectionStart = txtCSData3.TextLength
                            Exit Sub
                        End If

                    End If
                End If

            End If

            RS1.Close()

        End With


    End Sub




    Private Sub txtCSData3_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData3.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCSData3()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D06' and List ='Y' "
        RSCSData3.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCSData3

            If Not RSCSData3.EOF Then

                CHECK_RSC_SData3()
                SQL_QUERY = "Select * from BCDMIS..C_ClientData3 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_SData3.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_SData3
                    If Not RSC_SData3.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData3.Fields("Code").Value)))
                            RSC_SData3.MoveNext()
                        Loop While Not RSC_SData3.EOF
                    End If

                    RSC_SData3.Close()
                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(Trim(UCase(txtCSData3.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 3::")
                        txtCSData3.Clear()
                        txtCSData3.Focus()
                    End If
                End If
            End If
            RSCSData3.Close()

        End With

        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D06' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCSData3.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 3::")
                    txtCSData3.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub




    '=============================
    'CS Data 4'
    '=============================

    Private Sub txtCSData4_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData4.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D07' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCSData4.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData4.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS DATA 4::")
                            txtCSData4.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData4.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCSData4.SelectionStart = txtCSData4.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCSData4.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData4.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 4::")
                            txtCSData4.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData4.Text, "[^\d]", ""))
                            txtCSData4.SelectionStart = txtCSData4.TextLength
                            Exit Sub

                        End If

                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCSData4.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData4.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 4::")
                            txtCSData4.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData4.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCSData4.SelectionStart = txtCSData4.TextLength
                            Exit Sub
                        End If

                    End If
                End If

            End If
            RS1.Close()

        End With

    End Sub




    Private Sub txtCSData4_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData4.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCSData4()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D07' and List ='Y' "
        RSCSData4.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCSData4

            If Not RSCSData4.EOF Then

                CHECK_RSC_SData4()
                SQL_QUERY = "Select * from BCDMIS..C_ClientData4 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_SData4.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_SData4
                    If Not RSC_SData4.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData4.Fields("Code").Value)))
                            RSC_SData4.MoveNext()
                        Loop While Not RSC_SData4.EOF
                    End If
                    RSC_SData4.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtCSData4.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 4::")
                        txtCSData4.Clear()
                        txtCSData4.Focus()
                    End If
                End If

            End If
            RSCSData4.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D07' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCSData4.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 4::")
                    txtCSData4.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub




    '===================
    ' CS Data 5
    '===================


    Private Sub txtCSData5_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData5.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D20' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCSData5.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData5.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS DATA 5::")
                            txtCSData5.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData5.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCSData5.SelectionStart = txtCSData5.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCSData5.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData5.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 5::")
                            txtCSData5.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData5.Text, "[^\d]", ""))
                            txtCSData5.SelectionStart = txtCSData5.TextLength
                            Exit Sub

                        End If

                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCSData5.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData5.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 5::")
                            txtCSData5.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData5.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCSData5.SelectionStart = txtCSData5.TextLength
                            Exit Sub
                        End If

                    End If
                End If

            End If
            RS1.Close()

        End With

    End Sub




    Private Sub txtCSData5_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData5.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCSData5()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D20' and List ='Y' "
        RSCSData5.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCSData5

            If Not RSCSData5.EOF Then

                CHECK_RSC_SData5()
                SQL_QUERY = "Select * from BCDMIS..C_ClientData5 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_SData5.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_SData5
                    If Not RSC_SData5.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData5.Fields("Code").Value)))
                            RSC_SData5.MoveNext()
                        Loop While Not RSC_SData5.EOF
                    End If
                    RSC_SData5.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtCSData5.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 5::")
                        txtCSData5.Clear()
                        txtCSData5.Focus()
                    End If
                End If

            End If
            RSCSData5.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D20' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCSData5.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 5::")
                    txtCSData5.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub


    '====================
    ' Client Data 6
    '====================


    Private Sub txtCSData6_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData6.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D21' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCSData6.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData6.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS DATA 6::")
                            txtCSData6.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData6.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCSData6.SelectionStart = txtCSData6.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCSData6.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData6.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 6::")
                            txtCSData6.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData6.Text, "[^\d]", ""))
                            txtCSData6.SelectionStart = txtCSData6.TextLength
                            Exit Sub

                        End If

                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCSData6.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData6.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 6::")
                            txtCSData6.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData6.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCSData6.SelectionStart = txtCSData6.TextLength
                            Exit Sub
                        End If

                    End If
                End If

            End If
            RS1.Close()

        End With

    End Sub




    Private Sub txtCSData6_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData6.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCSData6()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D21' and List ='Y' "
        RSCSData6.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCSData6

            If Not RSCSData6.EOF Then

                CHECK_RSC_SData6()
                SQL_QUERY = "Select * from BCDMIS..C_ClientData6 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_SData6.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_SData6
                    If Not RSC_SData6.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData6.Fields("Code").Value)))
                            RSC_SData6.MoveNext()
                        Loop While Not RSC_SData6.EOF
                    End If
                    RSC_SData6.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtCSData6.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 6::")
                        txtCSData6.Clear()
                        txtCSData6.Focus()
                    End If
                End If

            End If
            RSCSData6.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D21' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCSData6.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 6::")
                    txtCSData6.Focus()
                End If
                RS.MoveNext()
            End If
            RS.Close()
        End With



    End Sub



    '=======================
    ' Client Data 7
    '=======================

    Private Sub txtCSData7_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData7.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D22' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCSData7.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData7.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS DATA 7::")
                            txtCSData7.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData7.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCSData7.SelectionStart = txtCSData7.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCSData7.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData7.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 7::")
                            txtCSData7.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData7.Text, "[^\d]", ""))
                            txtCSData7.SelectionStart = txtCSData7.TextLength
                            Exit Sub

                        End If

                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCSData7.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData7.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 7::")
                            txtCSData7.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData7.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCSData7.SelectionStart = txtCSData7.TextLength
                            Exit Sub
                        End If

                    End If
                End If

            End If
            RS1.Close()

        End With

    End Sub




    Private Sub txtCSData7_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData7.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCSData7()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D22' and List ='Y' "
        RSCSData7.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCSData7

            If Not RSCSData7.EOF Then

                CHECK_RSC_SData7()
                SQL_QUERY = "Select * from BCDMIS..C_ClientData7 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_SData7.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_SData7
                    If Not RSC_SData7.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData7.Fields("Code").Value)))
                            RSC_SData7.MoveNext()
                        Loop While Not RSC_SData7.EOF
                    End If
                    RSC_SData7.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtCSData7.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 7::")
                        txtCSData7.Clear()
                        txtCSData7.Focus()
                    End If
                End If

            End If
            RSCSData7.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D22' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCSData7.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 7::")
                    txtCSData7.Focus()
                End If
                RS.MoveNext()
            End If
            RS.Close()
        End With



    End Sub



    '=============================
    ' Client Data 8
    '=============================


    Private Sub txtCSData8_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData8.TextChanged

        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D23' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtCSData8.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData8.Text), "^[a-zA-Z0-9./,@\s-]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS DATA 8::")
                            txtCSData8.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData8.Text, "[^a-zA-Z0-9.@\s]", ""))
                            txtCSData8.SelectionStart = txtCSData8.TextLength
                            Exit Sub
                        End If
                    End If

                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtCSData8.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData8.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 8::")
                            txtCSData8.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData8.Text, "[^\d]", ""))
                            txtCSData8.SelectionStart = txtCSData8.TextLength
                            Exit Sub

                        End If

                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtCSData8.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtCSData8.Text), "^[a-zA-Z-./,@\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 8::")
                            txtCSData8.Text = (System.Text.RegularExpressions.Regex.Replace(txtCSData8.Text, "[^a-zA-Z-./,@\s]", ""))
                            txtCSData8.SelectionStart = txtCSData8.TextLength
                            Exit Sub
                        End If

                    End If
                End If

            End If
            RS1.Close()

        End With

    End Sub




    Private Sub txtCSData8_validated(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCSData8.Validated

        Dim getAllstr As String = Nothing

        CHECK_RSCSData8()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D23' and List ='Y' "
        RSCSData8.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSCSData8

            If Not RSCSData8.EOF Then

                CHECK_RSC_SData8()
                SQL_QUERY = "Select * from BCDMIS..C_ClientData8 where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSC_SData8.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSC_SData8
                    If Not RSC_SData8.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSC_SData8.Fields("Code").Value)))
                            RSC_SData8.MoveNext()
                        Loop While Not RSC_SData8.EOF
                    End If
                    RSC_SData8.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtCSData8.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 8::")
                        txtCSData8.Clear()
                        txtCSData8.Focus()
                    End If
                End If

            End If
            RSCSData8.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D23' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtCSData8.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS Data 8::")
                    txtCSData8.Focus()
                End If
                RS.MoveNext()
            End If
            RS.Close()
        End With



    End Sub














    Private Sub txtMajorClass_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)
        CHECK_RS1()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D16' "
        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS1

            If Not RS1.EOF Then

                If Trim(RS1.Fields("DataType").Value.ToString) = "AlphaNum" Then
                    If Trim(txtMajorClass.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtMajorClass.Text), "^[a-zA-Z0-9\s]+$") Then
                            MsgBox("Only AlphaNumeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::CS DATA 4::")
                            txtMajorClass.Text = (System.Text.RegularExpressions.Regex.Replace(txtMajorClass.Text, "[^a-zA-Z0-9\s]", ""))
                            txtMajorClass.SelectionStart = txtMajorClass.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Num" Then
                    If Trim(txtMajorClass.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtMajorClass.Text), "^([\d]|[\s])+$") Then '"^[0-9]*[\b]*$
                            MsgBox("Only Numeric character is allowed on this field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":: CS Data 4::")
                            txtMajorClass.Text = (System.Text.RegularExpressions.Regex.Replace(txtMajorClass.Text, "[^\d]", ""))
                            txtMajorClass.SelectionStart = txtMajorClass.TextLength
                            Exit Sub
                        End If
                    End If
                End If


                If Trim(RS1.Fields("DataType").Value.ToString) = "Alpha" Then
                    If Trim(txtMajorClass.Text) <> Nothing Then
                        If Not System.Text.RegularExpressions.Regex.IsMatch(Trim(txtMajorClass.Text), "^[a-zA-Z-./,\s]+$") Then
                            MsgBox("Only Alpha character is allowed on this Field.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, ":CS Data 4::")
                            txtMajorClass.Text = (System.Text.RegularExpressions.Regex.Replace(txtMajorClass.Text, "[^a-zA-Z-./,\s]", ""))
                            txtMajorClass.SelectionStart = txtMajorClass.TextLength
                            Exit Sub
                        End If

                    End If
                End If

            End If
            RS1.Close()

        End With

    End Sub



    Private Sub txtMajorClass_validated(ByVal sender As System.Object, ByVal e As System.EventArgs)

        Dim getAllstr As String = Nothing

        CHECK_RSMajorClass()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "' and Dataitem = 'D16' and List ='Y' "
        RSMajorClass.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RSMajorClass

            If Not RSMajorClass.EOF Then

                CHECK_RSCMajorClass()
                SQL_QUERY = "Select * from BCDMIS..C_MajorClass where ClientID  = '" & Trim(txtGlobalCustNo.Text) & "'"
                RSCMajorClass.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                With RSCMajorClass
                    If Not RSCMajorClass.EOF Then
                        Do
                            getAllstr = Trim(getAllstr + Trim(UCase(RSCMajorClass.Fields("Code").Value)))
                            RSCMajorClass.MoveNext()
                        Loop While Not RSCMajorClass.EOF
                    End If

                    RSCMajorClass.Close()

                End With

                If getAllstr <> Nothing Then
                    If getAllstr.IndexOf(UCase(Trim(txtMajorClass.Text))) < 0 Then
                        MsgBox("Data supplied is not found on the customer specific list..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::Major Class::")
                        txtMajorClass.Clear()
                        txtMajorClass.Focus()
                    End If
                End If

            End If
            RSMajorClass.Close()

        End With


        '=============
        '    If "N"
        '=============
        CHECK_RS()
        SQL_QUERY = "Select * from BCDMIS..MIDFields where (Dataitem = 'D16' and ClientGCN  = '" & Trim(txtGlobalCustNo.Text) & "')"
        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS
            If Not RS.EOF Then
                If RS.Fields("length").Value < txtMajorClass.Text.Length Then
                    MsgBox("Kindly check you have exceeded the maximum number of " & RS.Fields("length").Value & "characters allowed..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::Major Class::")
                    txtMajorClass.Focus()
                End If
                RS.MoveNext()
            End If

        End With

        RS.Close()

    End Sub




    Private Sub btnDelFare_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelFare.Click

        For i = 0 To SegmentFareCode.Count - 1
            SegmentFareCode(i) = Nothing
        Next

        txtSFSegment.Text = Nothing
        cboSegment.Text = Nothing
        RTFares.Text = Nothing

    End Sub







    Private Sub txtSellingFare_textchanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtSellingFare.TextChanged

        'txtDescRCode.Text = Nothing
        'txtRCodeDenied.Text = Nothing
        'txtRCodeDenied.BackColor = Color.LightBlue
        'txtReasonCode.Text = Nothing
        'txtReasonCode.BackColor = Color.LightBlue
        'txtLowFare.Text = Nothing
        'txtLowFare.BackColor = Color.LightBlue
        'txtRefFare.Text = Nothing
        'txtRefFare.BackColor = Color.LightBlue
        'txtCustSpecLowFare.Text = Nothing
        'txtCustSpecLowFare.BackColor = Color.LightBlue
        'txtCustSpecHighFare.Text = Nothing
        'txtCustSpecHighFare.BackColor = Color.LightBlue

        If rdDoktors.Checked = True Then

            txtSMID.Text = Nothing
            txtSMID.Enabled = False
            txtSMID.BackColor = Color.SkyBlue

            txtTSPID.Text = Nothing
            txtTSPID.Enabled = False
            txtTSPID.BackColor = Color.SkyBlue

            txtGlobalCustNo.Text = Nothing
            txtGlobalCustNo.Enabled = False
            txtGlobalCustNo.BackColor = Color.SkyBlue

            txtLocalCustNo.Text = Nothing
            txtLocalCustNo.Enabled = False
            txtLocalCustNo.BackColor = Color.SkyBlue

            txtHotelReasonCD.Text = Nothing
            txtHotelReasonCD.Enabled = False
            txtHotelReasonCD.BackColor = Color.SkyBlue


            txtEmployeeNo.Text = Nothing
            txtEmployeeNo.Enabled = False
            txtEmployeeNo.BackColor = Color.SkyBlue

            txtTravellerName.Text = Nothing
            txtTravellerName.Enabled = False
            txtTravellerName.BackColor = Color.SkyBlue

            txtTravellerStat.Text = Nothing
            txtTravellerStat.Enabled = False
            txtTravellerStat.BackColor = Color.SkyBlue

            txtCostCenterCode.Text = Nothing
            txtCostCenterCode.Enabled = False
            txtCostCenterCode.BackColor = Color.SkyBlue

            txtProjectNo.Text = Nothing
            txtProjectNo.Enabled = False
            txtProjectNo.BackColor = Color.SkyBlue


            txtDeptNo.Text = Nothing
            txtDeptNo.Enabled = False
            txtDeptNo.BackColor = Color.SkyBlue

            txtOrderRef.Text = Nothing
            txtOrderRef.Enabled = False
            txtOrderRef.BackColor = Color.SkyBlue

            txtApprover.Text = Nothing
            txtApprover.Enabled = False
            txtApprover.BackColor = Color.SkyBlue

            txtApproverCode.Text = Nothing
            txtApproverCode.Enabled = False
            txtApproverCode.BackColor = Color.SkyBlue

            txtMgrSuperior.Text = Nothing
            txtMgrSuperior.Enabled = False
            txtMgrSuperior.BackColor = Color.SkyBlue

            txtReasonofTrip.Text = Nothing
            txtReasonofTrip.Enabled = False
            txtReasonofTrip.BackColor = Color.SkyBlue

            txtMajorClass.Text = Nothing
            txtMajorClass.Enabled = False
            txtMajorClass.BackColor = Color.SkyBlue

            txtStopOverTRF.Text = Nothing
            txtStopOverTRF.Enabled = False
            txtStopOverTRF.BackColor = Color.SkyBlue

            txtTourCode.Text = Nothing
            txtTourCode.Enabled = False
            txtTourCode.BackColor = Color.SkyBlue

            txtReasonCode.Text = Nothing
            txtDescRCode.Text = Nothing

            'txtReasonCode.Enabled = False
            'txtReasonCode.BackColor = Color.WhiteSmoke

            'txtRCodeDenied.Text = Nothing
            'txtRCodeDenied.Enabled = False
            'txtRCodeDenied.BackColor = Color.WhiteSmoke


            txtFFLYR.Text = Nothing
            txtFFLYR.Enabled = False
            txtFFLYR.BackColor = Color.SkyBlue

            txtHotelBookedF_N.Text = Nothing
            txtHotelBookedF_N.Enabled = False
            txtHotelBookedF_N.BackColor = Color.SkyBlue

            txtAirNoReasonCD.Text = Nothing
            txtAirNoReasonCD.Enabled = False
            txtAirNoReasonCD.BackColor = Color.SkyBlue

            txtCarBookedFlag.Text = Nothing
            txtCarBookedFlag.Enabled = False
            txtCarBookedFlag.BackColor = Color.SkyBlue

            txtSalesChannel.Text = Nothing
            txtSalesChannel.Enabled = False
            txtSalesChannel.BackColor = Color.SkyBlue

            txtRecordType.Text = Nothing
            txtRecordType.Enabled = False
            txtRecordType.BackColor = Color.SkyBlue

            txtCSData1.Text = Nothing
            txtCSData1.Enabled = False
            txtCSData1.BackColor = Color.SkyBlue

            txtCSData2.Text = Nothing
            txtCSData2.Enabled = False
            txtCSData2.BackColor = Color.SkyBlue

            txtCSData3.Text = Nothing
            txtCSData3.Enabled = False
            txtCSData3.BackColor = Color.SkyBlue

            txtCSData4.Text = Nothing
            txtCSData4.Enabled = False
            txtCSData4.BackColor = Color.SkyBlue


            txtCSData5.Text = Nothing
            txtCSData5.Enabled = False
            txtCSData5.BackColor = Color.SkyBlue

            txtCSData6.Text = Nothing
            txtCSData6.Enabled = False
            txtCSData6.BackColor = Color.SkyBlue

            txtCSData7.Text = Nothing
            txtCSData7.Enabled = False
            txtCSData7.BackColor = Color.SkyBlue

            txtCSData8.Text = Nothing
            txtCSData8.Enabled = False
            txtCSData8.BackColor = Color.SkyBlue



            txtCSData12.Text = Nothing
            txtCSData12.Enabled = False
            txtCSData12.BackColor = Color.SkyBlue

            txtCustSpecLowFare.Text = Nothing
            txtCustSpecLowFare.Enabled = False
            txtCustSpecLowFare.BackColor = Color.SkyBlue

            txtCustSpecHighFare.Text = Nothing
            txtCustSpecHighFare.Enabled = False
            txtCustSpecHighFare.BackColor = Color.SkyBlue

            txtLowFare.Text = Nothing
            txtLowFare.Enabled = False
            txtLowFare.BackColor = Color.SkyBlue

            txtRefFare.Text = Nothing
            txtRefFare.Enabled = False
            txtRefFare.BackColor = Color.SkyBlue

            txtReasonCode.Text = Nothing
            txtReasonCode.Enabled = False
            txtReasonCode.BackColor = Color.SkyBlue

            txtRCodeDenied.Text = Nothing
            txtRCodeDenied.Enabled = False
            txtRCodeDenied.BackColor = Color.SkyBlue


        ElseIf rdEmployee.Checked = True Then

            Call faretypes()
        End If


    End Sub



    ''Private Sub txtSFSegment_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtSFSegment.TextChanged
    ''    txtDescRCode.Text = Nothing
    ''    txtRCodeDenied.Text = Nothing
    ''    txtRCodeDenied.BackColor = Color.LightBlue
    ''    txtReasonCode.Text = Nothing
    ''    txtReasonCode.BackColor = Color.LightBlue
    ''    txtLowFare.Text = Nothing
    ''    txtLowFare.BackColor = Color.LightBlue
    ''    txtRefFare.Text = Nothing
    ''    txtRefFare.BackColor = Color.LightBlue
    ''    txtCustSpecLowFare.Text = Nothing
    ''    txtCustSpecLowFare.BackColor = Color.LightBlue
    ''    txtCustSpecHighFare.Text = Nothing
    ''    txtCustSpecHighFare.BackColor = Color.LightBlue


    ''    If Trim(strClientGlobalCustNo) = Nothing Then

    ''        CHECK_RS()

    ''        SQL_QUERY = "Select * from BCDMIS..ClientSpecific where clientname  =  '" & Trim(cboClientName.SelectedText) & "'" ' or LocalCustNo = '" & Trim(strClientNumber) & "'"
    ''        RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''        With RS

    ''            If Not RS.EOF Then

    ''                ==Reason Code

    ''                If (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) = "TRUE" Then
    ''                    txtReasonCode.Enabled = True
    ''                    txtReasonCode.BackColor = Color.White
    ''                    btnReasonCD.Enabled = True

    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            Txt14.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
    ''                            RS1.MoveNext()
    ''                        End If
    ''                    End With

    ''                    RS1.Close()

    ''                    ====Reason Trip Field

    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..F_ReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                                txtReasonCode.BackColor = Color.Yellow
    ''                                Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                                txtReasonCode.BackColor = Color.AntiqueWhite
    ''                                Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                                txtReasonCode.BackColor = Color.Orange
    ''                                Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)

    ''                            End If

    ''                            RS1.MoveNext()


    ''                        End If
    ''                    End With

    ''                    RS1.Close()

    ''                End If



    ''                If Not IsDBNull(Trim((RS.Fields("ReasonCode").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) <> "TRUE" Then

    ''                    txtReasonCode.Text = (RS.Fields("ReasonCode").Value).ToString()
    ''                    txtReasonCode.Enabled = True
    ''                    txtReasonCode.BackColor = Color.White

    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            Txt14.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
    ''                            RS1.MoveNext()
    ''                        End If
    ''                    End With

    ''                    RS1.Close()

    ''                    ====Reason Trip Field

    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..F_ReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                                txtReasonCode.BackColor = Color.Yellow
    ''                                Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                                txtReasonCode.BackColor = Color.AntiqueWhite
    ''                                Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                                txtReasonCode.BackColor = Color.Orange
    ''                                Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                            End If

    ''                            RS1.MoveNext()


    ''                        End If
    ''                    End With

    ''                    RS1.Close()

    ''                End If



    ''                If (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonCode").Value).ToString())) Or (Trim((RS.Fields("ReasonCode").Value).ToString())) Is Nothing Then
    ''                    txtReasonCode.Enabled = False
    ''                    txtReasonCode.Text = Nothing
    ''                    txtDescRCode.Text = Nothing
    ''                    txtReasonCode.BackColor = Color.SkyBlue
    ''                    btnReasonCD.Enabled = False
    ''                End If

    ''                ==End



    ''                ===Reason Code Denied

    ''                If (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) = "TRUE" Then

    ''                    txtRCodeDenied.Enabled = True
    ''                    txtRCodeDenied.BackColor = Color.White
    ''                    btnReasonCodeDen.Enabled = True

    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            Txt15.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
    ''                            RS1.MoveNext()
    ''                        End If
    ''                    End With

    ''                    RS1.Close()

    ''                    ====Reason Trip Field

    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..F_ReasonCodeDenied where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                                txtRCodeDenied.BackColor = Color.Yellow
    ''                                Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                                txtRCodeDenied.BackColor = Color.AntiqueWhite
    ''                                Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                                txtRCodeDenied.BackColor = Color.Orange
    ''                                Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)

    ''                            End If

    ''                            RS1.MoveNext()


    ''                        End If
    ''                    End With

    ''                    RS1.Close()

    ''                End If


    ''                If Not IsDBNull(Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) <> "TRUE" Then

    ''                    txtRCodeDenied.Text = (RS.Fields("ReasonCodeDenied").Value).ToString()
    ''                    txtRCodeDenied.Enabled = True
    ''                    txtRCodeDenied.BackColor = Color.White

    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            Txt15.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
    ''                            RS1.MoveNext()
    ''                        End If
    ''                    End With

    ''                    RS1.Close()

    ''                    ====Reason Trip Field

    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..F_ReasonCodeDenied where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                                txtRCodeDenied.BackColor = Color.Yellow
    ''                                Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                                txtRCodeDenied.BackColor = Color.AntiqueWhite
    ''                                Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                                txtRCodeDenied.BackColor = Color.AntiqueWhite
    ''                                Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                            End If

    ''                            RS1.MoveNext()


    ''                        End If
    ''                        RS1.Close()
    ''                    End With

    ''                End If

    ''                If (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) Or (Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) Is Nothing Then
    ''                    txtRCodeDenied.Enabled = False
    ''                    txtRCodeDenied.Text = Nothing
    ''                    txtRCodeDenied.BackColor = Color.SkyBlue
    ''                    btnReasonCodeDen.Enabled = False
    ''                End If

    ''                ==End


    ''                ===Customer Spec Field

    ''                If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "TRUE" Then

    ''                    txtCustSpecLowFare.Enabled = True
    ''                    txtCustSpecLowFare.BackColor = Color.White


    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                                txtCustSpecLowFare.BackColor = Color.Yellow
    ''                                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                                txtCustSpecLowFare.BackColor = Color.AntiqueWhite
    ''                                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                                txtCustSpecLowFare.BackColor = Color.Orange
    ''                                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)

    ''                            End If

    ''                            RS1.MoveNext()

    ''                        End If
    ''                    End With

    ''                    RS1.Close()

    ''                End If


    ''                If Not IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) <> "TRUE" Then

    ''                    txtCustSpecLowFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
    ''                    txtCustSpecLowFare.Enabled = True
    ''                    txtCustSpecLowFare.BackColor = Color.White


    ''                    CHECK_RS1()
    ''                    SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                    RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                    With RS1
    ''                        If Not RS1.EOF Then
    ''                            If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                                txtCustSpecLowFare.BackColor = Color.Yellow
    ''                                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                                txtCustSpecLowFare.BackColor = Color.AntiqueWhite
    ''                                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                            ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                                txtCustSpecLowFare.BackColor = Color.Orange
    ''                                Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                            End If

    ''                            RS1.MoveNext()

    ''                        End If
    ''                    End With

    ''                    RS1.Close()


    ''                End If

    ''                If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) Or (Trim((RS.Fields("CustoSpecLF").Value).ToString())) Is Nothing Then
    ''                    txtCustSpecLowFare.Enabled = False
    ''                    txtCustSpecLowFare.Text = Nothing
    ''                    txtCustSpecLowFare.BackColor = Color.SkyBlue
    ''                End If



    ''                RS.MoveNext()

    ''            End If



    ''                 ===Customer Spec Field Reference Fare Amount

    ''            If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "TRUE" Then

    ''                txtCustSpecHighFare.Enabled = True
    ''                txtCustSpecHighFare.BackColor = Color.White


    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtCustSpecHighFare.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtCustSpecHighFare.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtCustSpecHighFare.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)

    ''                        End If

    ''                        RS1.MoveNext()

    ''                    End If
    ''                End With

    ''                RS1.Close()


    ''            End If


    ''            If Not IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) <> "TRUE" Then

    ''                txtCustSpecHighFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
    ''                txtCustSpecHighFare.Enabled = True
    ''                txtCustSpecHighFare.BackColor = Color.White


    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtCustSpecHighFare.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtCustSpecHighFare.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                            txtCustSpecHighFare.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                        End If

    ''                        RS1.MoveNext()

    ''                    End If
    ''                End With

    ''                RS1.Close()


    ''            End If

    ''            If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Or (Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Is Nothing Then
    ''                txtCustSpecHighFare.Enabled = False
    ''                txtCustSpecHighFare.Text = Nothing
    ''                txtCustSpecHighFare.BackColor = Color.SkyBlue
    ''            End If



    ''                 ===Low Fare

    ''            If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "TRUE" Then

    ''                txtLowFare.Enabled = True
    ''                txtLowFare.BackColor = Color.White


    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtLowFare.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtLowFare.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtLowFare.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)

    ''                        End If

    ''                        RS1.MoveNext()

    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''            End If



    ''            If Not IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) And (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) <> "TRUE" Then

    ''                txtLowFare.Text = (RS.Fields("LowFare").Value).ToString()
    ''                txtLowFare.Enabled = True
    ''                txtLowFare.BackColor = Color.White


    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtLowFare.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtLowFare.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                            txtLowFare.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                        End If

    ''                        RS1.MoveNext()

    ''                    End If
    ''                End With

    ''                RS1.Close()


    ''            End If

    ''            If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) Or (Trim((RS.Fields("LowFare").Value).ToString())) Is Nothing Then
    ''                txtLowFare.Enabled = False
    ''                txtLowFare.Text = Nothing
    ''                txtLowFare.BackColor = Color.SkyBlue
    ''            End If


    ''                ====Full Fare

    ''            If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "TRUE" Then

    ''                txtRefFare.Enabled = True
    ''                txtRefFare.BackColor = Color.White


    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtRefFare.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtRefFare.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtRefFare.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)

    ''                        End If

    ''                        RS1.MoveNext()

    ''                    End If
    ''                End With

    ''                RS1.Close()


    ''            End If


    ''            If Not IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) And (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) <> "TRUE" Then

    ''                txtRefFare.Text = (RS.Fields("FullFare").Value).ToString()
    ''                txtRefFare.Enabled = True
    ''                txtRefFare.BackColor = Color.White


    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtRefFare.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtRefFare.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                            txtRefFare.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                        End If

    ''                        RS1.MoveNext()

    ''                    End If
    ''                End With

    ''                RS1.Close()


    ''            End If

    ''            If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) Or (Trim((RS.Fields("FullFare").Value).ToString())) Is Nothing Then
    ''                txtRefFare.Enabled = False
    ''                txtRefFare.Text = Nothing
    ''                txtRefFare.BackColor = Color.SkyBlue
    ''            End If

    ''            RS.MoveNext()

    ''            End If


    ''        End With

    ''    RS.Close()


    ''    ElseIf Trim(strClientGlobalCustNo) <> Nothing Then

    ''    CHECK_RS()

    ''    SQL_QUERY = "Select * from BCDMIS..ClientSpecific where GlobalCustNo = '" & Trim(strClientGlobalCustNo) & "'"
    ''    RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''    With RS

    ''        If Not RS.EOF Then


    ''            If (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) = "TRUE" Then
    ''                txtReasonCode.Enabled = True
    ''                txtReasonCode.BackColor = Color.White
    ''                btnReasonCD.Enabled = True

    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        Txt14.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
    ''                        RS1.MoveNext()
    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''                    ====Reason Trip Field

    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_ReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtReasonCode.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtReasonCode.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                            txtReasonCode.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)

    ''                        End If

    ''                        RS1.MoveNext()


    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''            End If



    ''            If Not IsDBNull(Trim((RS.Fields("ReasonCode").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) <> "TRUE" Then

    ''                txtReasonCode.Text = (RS.Fields("ReasonCode").Value).ToString()
    ''                txtReasonCode.Enabled = True
    ''                txtReasonCode.BackColor = Color.White

    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        Txt14.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
    ''                        RS1.MoveNext()
    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''                    ====Reason Trip Field

    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_ReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtReasonCode.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtReasonCode.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                            txtReasonCode.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
    ''                        End If

    ''                        RS1.MoveNext()


    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''            End If



    ''            If (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonCode").Value).ToString())) Or (Trim((RS.Fields("ReasonCode").Value).ToString())) Is Nothing Then
    ''                txtReasonCode.Enabled = False
    ''                txtReasonCode.Text = Nothing
    ''                txtDescRCode.Text = Nothing
    ''                txtReasonCode.BackColor = Color.SkyBlue
    ''                btnReasonCD.Enabled = False
    ''            End If

    ''                ==End



    ''                ===Reason Code Denied

    ''            If (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) = "TRUE" Then

    ''                txtRCodeDenied.Enabled = True
    ''                txtRCodeDenied.BackColor = Color.White
    ''                btnReasonCodeDen.Enabled = True

    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        Txt15.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
    ''                        RS1.MoveNext()
    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''                    ====Reason Trip Field

    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_ReasonCodeDenied where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtRCodeDenied.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtRCodeDenied.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                            txtRCodeDenied.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)

    ''                        End If

    ''                        RS1.MoveNext()


    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''            End If


    ''            If Not IsDBNull(Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) <> "TRUE" Then

    ''                txtRCodeDenied.Text = (RS.Fields("ReasonCodeDenied").Value).ToString()
    ''                txtRCodeDenied.Enabled = True
    ''                txtRCodeDenied.BackColor = Color.White

    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        Txt15.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
    ''                        RS1.MoveNext()
    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''                    ====Reason Trip Field

    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_ReasonCodeDenied where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtRCodeDenied.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtRCodeDenied.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtRCodeDenied.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
    ''                        End If

    ''                        RS1.MoveNext()


    ''                    End If
    ''                    RS1.Close()
    ''                End With

    ''            End If

    ''            If (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) Or (Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) Is Nothing Then
    ''                txtRCodeDenied.Enabled = False
    ''                txtRCodeDenied.Text = Nothing
    ''                txtRCodeDenied.BackColor = Color.SkyBlue
    ''                btnReasonCodeDen.Enabled = False
    ''            End If

    ''                ==End


    ''                ===Customer Spec Field

    ''            If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "TRUE" Then

    ''                txtCustSpecLowFare.Enabled = True
    ''                txtCustSpecLowFare.BackColor = Color.White


    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtCustSpecLowFare.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtCustSpecLowFare.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtCustSpecLowFare.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)

    ''                        End If

    ''                        RS1.MoveNext()

    ''                    End If
    ''                End With

    ''                RS1.Close()

    ''            End If


    ''            If Not IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) <> "TRUE" Then

    ''                txtCustSpecLowFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
    ''                txtCustSpecLowFare.Enabled = True
    ''                txtCustSpecLowFare.BackColor = Color.White


    ''                CHECK_RS1()
    ''                SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''                RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''                With RS1
    ''                    If Not RS1.EOF Then
    ''                        If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                            txtCustSpecLowFare.BackColor = Color.Yellow
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                            txtCustSpecLowFare.BackColor = Color.AntiqueWhite
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                        ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                            txtCustSpecLowFare.BackColor = Color.Orange
    ''                            Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
    ''                        End If

    ''                        RS1.MoveNext()

    ''                    End If
    ''                End With

    ''                RS1.Close()


    ''            End If

    ''            If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) Or (Trim((RS.Fields("CustoSpecLF").Value).ToString())) Is Nothing Then
    ''                txtCustSpecLowFare.Enabled = False
    ''                txtCustSpecLowFare.Text = Nothing
    ''                txtCustSpecLowFare.BackColor = Color.SkyBlue
    ''            End If



    ''            RS.MoveNext()

    ''        End If



    ''                 ===Customer Spec Field Reference Fare Amount

    ''        If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "TRUE" Then

    ''            txtCustSpecHighFare.Enabled = True
    ''            txtCustSpecHighFare.BackColor = Color.White


    ''            CHECK_RS1()
    ''            SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''            With RS1
    ''                If Not RS1.EOF Then
    ''                    If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                        txtCustSpecHighFare.BackColor = Color.Yellow
    ''                        Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtCustSpecHighFare.BackColor = Color.AntiqueWhite
    ''                        Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtCustSpecHighFare.BackColor = Color.Orange
    ''                        Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)

    ''                    End If

    ''                    RS1.MoveNext()

    ''                End If
    ''            End With

    ''            RS1.Close()


    ''        End If


    ''        If Not IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) <> "TRUE" Then

    ''            txtCustSpecHighFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
    ''            txtCustSpecHighFare.Enabled = True
    ''            txtCustSpecHighFare.BackColor = Color.White


    ''            CHECK_RS1()
    ''            SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''            With RS1
    ''                If Not RS1.EOF Then
    ''                    If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                        txtCustSpecHighFare.BackColor = Color.Yellow
    ''                        Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtCustSpecHighFare.BackColor = Color.AntiqueWhite
    ''                        Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                        txtCustSpecHighFare.BackColor = Color.Orange
    ''                        Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
    ''                    End If

    ''                    RS1.MoveNext()

    ''                End If
    ''            End With

    ''            RS1.Close()


    ''        End If

    ''        If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Or (Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Is Nothing Then
    ''            txtCustSpecHighFare.Enabled = False
    ''            txtCustSpecHighFare.Text = Nothing
    ''            txtCustSpecHighFare.BackColor = Color.SkyBlue
    ''        End If



    ''                 ===Low Fare

    ''        If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "TRUE" Then

    ''            txtLowFare.Enabled = True
    ''            txtLowFare.BackColor = Color.White


    ''            CHECK_RS1()
    ''            SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''            With RS1
    ''                If Not RS1.EOF Then
    ''                    If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                        txtLowFare.BackColor = Color.Yellow
    ''                        Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtLowFare.BackColor = Color.AntiqueWhite
    ''                        Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtLowFare.BackColor = Color.Orange
    ''                        Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)

    ''                    End If

    ''                    RS1.MoveNext()

    ''                End If
    ''            End With

    ''            RS1.Close()

    ''        End If



    ''        If Not IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) And (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) <> "TRUE" Then

    ''            txtLowFare.Text = (RS.Fields("LowFare").Value).ToString()
    ''            txtLowFare.Enabled = True
    ''            txtLowFare.BackColor = Color.White


    ''            CHECK_RS1()
    ''            SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''            With RS1
    ''                If Not RS1.EOF Then
    ''                    If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                        txtLowFare.BackColor = Color.Yellow
    ''                        Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtLowFare.BackColor = Color.AntiqueWhite
    ''                        Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                        txtLowFare.BackColor = Color.Orange
    ''                        Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
    ''                    End If

    ''                    RS1.MoveNext()

    ''                End If
    ''            End With

    ''            RS1.Close()


    ''        End If

    ''        If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) Or (Trim((RS.Fields("LowFare").Value).ToString())) Is Nothing Then
    ''            txtLowFare.Enabled = False
    ''            txtLowFare.Text = Nothing
    ''            txtLowFare.BackColor = Color.SkyBlue
    ''        End If


    ''                ====Full Fare

    ''        If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "TRUE" Then

    ''            txtRefFare.Enabled = True
    ''            txtRefFare.BackColor = Color.White


    ''            CHECK_RS1()
    ''            SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''            With RS1
    ''                If Not RS1.EOF Then
    ''                    If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                        txtRefFare.BackColor = Color.Yellow
    ''                        Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtRefFare.BackColor = Color.AntiqueWhite
    ''                        Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtRefFare.BackColor = Color.Orange
    ''                        Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)

    ''                    End If

    ''                    RS1.MoveNext()

    ''                End If
    ''            End With

    ''            RS1.Close()


    ''        End If


    ''        If Not IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) And (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) <> "TRUE" Then

    ''            txtRefFare.Text = (RS.Fields("FullFare").Value).ToString()
    ''            txtRefFare.Enabled = True
    ''            txtRefFare.BackColor = Color.White


    ''            CHECK_RS1()
    ''            SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
    ''            RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

    ''            With RS1
    ''                If Not RS1.EOF Then
    ''                    If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
    ''                        txtRefFare.BackColor = Color.Yellow
    ''                        Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
    ''                        txtRefFare.BackColor = Color.AntiqueWhite
    ''                        Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                    ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
    ''                        txtRefFare.BackColor = Color.Orange
    ''                        Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
    ''                    End If

    ''                    RS1.MoveNext()

    ''                End If
    ''            End With

    ''            RS1.Close()


    ''        End If

    ''        If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) Or (Trim((RS.Fields("FullFare").Value).ToString())) Is Nothing Then
    ''            txtRefFare.Enabled = False
    ''            txtRefFare.Text = Nothing
    ''            txtRefFare.BackColor = Color.SkyBlue
    ''        End If

    ''            End If

    ''        RS.MoveNext()

    ''    End With

    ''    RS.Close()

    ''    End If
    'End Sub

    Private Sub txtSFSegment_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtSFSegment.TextChanged

        txtPublishFare.Text = Nothing
        txtSellingFare.Text = Nothing
        txtDescRCode.Text = Nothing
        txtRCodeDenied.Text = Nothing
        txtRCodeDenied.BackColor = Color.SkyBlue
        txtReasonCode.Text = Nothing
        txtReasonCode.BackColor = Color.SkyBlue
        txtLowFare.Text = Nothing
        txtLowFare.BackColor = Color.SkyBlue
        txtRefFare.Text = Nothing
        txtRefFare.BackColor = Color.SkyBlue
        txtCustSpecLowFare.Text = Nothing
        txtCustSpecLowFare.BackColor = Color.SkyBlue
        txtCustSpecHighFare.Text = Nothing
        txtCustSpecHighFare.BackColor = Color.SkyBlue
        txtMajorClass.Text = Nothing
        txtMajorClass.BackColor = Color.SkyBlue


        If rdDoktors.Checked = True Then

            txtSMID.Text = Nothing
            txtSMID.Enabled = False
            txtSMID.BackColor = Color.SkyBlue

            txtTSPID.Text = Nothing
            txtTSPID.Enabled = False
            txtTSPID.BackColor = Color.SkyBlue

            txtGlobalCustNo.Text = Nothing
            txtGlobalCustNo.Enabled = False
            txtGlobalCustNo.BackColor = Color.SkyBlue

            txtLocalCustNo.Text = Nothing
            txtLocalCustNo.Enabled = False
            txtLocalCustNo.BackColor = Color.SkyBlue

            txtHotelReasonCD.Text = Nothing
            txtHotelReasonCD.Enabled = False
            txtHotelReasonCD.BackColor = Color.SkyBlue


            txtEmployeeNo.Text = Nothing
            txtEmployeeNo.Enabled = False
            txtEmployeeNo.BackColor = Color.SkyBlue

            txtTravellerName.Text = Nothing
            txtTravellerName.Enabled = False
            txtTravellerName.BackColor = Color.SkyBlue

            txtTravellerStat.Text = Nothing
            txtTravellerStat.Enabled = False
            txtTravellerStat.BackColor = Color.SkyBlue

            txtCostCenterCode.Text = Nothing
            txtCostCenterCode.Enabled = False
            txtCostCenterCode.BackColor = Color.SkyBlue

            txtProjectNo.Text = Nothing
            txtProjectNo.Enabled = False
            txtProjectNo.BackColor = Color.SkyBlue


            txtDeptNo.Text = Nothing
            txtDeptNo.Enabled = False
            txtDeptNo.BackColor = Color.SkyBlue

            txtOrderRef.Text = Nothing
            txtOrderRef.Enabled = False
            txtOrderRef.BackColor = Color.SkyBlue

            txtApprover.Text = Nothing
            txtApprover.Enabled = False
            txtApprover.BackColor = Color.SkyBlue

            txtApproverCode.Text = Nothing
            txtApproverCode.Enabled = False
            txtApproverCode.BackColor = Color.SkyBlue

            txtMgrSuperior.Text = Nothing
            txtMgrSuperior.Enabled = False
            txtMgrSuperior.BackColor = Color.SkyBlue

            txtReasonofTrip.Text = Nothing
            txtReasonofTrip.Enabled = False
            txtReasonofTrip.BackColor = Color.SkyBlue

            txtMajorClass.Text = Nothing
            txtMajorClass.Enabled = False
            txtMajorClass.BackColor = Color.SkyBlue

            txtStopOverTRF.Text = Nothing
            txtStopOverTRF.Enabled = False
            txtStopOverTRF.BackColor = Color.SkyBlue

            txtTourCode.Text = Nothing
            txtTourCode.Enabled = False
            txtTourCode.BackColor = Color.SkyBlue

            txtReasonCode.Text = Nothing
            txtDescRCode.Text = Nothing


            txtFFLYR.Text = Nothing
            txtFFLYR.Enabled = False
            txtFFLYR.BackColor = Color.SkyBlue

            txtHotelBookedF_N.Text = Nothing
            txtHotelBookedF_N.Enabled = False
            txtHotelBookedF_N.BackColor = Color.SkyBlue

            txtAirNoReasonCD.Text = Nothing
            txtAirNoReasonCD.Enabled = False
            txtAirNoReasonCD.BackColor = Color.SkyBlue

            txtCarBookedFlag.Text = Nothing
            txtCarBookedFlag.Enabled = False
            txtCarBookedFlag.BackColor = Color.SkyBlue

            txtSalesChannel.Text = Nothing
            txtSalesChannel.Enabled = False
            txtSalesChannel.BackColor = Color.SkyBlue

            txtRecordType.Text = Nothing
            txtRecordType.Enabled = False
            txtRecordType.BackColor = Color.SkyBlue

            txtCSData1.Text = Nothing
            txtCSData1.Enabled = False
            txtCSData1.BackColor = Color.SkyBlue

            txtCSData2.Text = Nothing
            txtCSData2.Enabled = False
            txtCSData2.BackColor = Color.SkyBlue

            txtCSData3.Text = Nothing
            txtCSData3.Enabled = False
            txtCSData3.BackColor = Color.SkyBlue

            txtCSData4.Text = Nothing
            txtCSData4.Enabled = False
            txtCSData4.BackColor = Color.SkyBlue

            txtCSData12.Text = Nothing
            txtCSData12.Enabled = False
            txtCSData12.BackColor = Color.SkyBlue


            txtCSData5.Text = Nothing
            txtCSData5.Enabled = False
            txtCSData5.BackColor = Color.SkyBlue

            txtCSData6.Text = Nothing
            txtCSData6.Enabled = False
            txtCSData6.BackColor = Color.SkyBlue

            txtCSData7.Text = Nothing
            txtCSData7.Enabled = False
            txtCSData7.BackColor = Color.SkyBlue

            txtCSData8.Text = Nothing
            txtCSData8.Enabled = False
            txtCSData8.BackColor = Color.SkyBlue

            txtCustSpecLowFare.Text = Nothing
            txtCustSpecLowFare.Enabled = False
            txtCustSpecLowFare.BackColor = Color.SkyBlue

            txtCustSpecHighFare.Text = Nothing
            txtCustSpecHighFare.Enabled = False
            txtCustSpecHighFare.BackColor = Color.SkyBlue

            txtLowFare.Text = Nothing
            txtLowFare.Enabled = False
            txtLowFare.BackColor = Color.SkyBlue

            txtRefFare.Text = Nothing
            txtRefFare.Enabled = False
            txtRefFare.BackColor = Color.SkyBlue

            txtReasonCode.Text = Nothing
            txtReasonCode.Enabled = False
            txtReasonCode.BackColor = Color.SkyBlue

            txtRCodeDenied.Text = Nothing
            txtRCodeDenied.Enabled = False
            txtRCodeDenied.BackColor = Color.SkyBlue

            txtMajorClass.Text = Nothing
            txtMajorClass.Enabled = False
            txtMajorClass.BackColor = Color.SkyBlue

        ElseIf rdEmployee.Checked = True Then

            txtCustSpecLowFare.Text = Nothing
            txtCustSpecLowFare.Enabled = False
            txtCustSpecLowFare.BackColor = Color.SkyBlue

            txtCustSpecHighFare.Text = Nothing
            txtCustSpecHighFare.Enabled = False
            txtCustSpecHighFare.BackColor = Color.SkyBlue

            txtLowFare.Text = Nothing
            txtLowFare.Enabled = False
            txtLowFare.BackColor = Color.SkyBlue

            txtRefFare.Text = Nothing
            txtRefFare.Enabled = False
            txtRefFare.BackColor = Color.SkyBlue

            txtReasonCode.Text = Nothing
            txtReasonCode.Enabled = False
            txtReasonCode.BackColor = Color.SkyBlue

            txtRCodeDenied.Text = Nothing
            txtRCodeDenied.Enabled = False
            txtRCodeDenied.BackColor = Color.SkyBlue

            txtMajorClass.Text = Nothing
            txtMajorClass.Enabled = False
            txtMajorClass.BackColor = Color.SkyBlue

            Call faretypes()

        End If




    End Sub



    Private Sub rdDoktors_click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles rdDoktors.Click

        txtPublishFare.Text = Nothing
        txtSellingFare.Text = Nothing
        txtSFSegment.Text = Nothing


        txtDescRCode.Text = Nothing

        txtSMID.Text = Nothing
        txtSMID.Enabled = False
        txtSMID.BackColor = Color.SkyBlue

        txtTSPID.Text = Nothing
        txtTSPID.Enabled = False
        txtTSPID.BackColor = Color.SkyBlue

        txtGlobalCustNo.Text = Nothing
        txtGlobalCustNo.Enabled = False
        txtGlobalCustNo.BackColor = Color.SkyBlue

        txtLocalCustNo.Text = Nothing
        txtLocalCustNo.Enabled = False
        txtLocalCustNo.BackColor = Color.SkyBlue

        txtHotelReasonCD.Text = Nothing
        txtHotelReasonCD.Enabled = False
        txtHotelReasonCD.BackColor = Color.SkyBlue


        txtEmployeeNo.Text = Nothing
        txtEmployeeNo.Enabled = False
        txtEmployeeNo.BackColor = Color.SkyBlue

        txtTravellerName.Text = Nothing
        txtTravellerName.Enabled = False
        txtTravellerName.BackColor = Color.SkyBlue

        txtTravellerStat.Text = Nothing
        txtTravellerStat.Enabled = False
        txtTravellerStat.BackColor = Color.SkyBlue

        txtCostCenterCode.Text = Nothing
        txtCostCenterCode.Enabled = False
        txtCostCenterCode.BackColor = Color.SkyBlue

        txtProjectNo.Text = Nothing
        txtProjectNo.Enabled = False
        txtProjectNo.BackColor = Color.SkyBlue


        txtDeptNo.Text = Nothing
        txtDeptNo.Enabled = False
        txtDeptNo.BackColor = Color.SkyBlue

        txtOrderRef.Text = Nothing
        txtOrderRef.Enabled = False
        txtOrderRef.BackColor = Color.SkyBlue

        txtApprover.Text = Nothing
        txtApprover.Enabled = False
        txtApprover.BackColor = Color.SkyBlue

        txtApproverCode.Text = Nothing
        txtApproverCode.Enabled = False
        txtApproverCode.BackColor = Color.SkyBlue

        txtMgrSuperior.Text = Nothing
        txtMgrSuperior.Enabled = False
        txtMgrSuperior.BackColor = Color.SkyBlue

        txtReasonofTrip.Text = Nothing
        txtReasonofTrip.Enabled = False
        txtReasonofTrip.BackColor = Color.SkyBlue

        txtMajorClass.Text = Nothing
        txtMajorClass.Enabled = False
        txtMajorClass.BackColor = Color.SkyBlue

        txtStopOverTRF.Text = Nothing
        txtStopOverTRF.Enabled = False
        txtStopOverTRF.BackColor = Color.SkyBlue

        txtTourCode.Text = Nothing
        txtTourCode.Enabled = False
        txtTourCode.BackColor = Color.SkyBlue

        txtReasonCode.Text = Nothing
        txtDescRCode.Text = Nothing


        txtFFLYR.Text = Nothing
        txtFFLYR.Enabled = False
        txtFFLYR.BackColor = Color.SkyBlue

        txtHotelBookedF_N.Text = Nothing
        txtHotelBookedF_N.Enabled = False
        txtHotelBookedF_N.BackColor = Color.SkyBlue

        txtAirNoReasonCD.Text = Nothing
        txtAirNoReasonCD.Enabled = False
        txtAirNoReasonCD.BackColor = Color.SkyBlue

        txtCarBookedFlag.Text = Nothing
        txtCarBookedFlag.Enabled = False
        txtCarBookedFlag.BackColor = Color.SkyBlue

        txtSalesChannel.Text = Nothing
        txtSalesChannel.Enabled = False
        txtSalesChannel.BackColor = Color.SkyBlue

        txtRecordType.Text = Nothing
        txtRecordType.Enabled = False
        txtRecordType.BackColor = Color.SkyBlue

        txtCSData1.Text = Nothing
        txtCSData1.Enabled = False
        txtCSData1.BackColor = Color.SkyBlue

        txtCSData2.Text = Nothing
        txtCSData2.Enabled = False
        txtCSData2.BackColor = Color.SkyBlue

        txtCSData3.Text = Nothing
        txtCSData3.Enabled = False
        txtCSData3.BackColor = Color.SkyBlue

        txtCSData4.Text = Nothing
        txtCSData4.Enabled = False
        txtCSData4.BackColor = Color.SkyBlue


        txtCSData5.Text = Nothing
        txtCSData5.Enabled = False
        txtCSData5.BackColor = Color.SkyBlue

        txtCSData6.Text = Nothing
        txtCSData6.Enabled = False
        txtCSData6.BackColor = Color.SkyBlue

        txtCSData7.Text = Nothing
        txtCSData7.Enabled = False
        txtCSData7.BackColor = Color.SkyBlue

        txtCSData8.Text = Nothing
        txtCSData8.Enabled = False
        txtCSData8.BackColor = Color.SkyBlue

        txtCSData12.Text = Nothing
        txtCSData12.Enabled = False
        txtCSData12.BackColor = Color.SkyBlue

        txtCustSpecLowFare.Text = Nothing
        txtCustSpecLowFare.Enabled = False
        txtCustSpecLowFare.BackColor = Color.SkyBlue

        txtCustSpecHighFare.Text = Nothing
        txtCustSpecHighFare.Enabled = False
        txtCustSpecHighFare.BackColor = Color.SkyBlue

        txtLowFare.Text = Nothing
        txtLowFare.Enabled = False
        txtLowFare.BackColor = Color.SkyBlue

        txtRefFare.Text = Nothing
        txtRefFare.Enabled = False
        txtRefFare.BackColor = Color.SkyBlue

        txtReasonCode.Text = Nothing
        txtReasonCode.Enabled = False
        txtReasonCode.BackColor = Color.SkyBlue

        txtRCodeDenied.Text = Nothing
        txtRCodeDenied.Enabled = False
        txtRCodeDenied.BackColor = Color.SkyBlue




    End Sub



    Private Sub rdEmployee_click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles rdEmployee.Click

        txtPublishFare.Text = Nothing
        txtSellingFare.Text = Nothing
        txtSFSegment.Text = Nothing

        txtCustSpecLowFare.Text = Nothing
        txtCustSpecLowFare.Enabled = False
        txtCustSpecLowFare.BackColor = Color.SkyBlue

        txtCustSpecHighFare.Text = Nothing
        txtCustSpecHighFare.Enabled = False
        txtCustSpecHighFare.BackColor = Color.SkyBlue

        txtLowFare.Text = Nothing
        txtLowFare.Enabled = False
        txtLowFare.BackColor = Color.SkyBlue

        txtRefFare.Text = Nothing
        txtRefFare.Enabled = False
        txtRefFare.BackColor = Color.SkyBlue

        txtReasonCode.Text = Nothing
        txtReasonCode.Enabled = False
        txtReasonCode.BackColor = Color.SkyBlue

        txtRCodeDenied.Text = Nothing
        txtRCodeDenied.Enabled = False
        txtRCodeDenied.BackColor = Color.SkyBlue

        txtMajorClass.Text = Nothing
        txtMajorClass.Enabled = False
        txtMajorClass.BackColor = Color.SkyBlue

        Call BCDMISfields()

    End Sub


    Private Sub faretypes()


        If Trim(strClientGlobalCustNo) = Nothing Then

            CHECK_RS()

            SQL_QUERY = "Select * from BCDMIS..ClientSpecific where clientname  =  '" & Trim(cboClientName.SelectedText) & "'" ' or LocalCustNo = '" & Trim(strClientNumber) & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS

                If Not RS.EOF Then

                    '==Reason Code

                    If (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) = "TRUE" Then
                        txtReasonCode.Enabled = True
                        txtReasonCode.BackColor = Color.White
                        btnReasonCD.Enabled = True

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt14.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtReasonCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtReasonCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtReasonCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("ReasonCode").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) <> "TRUE" Then

                        txtReasonCode.Text = (RS.Fields("ReasonCode").Value).ToString()
                        txtReasonCode.Enabled = True
                        txtReasonCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt14.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtReasonCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtReasonCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtReasonCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If



                    If (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonCode").Value).ToString())) Or (Trim((RS.Fields("ReasonCode").Value).ToString())) Is Nothing Then
                        txtReasonCode.Enabled = False
                        txtReasonCode.Text = Nothing
                        txtDescRCode.Text = Nothing
                        txtReasonCode.BackColor = Color.SkyBlue
                        btnReasonCD.Enabled = False
                    End If

                    '==End



                    '===Reason Code Denied

                    If (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) = "TRUE" Then

                        txtRCodeDenied.Enabled = True
                        txtRCodeDenied.BackColor = Color.White
                        btnReasonCodeDen.Enabled = True

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt15.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonCodeDenied where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRCodeDenied.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRCodeDenied.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtRCodeDenied.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) <> "TRUE" Then

                        txtRCodeDenied.Text = (RS.Fields("ReasonCodeDenied").Value).ToString()
                        txtRCodeDenied.Enabled = True
                        txtRCodeDenied.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt15.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonCodeDenied where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRCodeDenied.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRCodeDenied.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRCodeDenied.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                            RS1.Close()
                        End With

                    End If

                    If (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) Or (Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) Is Nothing Then
                        txtRCodeDenied.Enabled = False
                        txtRCodeDenied.Text = Nothing
                        txtRCodeDenied.BackColor = Color.SkyBlue
                        btnReasonCodeDen.Enabled = False
                    End If

                    '==End


                    '===Customer Spec Field

                    If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "TRUE" Then

                        txtCustSpecLowFare.Enabled = True
                        txtCustSpecLowFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCustSpecLowFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecLowFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecLowFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) <> "TRUE" Then

                        txtCustSpecLowFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
                        txtCustSpecLowFare.Enabled = True
                        txtCustSpecLowFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCustSpecLowFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecLowFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCustSpecLowFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) Or (Trim((RS.Fields("CustoSpecLF").Value).ToString())) Is Nothing Then
                        txtCustSpecLowFare.Enabled = False
                        txtCustSpecLowFare.Text = Nothing
                        txtCustSpecLowFare.BackColor = Color.SkyBlue
                    End If



                    '    RS.MoveNext()

                    'End If



                    ' ===Customer Spec Field Reference Fare Amount

                    If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "TRUE" Then

                        txtCustSpecHighFare.Enabled = True
                        txtCustSpecHighFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCustSpecHighFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecHighFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecHighFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If Not IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) <> "TRUE" Then

                        txtCustSpecHighFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
                        txtCustSpecHighFare.Enabled = True
                        txtCustSpecHighFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCustSpecHighFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecHighFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCustSpecHighFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Or (Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Is Nothing Then
                        txtCustSpecHighFare.Enabled = False
                        txtCustSpecHighFare.Text = Nothing
                        txtCustSpecHighFare.BackColor = Color.SkyBlue
                    End If

                    ' ===Low Fare

                    If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "TRUE" Then

                        txtLowFare.Enabled = True
                        txtLowFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtLowFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtLowFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtLowFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) And (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) <> "TRUE" Then

                        txtLowFare.Text = (RS.Fields("LowFare").Value).ToString()
                        txtLowFare.Enabled = True
                        txtLowFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtLowFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtLowFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtLowFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) Or (Trim((RS.Fields("LowFare").Value).ToString())) Is Nothing Then
                        txtLowFare.Enabled = False
                        txtLowFare.Text = Nothing
                        txtLowFare.BackColor = Color.SkyBlue
                    End If


                    '====Full Fare

                    If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "TRUE" Then

                        txtRefFare.Enabled = True
                        txtRefFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRefFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRefFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRefFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If Not IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) And (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) <> "TRUE" Then

                        txtRefFare.Text = (RS.Fields("FullFare").Value).ToString()
                        txtRefFare.Enabled = True
                        txtRefFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRefFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRefFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtRefFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) Or (Trim((RS.Fields("FullFare").Value).ToString())) Is Nothing Then
                        txtRefFare.Enabled = False
                        txtRefFare.Text = Nothing
                        txtRefFare.BackColor = Color.SkyBlue
                    End If



                    '===Major Class

                    If (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) = "TRUE" Then

                        txtMajorClass.Enabled = True
                        txtMajorClass.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt11.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MajorClass where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMajorClass.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMajorClass.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMajorClass.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("MajorClass").Value).ToString())) And (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) <> "TRUE" Then

                        txtMajorClass.Text = (RS.Fields("MajorClass").Value).ToString()
                        txtMajorClass.Enabled = True
                        txtMajorClass.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt11.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MajorClass where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMajorClass.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMajorClass.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMajorClass.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("MajorClass").Value).ToString())) Or (Trim((RS.Fields("MajorClass").Value).ToString())) Is Nothing Then
                        txtMajorClass.Enabled = False
                        txtMajorClass.Text = Nothing
                        txtMajorClass.BackColor = Color.SkyBlue
                    End If





                    RS.MoveNext()

                End If


            End With

            RS.Close()


        ElseIf Trim(strClientGlobalCustNo) <> Nothing Then

            CHECK_RS()

            SQL_QUERY = "Select * from BCDMIS..ClientSpecific where GlobalCustNo = '" & Trim(strClientGlobalCustNo) & "'"
            RS.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

            With RS

                If Not RS.EOF Then

                    If (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) = "TRUE" Then
                        txtReasonCode.Enabled = True
                        txtReasonCode.BackColor = Color.White
                        btnReasonCD.Enabled = True

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt14.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtReasonCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtReasonCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtReasonCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("ReasonCode").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) <> "TRUE" Then

                        txtReasonCode.Text = (RS.Fields("ReasonCode").Value).ToString()
                        txtReasonCode.Enabled = True
                        txtReasonCode.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonCode where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt14.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonCode where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtReasonCode.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtReasonCode.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtReasonCode.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtReasonCode, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If



                    If (UCase(Trim((RS.Fields("ReasonCode").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonCode").Value).ToString())) Or (Trim((RS.Fields("ReasonCode").Value).ToString())) Is Nothing Then
                        txtReasonCode.Enabled = False
                        txtReasonCode.Text = Nothing
                        txtDescRCode.Text = Nothing
                        txtReasonCode.BackColor = Color.SkyBlue
                        btnReasonCD.Enabled = False
                    End If

                    '==End



                    '===Reason Code Denied

                    If (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) = "TRUE" Then

                        txtRCodeDenied.Enabled = True
                        txtRCodeDenied.BackColor = Color.White
                        btnReasonCodeDen.Enabled = True

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt15.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonCodeDenied where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRCodeDenied.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRCodeDenied.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtRCodeDenied.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) And (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) <> "TRUE" Then

                        txtRCodeDenied.Text = (RS.Fields("ReasonCodeDenied").Value).ToString()
                        txtRCodeDenied.Enabled = True
                        txtRCodeDenied.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_ReasonCodeDen where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt15.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()

                        '====Reason Trip Field

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReasonCodeDenied where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRCodeDenied.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRCodeDenied.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRCodeDenied.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRCodeDenied, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                            RS1.Close()
                        End With

                    End If

                    If (UCase(Trim((RS.Fields("ReasonCodeDenied").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) Or (Trim((RS.Fields("ReasonCodeDenied").Value).ToString())) Is Nothing Then
                        txtRCodeDenied.Enabled = False
                        txtRCodeDenied.Text = Nothing
                        txtRCodeDenied.BackColor = Color.SkyBlue
                        btnReasonCodeDen.Enabled = False
                    End If

                    '==End


                    '===Customer Spec Field

                    If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "TRUE" Then

                        txtCustSpecLowFare.Enabled = True
                        txtCustSpecLowFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCustSpecLowFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecLowFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecLowFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If Not IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) <> "TRUE" Then

                        txtCustSpecLowFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
                        txtCustSpecLowFare.Enabled = True
                        txtCustSpecLowFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CustoSpecLowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCustSpecLowFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecLowFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCustSpecLowFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecLowFare, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CustoSpecLF").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecLF").Value).ToString())) Or (Trim((RS.Fields("CustoSpecLF").Value).ToString())) Is Nothing Then
                        txtCustSpecLowFare.Enabled = False
                        txtCustSpecLowFare.Text = Nothing
                        txtCustSpecLowFare.BackColor = Color.SkyBlue
                    End If



                    ' ===Customer Spec Field Reference Fare Amount

                    If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "TRUE" Then

                        txtCustSpecHighFare.Enabled = True
                        txtCustSpecHighFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCustSpecHighFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecHighFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecHighFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If Not IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) And (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) <> "TRUE" Then

                        txtCustSpecHighFare.Text = (RS.Fields("CustoSpecLF").Value).ToString()
                        txtCustSpecHighFare.Enabled = True
                        txtCustSpecHighFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_CustomerSpecRefFareAmount where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtCustSpecHighFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtCustSpecHighFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtCustSpecHighFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtCustSpecHighFare, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If

                    If (UCase(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Or (Trim((RS.Fields("CustoSpecRFAmount").Value).ToString())) Is Nothing Then
                        txtCustSpecHighFare.Enabled = False
                        txtCustSpecHighFare.Text = Nothing
                        txtCustSpecHighFare.BackColor = Color.SkyBlue
                    End If



                    ' ===Low Fare

                    If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "TRUE" Then

                        txtLowFare.Enabled = True
                        txtLowFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtLowFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtLowFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtLowFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) And (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) <> "TRUE" Then

                        txtLowFare.Text = (RS.Fields("LowFare").Value).ToString()
                        txtLowFare.Enabled = True
                        txtLowFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_LowFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtLowFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtLowFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtLowFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtLowFare, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("LowFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("LowFare").Value).ToString())) Or (Trim((RS.Fields("LowFare").Value).ToString())) Is Nothing Then
                        txtLowFare.Enabled = False
                        txtLowFare.Text = Nothing
                        txtLowFare.BackColor = Color.SkyBlue
                    End If


                    '====Full Fare

                    If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "TRUE" Then

                        txtRefFare.Enabled = True
                        txtRefFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRefFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRefFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRefFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)

                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()


                    End If


                    If Not IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) And (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) <> "TRUE" Then

                        txtRefFare.Text = (RS.Fields("FullFare").Value).ToString()
                        txtRefFare.Enabled = True
                        txtRefFare.BackColor = Color.White


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_ReferenceFare where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtRefFare.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtRefFare.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtRefFare.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtRefFare, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()

                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("FullFare").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("FullFare").Value).ToString())) Or (Trim((RS.Fields("FullFare").Value).ToString())) Is Nothing Then
                        txtRefFare.Enabled = False
                        txtRefFare.Text = Nothing
                        txtRefFare.BackColor = Color.SkyBlue
                    End If



                    '===Major Class

                    If (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) = "TRUE" Then

                        txtMajorClass.Enabled = True
                        txtMajorClass.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt11.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MajorClass where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMajorClass.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMajorClass.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMajorClass.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If



                    If Not IsDBNull(Trim((RS.Fields("MajorClass").Value).ToString())) And (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) <> "TRUE" Then

                        txtMajorClass.Text = (RS.Fields("MajorClass").Value).ToString()
                        txtMajorClass.Enabled = True
                        txtMajorClass.BackColor = Color.White

                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..T_MajorClass where clientID  = '" & (RS.Fields("ClientID").Value).ToString() & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                Txt11.Text = (RS1.Fields("FieldName").Value).ToString()   'Field Mapping
                                RS1.MoveNext()
                            End If
                        End With

                        RS1.Close()


                        CHECK_RS1()
                        SQL_QUERY = "Select * from BCDMIS..F_MajorClass where GlobalCustNo  = '" & Trim(txtGlobalCustNo.Text) & "'"
                        RS1.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

                        With RS1
                            If Not RS1.EOF Then
                                If Trim((RS1.Fields("Required").Value).ToString()) = "Mandatory" Or Trim((RS1.Fields("Required").Value).ToString()) = "Required" Then
                                    txtMajorClass.BackColor = Color.Yellow
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Optional" Then
                                    txtMajorClass.BackColor = Color.AntiqueWhite
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                ElseIf Trim((RS1.Fields("Required").Value).ToString()) = "Conditional" Then
                                    txtMajorClass.BackColor = Color.Orange
                                    Me.ToolTip1.SetToolTip(Me.txtMajorClass, RS1.Fields("Remarks").Value)
                                End If

                                RS1.MoveNext()


                            End If
                        End With

                        RS1.Close()

                    End If


                    If (UCase(Trim((RS.Fields("MajorClass").Value).ToString()))) = "" Or IsDBNull(Trim((RS.Fields("MajorClass").Value).ToString())) Or (Trim((RS.Fields("MajorClass").Value).ToString())) Is Nothing Then
                        txtMajorClass.Enabled = False
                        txtMajorClass.Text = Nothing
                        txtMajorClass.BackColor = Color.SkyBlue
                    End If

                End If

                RS.MoveNext()

            End With

            RS.Close()


        End If

    End Sub


    Private Sub cboTripType_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTripType.SelectedIndexChanged
        Dim s As String = Trim(cboTripType.Text)
        Dim a As String() = Split(s, "-")
        txtTripType.Text = a(0)
    End Sub










    Public signature As String
    Dim ctrPax As Integer = 0
    Dim TotalPax As Integer = 0





    Dim rsponse As MsgBoxResult
    Dim logoutrequest As NewSessionManager.LogoutRequest


    'Payment Details
    Dim BaseFare As Double = Nothing

    Private Sub init()

        'Confirmation
        Rd_Cancelled.Checked = False
        Rd_confirmed.Checked = False
        Rd_Onhold.Checked = False
        Rd_Closed.Checked = False
        LblBookingDes.Text = Nothing

        'Pax Info
        LabelPaxCount.Text = Nothing
        txtTitle.Text = Nothing
        txtLastName.Text = Nothing
        txtFirstName.Text = Nothing
        txtMiddleName.Text = Nothing
        txtSuffix.Text = Nothing

        'Birthday
        TxtMonth.Text = Nothing
        txtDay.Text = Nothing
        txtyear.Text = Nothing
        txtPaxType.Text = Nothing
        rdFemale.Checked = False
        rdMale.Checked = False

        'Contact Details
        txtEmailAdd.Text = Nothing
        txtMobile.Text = Nothing
        txtPhone.Text = Nothing

        'Pax List
        PaxList.Items.Clear()
        'PaxList.Rows.Clear()
        'PaxList.Columns.Clear()
        'PaxList.ColumnHeadersVisible = False
        'PaxList.RowHeadersVisible = False

        'Other Info
        LabelBDate.Text = Nothing
        LabelBookingRef.Text = Nothing

        'Payment Details
        TxtPaymentType.Text = Nothing
        TxtPaymentStatus.Text = Nothing
        TxtPaymentDate.Text = Nothing
        txtTransactionID.Text = Nothing
        TxtPaymentAmount.Text = Nothing
        txtPaymentPF.Text = Nothing
        txtPaymentSF.Text = Nothing
        txtPaymentTax1.Text = Nothing
        txtPaymentTax2.Text = Nothing

        'Session SignIn
        txtUserId.Text = Nothing
        txtOrgCode.Text = Nothing
        txtPassword.Text = Nothing


        'init


        DepStation = Nothing
        DepSTDate = Nothing
        DepSTTime = Nothing
        FlightNo = Nothing
        Carrier = Nothing
        ArvlStation = Nothing
        ArvlSTDate = Nothing
        ArvlSTTime = Nothing
        BookingClass = Nothing
        Confirmed = Nothing


        PaymentBaseFare = Nothing

        AddOnServiceCancelFee = Nothing
        DiscountPoints = Nothing
        FarePoints = Nothing
        Loyalty = Nothing
        FareSurcharge = Nothing
        AddOnServiceMarkup = Nothing
        Note = Nothing
        Calculated = Nothing
        AddOnServiceFee = Nothing
        IncludedAddOnServiceFee = Nothing
        AddOnServicePrice = Nothing
        ConnectionAdjustmentAmount = Nothing
        PromotionDiscount = Nothing
        ServiceCharge = Nothing
        Tax = Nothing
        TravelFee = Nothing
        TravelFeeOther = Nothing
        TravelFeeLI = Nothing
        TravelFeeLIPV = Nothing
        IncludedTax = Nothing
        IncludedTravelFee = Nothing
        Discount = Nothing
        FarePrice = Nothing
        Unmapped = Nothing

        OtherC_DiscountPoints = Nothing
        OtherC_FarePoints = Nothing
        OtherC_Loyalty = Nothing
        OtherC_FareSurcharge = Nothing
        OtherC_AddOnServiceMarkup = Nothing
        OtherC_Note = Nothing
        OtherC_Calculated = Nothing
        OtherC_AddOnServiceFee = Nothing
        OtherC_IncludedAddOnServiceFee = Nothing
        OtherC_AddOnServicePrice = Nothing
        OtherC_ConnectionAdjustmentAmount = Nothing
        OtherC_PromotionDiscount = Nothing
        OtherC_ServiceCharge = Nothing
        OtherC_Tax = Nothing
        OtherC_TravelFee = Nothing
        OtherC_IncludedTax = Nothing
        OtherC_IncludedTravelFee = Nothing
        OtherC_Discount = Nothing
        OtherC_FarePrice = Nothing
        OtherC_Unmapped = Nothing

        PaymentTax1 = Nothing
        PaymentPV = Nothing
        PaymentTax2 = Nothing
        PaymentTotal = Nothing


        OtherChargers_PV = Nothing
        OtherC_ServiceChargeSEAT = Nothing




    End Sub

    Private Sub Clear()

        'Confirmation
        Rd_Cancelled.Checked = False
        Rd_confirmed.Checked = False
        RD_PartnerAgent.Checked = False
        RD_CEBBiz.Checked = False

        Rd_Onhold.Checked = False
        Rd_Closed.Checked = False
        LblBookingDes.Text = Nothing

        'Pax Info
        LabelPaxCount.Text = Nothing
        txtTitle.Text = Nothing
        txtLastName.Text = Nothing
        txtFirstName.Text = Nothing
        txtMiddleName.Text = Nothing
        txtSuffix.Text = Nothing

        'Birthday
        TxtMonth.Text = Nothing
        txtDay.Text = Nothing
        txtyear.Text = Nothing
        txtPaxType.Text = Nothing
        rdFemale.Checked = False
        rdMale.Checked = False

        'Contact Details
        txtEmailAdd.Text = Nothing
        txtMobile.Text = Nothing
        txtPhone.Text = Nothing

        'Pax List
        PaxList.Items.Clear()

        rtdFlightDetails.Clear()


        DepStation = Nothing
        DepSTDate = Nothing
        DepSTTime = Nothing
        FlightNo = Nothing
        Carrier = Nothing
        ArvlStation = Nothing
        ArvlSTDate = Nothing
        ArvlSTTime = Nothing
        BookingClass = Nothing
        Confirmed = Nothing

        'Other Info
        LabelBDate.Text = Nothing
        LabelBookingRef.Text = Nothing

        'Payment Details
        txtPaymentPF.Text = Nothing
        txtPaymentSF.Text = Nothing
        txtPaymentTax1.Text = Nothing
        txtPaymentTax2.Text = Nothing

        TxtPaymentType.Text = Nothing
        TxtPaymentStatus.Text = Nothing
        TxtPaymentDate.Text = Nothing
        txtTransactionID.Text = Nothing
        TxtPaymentAmount.Text = Nothing



        PaymentBaseFare = Nothing

        AddOnServiceCancelFee = Nothing
        DiscountPoints = Nothing
        FarePoints = Nothing
        Loyalty = Nothing
        FareSurcharge = Nothing
        AddOnServiceMarkup = Nothing
        Note = Nothing
        Calculated = Nothing
        AddOnServiceFee = Nothing
        IncludedAddOnServiceFee = Nothing
        AddOnServicePrice = Nothing
        ConnectionAdjustmentAmount = Nothing
        PromotionDiscount = Nothing
        ServiceCharge = Nothing
        Tax = Nothing
        TravelFee = Nothing
        TravelFeeOther = Nothing
        TravelFeeLI = Nothing
        TravelFeeLIPV = Nothing
        IncludedTax = Nothing
        IncludedTravelFee = Nothing
        Discount = Nothing
        FarePrice = Nothing
        Unmapped = Nothing

        OtherC_DiscountPoints = Nothing
        OtherC_FarePoints = Nothing
        OtherC_Loyalty = Nothing
        OtherC_FareSurcharge = Nothing
        OtherC_AddOnServiceMarkup = Nothing
        OtherC_Note = Nothing
        OtherC_Calculated = Nothing
        OtherC_AddOnServiceFee = Nothing
        OtherC_IncludedAddOnServiceFee = Nothing
        OtherC_AddOnServicePrice = Nothing
        OtherC_ConnectionAdjustmentAmount = Nothing
        OtherC_PromotionDiscount = Nothing
        OtherC_ServiceCharge = Nothing
        OtherC_Tax = Nothing
        OtherC_TravelFee = Nothing
        OtherC_IncludedTax = Nothing
        OtherC_IncludedTravelFee = Nothing
        OtherC_Discount = Nothing
        OtherC_FarePrice = Nothing
        OtherC_Unmapped = Nothing

        PaymentTax1 = Nothing
        PaymentPV = Nothing
        PaymentTax2 = Nothing
        PaymentTotal = Nothing


        OtherChargers_PV = Nothing
        OtherC_ServiceChargeSEAT = Nothing


        ' FOr MIS
        txtSellingFare.Text = Nothing
        txtLowFare.Text = Nothing
        txtRefFare.Text = Nothing
        txtRCodeDenied.Text = Nothing
        txtReasonCode.Text = Nothing
        txtMajorClass.Text = Nothing
        txtNoOfPax.Text = Nothing
        txtNetTicket.Text = Nothing
        cboCurrAir.Text = Nothing


        txtUserId.Text = Nothing
        txtPassword.Text = Nothing
        txtPWreset.Text = Nothing
        txtOrgCode.Text = Nothing


    End Sub

    Dim UserID As String = Nothing
    Dim Password As String = Nothing
    Dim OrgCode As String = Nothing
    Dim Domain As String = "EXT"

    '==========================Cebu Pacific Application Interface ===========================================
    ' Session Manager
    Dim sessionmanager As NewSessionManager.ISessionManager = New NewSessionManager.SessionManagerClient
    Dim logonRequest As NewSessionManager.LogonRequest = New NewSessionManager.LogonRequest
    Dim logonResponse As NewSessionManager.LogonResponse = New NewSessionManager.LogonResponse


    Dim changePwRequest As NewSessionManager.ChangePasswordRequest = New NewSessionManager.ChangePasswordRequest
    Dim changeresponse As NewSessionManager.ChangePasswordResponse = New NewSessionManager.ChangePasswordResponse


    'Booking Manager
    Dim bookingAPI As NewBookingManager.IBookingManager = New NewBookingManager.BookingManagerClient
    Dim bookingrequest As NewBookingManager.GetBookingRequest = New NewBookingManager.GetBookingRequest
    Dim Response As NewBookingManager.GetBookingResponse = New NewBookingManager.GetBookingResponse
    Dim booking As NewBookingManager.Booking = New NewBookingManager.Booking


    Private Sub logOnSession()

        UserID = Trim(txtUserId.Text)
        Password = Trim(txtPassword.Text)
        OrgCode = Trim(txtOrgCode.Text)
        'Domain = "EXT"


        logonRequest.logonRequestData = New NewSessionManager.LogonRequestData
        logonRequest.logonRequestData.DomainCode = "EXT"
        logonRequest.logonRequestData.AgentName = UserID
        logonRequest.logonRequestData.Password = Password
        logonResponse = sessionmanager.Logon(logonRequest)

        If (Not IsDBNull(logonResponse) And Not IsDBNull(logonResponse.Signature) And (logonResponse.Signature) <> String.Empty) Then
            signature = logonResponse.Signature
            confirmedretrieve = 1
            MsgBox("Log-In successfully..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " :: Security :: ")
            txtReloc.Focus()
        Else
            MsgBox("Connection Time Out..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " Error Message ! ")
        End If





    End Sub


    Private Sub bookingretrieve()



        If Trim(txtReloc.Text) <> Nothing Then


            bookingrequest.GetBookingReqData = New NewBookingManager.GetBookingRequestData
            bookingrequest.Signature = signature

            bookingrequest.GetBookingReqData.GetBookingBy = BookingManager.GetBookingBy.RecordLocator
            bookingrequest.GetBookingReqData.GetByRecordLocator = New NewBookingManager.GetByRecordLocator
            bookingrequest.Signature = signature


            bookingrequest.GetBookingReqData.GetBookingBy = BookingManager.GetBookingBy.RecordLocator
            bookingrequest.GetBookingReqData.GetByRecordLocator = New NewBookingManager.GetByRecordLocator
            bookingrequest.GetBookingReqData.GetByRecordLocator.RecordLocator = Trim(txtReloc.Text)

            Response = bookingAPI.GetBooking(bookingrequest)
            booking = Response.Booking


            If (Not IsDBNull(booking) And Not (booking Is Nothing)) Then

                LabelBookingRef.Text = booking.RecordLocator
                LabelBDate.Text = (booking.BookingInfo.BookingDate).ToLongDateString

                '' booking Status
                If (booking.BookingInfo.BookingStatus = BookingManager.BookingStatus.Confirmed) Then
                    Rd_confirmed.Checked = True
                    LblBookingDes.Text = "Booking has been committed and is not on hold. The booking has unflown journeys."
                End If

                If (booking.BookingInfo.BookingStatus = BookingManager.BookingStatus.Closed) Then
                    Rd_Closed.Checked = True
                    LblBookingDes.Text = "All journeys on the booking have been flown."
                End If

                If (booking.BookingInfo.BookingStatus = BookingManager.BookingStatus.Hold) Then
                    Rd_Onhold.Checked = True
                    LblBookingDes.Text = "If all payments on a booking are declined."
                End If

                If (booking.BookingInfo.BookingStatus = BookingManager.BookingStatus.HoldCanceled) Then
                    Rd_Cancelled.Checked = True
                    LblBookingDes.Text = "Booking on hold have expired. All journeys are cancelled."
                End If



                ' Pax Details
                LabelPaxCount.Text = "(" & booking.PaxCount & ")"
                PaxList.Items.Clear()

                For i = 0 To booking.PaxCount - 1

                    If booking.Passengers(i).Names(0).LastName <> Nothing Then
                        LName = booking.Passengers(i).Names(0).LastName + ","
                    End If

                    If booking.Passengers(i).Names(0).FirstName <> Nothing Then
                        FName = booking.Passengers(i).Names(0).FirstName + " "
                    End If

                    If booking.Passengers(i).Names(0).MiddleName <> Nothing Then
                        MName = booking.Passengers(i).Names(0).MiddleName + " "
                    End If

                    If booking.Passengers(i).Names(0).Suffix <> Nothing Then
                        SName = booking.Passengers(i).Names(0).Suffix + " "
                    End If

                    If booking.Passengers(i).Names(0).Title <> Nothing Then
                        TName = booking.Passengers(i).Names(0).Title
                    End If

                    If booking.Passengers(i).PassengerTypeInfos(0).PaxType <> Nothing Then
                        PType = " (" + booking.Passengers(i).PassengerTypeInfos(0).PaxType + ")"
                    End If

                    PaxList.Items.Add(i & ". " & LName & FName & MName & SName & TName & PType & vbCrLf)

                Next


                'For Looping Based on the number of journey and SEgments
                ' FlightDetails.Items.Clear()

                'MsgBox(booking.Journeys.Count)
                'MsgBox(booking.Journeys(0).Segments.Count)

                For jo = 0 To booking.Journeys.Count - 1

                    For j = 0 To booking.Journeys(jo).Segments.Count - 1

                        DepStation = Trim(booking.Journeys(jo).Segments(j).DepartureStation) 'PadLeft(5, mPadding)
                        DepSTDate = (WeekdayName(Weekday(booking.Journeys(jo).Segments(j).STD)).Substring(0, 3)) & "," & Format(booking.Journeys(jo).Segments(j).STD, "ddMMMyy") ' "MM/dd/yyyy") '.PadLeft(25, mPadding))
                        DepSTTime = Format(booking.Journeys(jo).Segments(j).STD, "HH:mm") '"hh:mm tt") '.PadLeft(15, mPadding))
                        FlightNo = Trim((booking.Journeys(jo).Segments(j).FlightDesignator.FlightNumber)) '.PadLeft(15, mPadding)
                        Carrier = Trim((booking.Journeys(jo).Segments(j).FlightDesignator.CarrierCode)).PadLeft(5, mPadding)
                        ArvlStation = Trim((booking.Journeys(jo).Segments(j).ArrivalStation)) '.PadLeft(20, mPadding)
                        'ArvlSTDate = Format(booking.Journeys(j).Segments(0).STA, "MM/dd/yyyy") '.PadLeft(30, mPadding)
                        ArvlSTTime = Format(booking.Journeys(jo).Segments(j).STA, "HH:mm") '.PadLeft(15, mPadding)
                        BookingClass = Trim(booking.Journeys(jo).Segments(j).CabinOfService) '.PadLeft(10, mPadding)
                        Confirmed = Trim(booking.Journeys(jo).Segments(j).ActionStatusCode)

                        rtdFlightDetails.AppendText(Carrier & "-" & FlightNo & vbTab & DepSTDate & vbTab & DepStation & "-" & ArvlStation & vbTab & DepSTTime & "-" & ArvlSTTime & vbTab & Confirmed & vbCrLf)


                    Next

                Next







                '==============================
                ' Payments Details
                '==============================
                'Get Base Fare
                For j = 0 To booking.Journeys.Count - 1

                    For F = 0 To booking.Journeys(0).Segments(0).Fares(0).PaxFares(0).ServiceCharges.Count - 1
                        If (booking.Journeys(j).Segments(0).Fares(0).PaxFares(0).ServiceCharges(F).ChargeCode) = Nothing Then
                            BaseFare = BaseFare + (booking.Journeys(j).Segments(0).Fares(0).PaxFares(0).ServiceCharges(F).Amount)
                            Exit For
                        End If
                    Next
                Next


                If booking.Payments(0).PaymentMethodType = 1 Then
                    TxtPaymentType.Text = "Credit Card (" & booking.Payments(0).PaymentMethodCode & ") "
                Else
                    TxtPaymentType.Text = "Agency Credit"
                End If

                If booking.Payments(0).Status = 3 Then
                    TxtPaymentStatus.Text = "Confirmed"
                End If


                TxtPaymentDate.Text = (booking.Payments(0).ApprovalDate).ToShortDateString
                txtTransactionID.Text = booking.Payments(0).PaymentID
                TxtPaymentAmount.Text = booking.Payments(0).CollectedCurrencyCode & " " & Format(booking.Payments(0).CollectedAmount, "0.00")



                For u = 0 To booking.Journeys.Count - 1
                    For v = 0 To booking.Journeys(u).Segments.Count - 1
                        For w = 0 To booking.Journeys(u).Segments(v).Fares.Count - 1
                            For x = 0 To booking.Journeys(u).Segments(v).Fares(w).PaxFares.Count - 1
                                For y = 0 To booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges.Count - 1

                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = -1 Then
                                        Unmapped = Unmapped + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 0 Then
                                        FarePrice = FarePrice + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If

                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 1 Then
                                        Discount = Discount + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 2 Then
                                        IncludedTravelFee = IncludedTravelFee + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If

                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 3 Then
                                        IncludedTax = IncludedTax + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If

                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 4 Then

                                        If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeCode = "LIASF" Then
                                            PaymentTax1 = PaymentTax1 + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                        ElseIf (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeCode) = "LI" Then
                                            TravelFee = TravelFee + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                            'ElseIf (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeCode) = "LIASF" Then
                                            '    TravelFeeLI = TravelFeeLI + booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount
                                        ElseIf (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeCode) <> "LIASF" Or (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeCode) <> "LI" Then
                                            TravelFeeOther = TravelFeeOther + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                        End If
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 5 Then

                                        If (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeCode) = "PV" Then
                                            PaymentPV = PaymentPV + booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount
                                        Else
                                            Tax = Tax + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                        End If

                                    End If

                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 6 Then
                                        ServiceCharge = ServiceCharge + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If

                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 7 Then
                                        PromotionDiscount = PromotionDiscount + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 8 Then
                                        ConnectionAdjustmentAmount = ConnectionAdjustmentAmount + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 9 Then
                                        AddOnServicePrice = AddOnServicePrice + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 10 Then
                                        IncludedAddOnServiceFee = IncludedAddOnServiceFee + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 11 Then
                                        AddOnServiceFee = AddOnServiceFee + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 12 Then
                                        Calculated = Calculated + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 13 Then
                                        Note = Note + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If

                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 14 Then
                                        AddOnServiceMarkup = AddOnServiceMarkup + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If

                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 15 Then
                                        FareSurcharge = FareSurcharge + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 16 Then
                                        Loyalty = Loyalty + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 17 Then
                                        FarePoints = FarePoints + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 18 Then
                                        DiscountPoints = DiscountPoints + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If


                                    If booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).ChargeType = 19 Then
                                        AddOnServiceCancelFee = AddOnServiceCancelFee + (booking.Journeys(u).Segments(v).Fares(w).PaxFares(x).ServiceCharges(y).Amount)
                                    End If

                                Next

                            Next
                        Next
                    Next
                Next



                For a = 0 To booking.Passengers.Count - 1
                    For b = 0 To booking.Passengers(a).PassengerFees.Count - 1
                        For c = 0 To booking.Passengers(a).PassengerFees(b).ServiceCharges.Count - 1

                            'MsgBox(booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeCode)
                            'MsgBox(booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeDetail)
                            'MsgBox(booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount)



                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 18 Then
                                OtherC_DiscountPoints = OtherC_DiscountPoints + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 17 Then
                                OtherC_FarePoints = OtherC_FarePoints + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 16 Then
                                OtherC_Loyalty = OtherC_Loyalty + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 15 Then
                                OtherC_FareSurcharge = OtherC_FareSurcharge + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 14 Then
                                OtherC_AddOnServiceMarkup = OtherC_AddOnServiceMarkup + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            'If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 13 Then
                            '    OtherC_Note = OtherC_Note + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            'End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 12 Then
                                OtherC_Calculated = OtherC_Calculated + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 11 Then
                                OtherC_AddOnServiceFee = OtherC_AddOnServiceFee + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 10 Then
                                OtherC_IncludedAddOnServiceFee = OtherC_IncludedAddOnServiceFee + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 9 Then
                                OtherC_AddOnServicePrice = OtherC_AddOnServicePrice + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 8 Then
                                OtherC_ConnectionAdjustmentAmount = OtherC_ConnectionAdjustmentAmount + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 7 Then
                                OtherC_PromotionDiscount = OtherC_PromotionDiscount + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 6 Then

                                If (booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeCode = "SEAT") Then
                                    OtherC_ServiceChargeSEAT = OtherC_ServiceChargeSEAT + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                                    ' OtherChargers_PV = OtherChargers_PV + (booking.Passengers(0).PassengerFees(k).ServiceCharges(l).Amount * 0.12)
                                Else
                                    OtherC_ServiceCharge = OtherC_ServiceCharge + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount

                                End If

                            End If



                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 5 Then
                                OtherC_Tax = OtherC_Tax + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 4 Then
                                OtherC_TravelFee = OtherC_TravelFee + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 3 Then
                                OtherC_IncludedTax = OtherC_IncludedTax + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 2 Then
                                OtherC_IncludedTravelFee = OtherC_IncludedTravelFee + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If

                            'If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 1 Then
                            '    OtherC_Discount = OtherC_Discount + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            'End If

                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = 0 Then
                                OtherC_FarePrice = OtherC_FarePrice + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount

                            End If
                            If booking.Passengers(a).PassengerFees(b).ServiceCharges(c).ChargeType = -1 Then
                                OtherC_Unmapped = OtherC_Unmapped + booking.Passengers(a).PassengerFees(b).ServiceCharges(c).Amount
                            End If



                        Next
                    Next
                Next



                txtPaymentPF.Text = Format((FarePrice + ConnectionAdjustmentAmount) * booking.Passengers.Count(), "0.00")
                txtPaymentSF.Text = Format((FarePrice + ConnectionAdjustmentAmount) * booking.Passengers.Count(), "0.00")

                ' FOr MIS
                txtSellingFare.Text = Format((FarePrice + ConnectionAdjustmentAmount) * booking.Passengers.Count(), "0.00")
                txtLowFare.Text = Format((FarePrice + ConnectionAdjustmentAmount) * booking.Passengers.Count(), "0.00")
                txtRefFare.Text = Format((FarePrice + ConnectionAdjustmentAmount) * booking.Passengers.Count(), "0.00")
                'txtRCodeDenied.Text = "FS"
                'txtReasonCode.Text = "1Z"
                'txtMajorClass.Text = "Y"
                txtNoOfPax.Text = "1"
                txtNetTicket.Text = "Y"
                cboCurrAir.Text = booking.Payments(0).CollectedCurrencyCode


                txtPaymentTax1.Text = Format(PaymentTax1 * booking.Passengers.Count(), "0.00")
                'MsgBox((Unmapped + Discount + IncludedTravelFee + IncludedTax + TravelFee + TravelFeeLI + TravelFeeOther + Tax + ServiceCharge + PromotionDiscount + ConnectionAdjustmentAmount + AddOnServicePrice + IncludedAddOnServiceFee + AddOnServiceFee + Calculated + Note + AddOnServiceMarkup + FareSurcharge + Loyalty + FarePoints + DiscountPoints + AddOnServiceCancelFee + PaymentPV) * booking.Passengers.Count())
                'MsgBox((OtherC_DiscountPoints + OtherC_FarePoints + OtherC_Loyalty + OtherC_FareSurcharge + OtherC_AddOnServiceMarkup + OtherC_ServiceChargeSEAT + OtherChargers_PV + OtherC_Calculated + OtherC_AddOnServiceFee + OtherC_IncludedAddOnServiceFee + OtherC_AddOnServicePrice + OtherC_ConnectionAdjustmentAmount + OtherC_PromotionDiscount + OtherC_ServiceCharge + OtherC_Tax + OtherC_TravelFee + OtherC_IncludedTax + OtherC_IncludedTravelFee + OtherC_Discount + OtherC_FarePrice + OtherC_Unmapped) * booking.Passengers.Count())
                txtPaymentTax2.Text = Format(((Unmapped + Discount + IncludedTravelFee + IncludedTax + TravelFee + TravelFeeLI + TravelFeeOther + Tax + ServiceCharge + PromotionDiscount + AddOnServicePrice + IncludedAddOnServiceFee + AddOnServiceFee + Calculated + Note + AddOnServiceMarkup + FareSurcharge + Loyalty + FarePoints + DiscountPoints + AddOnServiceCancelFee + PaymentPV) * booking.Passengers.Count()) + ((OtherC_DiscountPoints + OtherC_FarePoints + OtherC_Loyalty + OtherC_FareSurcharge + OtherC_AddOnServiceMarkup + OtherC_ServiceChargeSEAT + OtherChargers_PV + OtherC_Calculated + OtherC_AddOnServiceFee + OtherC_IncludedAddOnServiceFee + OtherC_AddOnServicePrice + OtherC_ConnectionAdjustmentAmount + OtherC_PromotionDiscount + OtherC_ServiceCharge + OtherC_Tax + OtherC_TravelFee + OtherC_IncludedTax + OtherC_IncludedTravelFee + OtherC_FarePrice + OtherC_Unmapped)), "0.00")




            ElseIf ((booking Is Nothing) Or (IsDBNull(booking))) Then
                MsgBox(" Record locator not found..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " Error Message ! ")
                txtReloc.Focus()
            End If

        Else
            MsgBox(" Record locator must not be empty..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " Error Message ! ")
            txtReloc.Focus()
        End If



    End Sub



    Private Sub btnLogOn_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnLogOn.Click


        If RD_PartnerAgent.Checked = False And RD_CEBBiz.Checked = False Then
            MsgBox("Please select Partner Agents or CEB BIZ to Log-In..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " Error Message ! ")
        Else
            If Trim(txtUserId.Text) <> Nothing And Trim(txtPassword.Text) <> Nothing And Trim(txtOrgCode.Text) <> Nothing Then
                logOnSession()
            Else
                MsgBox("Incomplete details..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " Error Message ! ")
            End If
        End If






    End Sub


    Private Sub btnLogOut_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnLogOut.Click

        If (Not IsDBNull(logonResponse) And Not IsDBNull(logonResponse.Signature) And (logonResponse.Signature) <> String.Empty) Then

            rsponse = MsgBox("Are you sure you want to log-out?", MsgBoxStyle.Question + MsgBoxStyle.YesNo, ":::TAIS:::")
            If rsponse = MsgBoxResult.Yes Then
                logoutrequest = New NewSessionManager.LogoutRequest
                logoutrequest.Signature = logonResponse.Signature
                sessionmanager.Logout(logoutrequest)
                MsgBox("Successsfully Log-Out..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " :: Log-out :: ")
                Clear()
            ElseIf rsponse = MsgBoxResult.No Then
                Exit Sub
            End If

        Else
            MsgBox("Log-in time out..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " Error Message ! ")
        End If

    End Sub


    Private Sub btnRetrieve_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRetrieve.Click

        Clear()


        'If (Not IsDBNull(logonResponse) And Not IsDBNull(logonResponse.Signature) And (logonResponse.Signature) <> String.Empty) Then
        '    signature = logonResponse.Signature
        '    confirmedretrieve = 1
        '    MsgBox("Successful Log-In..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " :: Security :: ")
        '    txtReloc.Focus()
        'Else
        '    MsgBox("Connection Time Out..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, " Error Message ! ")
        'End If


        If (Not IsDBNull(logonResponse) And Not IsDBNull(logonResponse.Signature) And (logonResponse.Signature) <> String.Empty) Then
            signature = logonResponse.Signature
            bookingretrieve()
        Else
            MsgBox("Connection Time Out..Please logIn.", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "Time Out")
        End If


    End Sub



    Private Sub PaxList_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PaxList.SelectedIndexChanged

        Dim LPax As String = PaxList.SelectedItem.ToString()
        Dim GetPax_No As String() = LPax.Split(" ")

        Dim Bday As String = Nothing
        Dim GetBdate As String()
        Dim GetGender As String = Nothing

        If Trim(GetPax_No(0).ToString()) <> "" Or Trim(GetPax_No(0).ToString()) <> Nothing Then

            ClientSelect = GetPax_No(0)

            txtLastName.Text = booking.Passengers(GetPax_No(0)).Names(0).LastName
            txtFirstName.Text = booking.Passengers(GetPax_No(0)).Names(0).FirstName
            txtMiddleName.Text = booking.Passengers(GetPax_No(0)).Names(0).MiddleName
            txtSuffix.Text = booking.Passengers(GetPax_No(0)).Names(0).Suffix
            txtTitle.Text = booking.Passengers(GetPax_No(0)).Names(0).Title
            txtPaxType.Text = booking.Passengers(GetPax_No(0)).PassengerTypeInfos(0).PaxType

            Bday = booking.Passengers(GetPax_No(0)).PassengerTypeInfos(0).DOB
            GetBdate = Bday.Split("/")

            'Date of Birth

            If GetBdate(0) = "1" Then
                TxtMonth.Text = "January"
            ElseIf GetBdate(0) = "2" Then
                TxtMonth.Text = "February"
            ElseIf GetBdate(0) = "3" Then
                TxtMonth.Text = "March"
            ElseIf GetBdate(0) = "4" Then
                TxtMonth.Text = "April"
            ElseIf GetBdate(0) = "5" Then
                TxtMonth.Text = "May"
            ElseIf GetBdate(0) = "6" Then
                TxtMonth.Text = "June"
            ElseIf GetBdate(0) = "7" Then
                TxtMonth.Text = "July"
            ElseIf GetBdate(0) = "8" Then
                TxtMonth.Text = "August"
            ElseIf GetBdate(0) = "9" Then
                TxtMonth.Text = "September"
            ElseIf GetBdate(0) = "10" Then
                TxtMonth.Text = "October"
            ElseIf GetBdate(0) = "11" Then
                TxtMonth.Text = "November"
            ElseIf GetBdate(0) = "12" Then
                TxtMonth.Text = "December"
            End If

            txtDay.Text = GetBdate(1)
            txtyear.Text = GetBdate(2)

            'Gender
            GetGender = booking.Passengers(GetPax_No(0)).PassengerInfos(0).Gender

            If GetGender = 1 Then
                rdFemale.Checked = True
            Else
                rdMale.Checked = True
            End If


        End If

    End Sub

    Private Sub processair()

        'Dim domain, username, passwordStr, remoteServerName As String
        'Dim password As New Security.SecureString
        'Dim command As New Process

        'domain = "philscan.com"
        'username = "administrator"
        'passwordStr = "3m@100716"
        'remoteServerName = "ps-fs"
        'Dim impersonator As New AliasAccount(username, passwordStr)

        'For Each c As Char In passwordStr.ToCharArray
        '    password.AppendChar(c)
        'Next

        'command.StartInfo.FileName = "explorer.exe"
        'command.StartInfo.Arguments = "\\192.168.0.6"
        'command.StartInfo.UserName = username
        'command.StartInfo.Password = password
        'command.StartInfo.Domain = domain
        'command.StartInfo.Verb = "open"
        'command.StartInfo.UseShellExecute = False
        'impersonator.BeginImpersonation()
        'command.Start()

        System.Diagnostics.Process.Start("net.exe", "use K: \\192.168.0.6\GDS Air Files\CAPI-Original /USER:<philscan\administrator> <3m@100716>")

        Dim strFilename As String = Nothing
        Dim uniqFilename As String = Nothing
        Dim ctrsegment As Integer = 0
        Dim t As Integer = 0

        strFilename = Format(Now, "hhmmss")
        uniqFilename = "5J" & strFilename & ".txt"

        If Trim(txtBA.Text) = Nothing Or Trim(txtBA.Text) = "" Then
            MsgBox("Please Log-In or Contact Administrator...", , ":::TAIS:::")
            TabCAPI.SelectedIndex = 0
            txtAgentId.Focus()

        ElseIf (Trim(txtClientNo.Text) = Nothing) Then
            MsgBox("Client Number must not be Empty...", , ":::TAIS:::")
            TabCAPI.SelectedIndex = 0
            cboClient.Focus()

        ElseIf (Trim(cboTicketingAgent.Text) = Nothing) Then
            MsgBox("Ticketing Agent must not be Empty...", , ":::TAIS:::")
            TabCAPI.SelectedIndex = 0
            cboTicketingAgent.Focus()

        ElseIf (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 0) And (DGW1.Rows.Count = 0 Or DGW1.Columns.Count = 13) Then
            MsgBox("Incomplete details for Non-Air Transactions.. ", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
            TabCAPI.SelectedIndex = 2


        ElseIf (Trim(LabelBookingRef.Text) = Nothing) Then
            MsgBox("Cebu Pacific Record locator must not be Empty...", , ":::TAIS:::")
            TabCAPI.SelectedIndex = 9
            txtReloc.Focus()

        ElseIf ((txtEmployeeNo.BackColor = Color.Yellow And Trim(txtEmployeeNo.Text) = Nothing) Or
                         (txtTravellerName.BackColor = Color.Yellow And Trim(txtTravellerName.Text) = Nothing) Or
                         (txtLowFare.BackColor = Color.Yellow And Trim(txtLowFare.Text) = Nothing) Or
                         (txtCustSpecLowFare.BackColor = Color.Yellow And Trim(txtCustSpecLowFare.Text) = Nothing) Or
                         (txtCustSpecHighFare.BackColor = Color.Yellow And Trim(txtCustSpecHighFare.Text) = Nothing) Or
                         (txtRefFare.BackColor = Color.Yellow And Trim(txtRefFare.Text) = Nothing) Or
                          (txtTravellerStat.BackColor = Color.Yellow And Trim(txtTravellerStat.Text) = Nothing) Or
                         (txtCostCenterCode.BackColor = Color.Yellow And Trim(txtCostCenterCode.Text) = Nothing) Or
                         (txtProjectNo.BackColor = Color.Yellow And Trim(txtProjectNo.Text) = Nothing) Or
                         (txtDeptNo.BackColor = Color.Yellow And Trim(txtDeptNo.Text) = Nothing) Or
                         (txtOrderRef.BackColor = Color.Yellow And Trim(txtOrderRef.Text) = Nothing) Or
                         (txtApprover.BackColor = Color.Yellow And Trim(txtApprover.Text) = Nothing) Or
                         (txtApproverCode.BackColor = Color.Yellow And Trim(txtApproverCode.Text) = Nothing) Or
                         (txtMgrSuperior.BackColor = Color.Yellow And Trim(txtMgrSuperior.Text) = Nothing) Or
                         (txtReasonofTrip.BackColor = Color.Yellow And Trim(txtReasonofTrip.Text) = Nothing) Or
                         (txtMajorClass.BackColor = Color.Yellow And Trim(txtMajorClass.Text) = Nothing) Or
                         (txtStopOverTRF.BackColor = Color.Yellow And Trim(txtStopOverTRF.Text) = Nothing) Or
                         (txtTourCode.BackColor = Color.Yellow And Trim(txtTourCode.Text) = Nothing) Or
                         (txtFFLYR.BackColor = Color.Yellow And Trim(txtFFLYR.Text) = Nothing) Or
                         (txtHotelReasonCD.BackColor = Color.Yellow And Trim(txtHotelReasonCD.Text) = Nothing) Or
                         (txtHotelBookedF_N.BackColor = Color.Yellow And Trim(txtHotelBookedF_N.Text) = Nothing) Or
                         (txtAirNoReasonCD.BackColor = Color.Yellow And Trim(txtAirNoReasonCD.Text) = Nothing) Or
                         (txtCarBookedFlag.BackColor = Color.Yellow And Trim(txtCarBookedFlag.Text) = Nothing) Or
                         (txtSalesChannel.BackColor = Color.Yellow And Trim(txtSalesChannel.Text) = Nothing) Or
                         (txtRecordType.BackColor = Color.Yellow And Trim(txtRecordType.Text) = Nothing) Or
                         (txtCSData1.BackColor = Color.Yellow And Trim(txtCSData1.Text) = Nothing) Or
                         (txtCSData2.BackColor = Color.Yellow And Trim(txtCSData2.Text) = Nothing) Or
                         (txtCSData3.BackColor = Color.Yellow And Trim(txtCSData3.Text) = Nothing) Or
                         (txtCSData4.BackColor = Color.Yellow And Trim(txtCSData4.Text) = Nothing) Or
                          (txtCSData5.BackColor = Color.Yellow And Trim(txtCSData5.Text) = Nothing) Or
                         (txtCSData6.BackColor = Color.Yellow And Trim(txtCSData6.Text) = Nothing) Or
                         (txtCSData7.BackColor = Color.Yellow And Trim(txtCSData7.Text) = Nothing) Or
                         (txtCSData8.BackColor = Color.Yellow And Trim(txtCSData8.Text) = Nothing) Or
                         (txtCSData12.BackColor = Color.Yellow And Trim(txtCSData12.Text) = Nothing)) And (Trim(txtAccess.Text) = "1") Then

            MsgBox("kindly fill up all MIS Mandatory Fields and please double check the conditional statement..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
            TabCAPI.SelectedIndex = 4


        ElseIf ((txtReasonCode.BackColor = Color.Yellow And Trim(txtReasonCode.Text) = Nothing) Or
               (txtRCodeDenied.BackColor = Color.Yellow And Trim(txtRCodeDenied.Text) = Nothing)) And (Trim(txtAccess.Text) = "1") Then

            MsgBox("Please fill up Fare Type Reason Codes..", MsgBoxStyle.Information + MsgBoxStyle.OkOnly, "::TAIS::")
            TabCAPI.SelectedIndex = 1


        Else


            If txtLastName.Text <> Nothing And txtFirstName.Text <> Nothing Then

                Dim ow As StreamWriter = File.CreateText(LabelAirPath.Text & "\" & uniqFilename)

                ow.WriteLine("AIR-BLK207;IM;;")
                ow.WriteLine("MUC1A " & Trim(LabelBookingRef.Text) & "002;0101;MNLPH27FB;28303144;MNLPH27FB;28303144;MNLPH27FB;28303144;MNLPH210M;28300974;;;;;;;;;;;;;;;;;;;;;;")
                ow.WriteLine("A-")
                ow.WriteLine("B-")
                ow.WriteLine("C-")
                ow.WriteLine("D-" & Format(booking.BookingInfo.BookingDate, "yyMMdd") & ";" & Format(Date.Now, "yyMMdd") & ";" & Format(Date.Now, "yyMMdd"))
                ' Itinerary
                ctrsegment = 2

                For jo = 0 To booking.Journeys.Count - 1

                    For j = 0 To booking.Journeys(jo).Segments.Count - 1
                        DepStation = Trim(booking.Journeys(jo).Segments(j).DepartureStation)
                        DepSTDate = Format(booking.Journeys(jo).Segments(j).STD, "ddMMM")
                        DepSTTime = Format(booking.Journeys(jo).Segments(j).STD, "HHmm")
                        FlightNo = Trim((booking.Journeys(jo).Segments(j).FlightDesignator.FlightNumber))
                        Carrier = Trim((booking.Journeys(jo).Segments(j).FlightDesignator.CarrierCode))
                        ArvlStation = Trim((booking.Journeys(jo).Segments(j).ArrivalStation))
                        ArvlSTDate = Format(booking.Journeys(jo).Segments(j).STD, "ddMMM")
                        ArvlSTTime = Format(booking.Journeys(jo).Segments(j).STA, "HHmm")
                        BookingClass = Trim(booking.Journeys(jo).Segments(j).CabinOfService)
                        Confirmed = Trim(booking.Journeys(jo).Segments(j).ActionStatusCode)

                        If (FlightNo.Length) = 3 Then
                            ow.WriteLine("H-00" & j + 1 & ";00" & ctrsegment & "O" & DepStation & ";                 ;" & ArvlStation & ";                 ;" & Carrier & "    0" & FlightNo & " " & BookingClass & " " & BookingClass & " " & DepSTDate & DepSTTime & " " & ArvlSTTime & " " & ArvlSTDate & ";" & Confirmed & "01")
                        ElseIf (FlightNo.Length) = 4 Then
                            ow.WriteLine("H-00" & j + 1 & ";00" & ctrsegment & "O" & DepStation & ";                 ;" & ArvlStation & ";                 ;" & Carrier & "    " & FlightNo & " " & BookingClass & " " & BookingClass & " " & DepSTDate & DepSTTime & " " & ArvlSTTime & " " & ArvlSTDate & ";" & Confirmed & "01")
                        End If

                        ctrsegment = ctrsegment + 1

                    Next

                Next

                ow.WriteLine("U-")


                If booking.Passengers(ClientSelect).Names(0).LastName <> Nothing Then
                    LName = booking.Passengers(ClientSelect).Names(0).LastName + "/"
                End If

                If booking.Passengers(ClientSelect).Names(0).FirstName <> Nothing Then
                    FName = booking.Passengers(ClientSelect).Names(0).FirstName + " "
                End If

                If booking.Passengers(ClientSelect).Names(0).MiddleName <> Nothing Then
                    MName = booking.Passengers(ClientSelect).Names(0).MiddleName + " "
                End If

                If booking.Passengers(ClientSelect).Names(0).Suffix <> Nothing Then
                    SName = booking.Passengers(ClientSelect).Names(0).Suffix + " "
                End If

                If booking.Passengers(ClientSelect).Names(0).Title <> Nothing Then
                    TName = booking.Passengers(ClientSelect).Names(0).Title
                End If

                ow.WriteLine("I-001" & ";01" & LName & FName & MName & SName & TName)

                ow.WriteLine("K-")
                ow.WriteLine("KNTI; " & booking.Payments(0).CollectedCurrencyCode & (txtPaymentTax1.Text / booking.PaxCount) & " ; " & booking.Payments(0).CollectedCurrencyCode & (txtPaymentTax2.Text / booking.PaxCount))
                ow.WriteLine("L-")
                ow.WriteLine("M-")
                ow.WriteLine("O-")
                ow.WriteLine("Q-")

                ' Ticket Number Info

                'If (txtTransactionID.Text).Length <= 8 Then
                ow.WriteLine("T-K203-" & ClientSelect & txtTransactionID.Text)
                'ElseIf (txtTransactionID.Text).Length = 9 Then
                '    ow.WriteLine("T-K203-0" & txtTransactionID.Text)
                'ElseIf (txtTransactionID.Text).Length = 10 Then
                '    ow.WriteLine("T-K203-" & txtTransactionID.Text)
                'ElseIf (txtTransactionID.Text).Length > 10 Then
                '    ow.WriteLine("T-K203-" & (txtTransactionID.Text).Substring(txtTransactionID.Text.Length - 10))
                'End If

                ' Air Transactions
                If Trim(txtClientNo.Text) <> Nothing Then
                    ow.WriteLine("RM*CN/" & strClientNumber)
                End If

                If Trim(txtDiv.Text) <> Nothing Then
                    ow.WriteLine("RM*DIV/" & Trim(txtDivNo.Text))
                End If

                If Trim(txtBA.Text) <> Nothing Then
                    ow.WriteLine("RM*BA/" & BA.Remove(3, 1).Insert(3, "2"))
                End If

                If Trim(cboTicketingAgent.Text) <> Nothing Then
                    ow.WriteLine("RM*TA/" & cboTicketingAgent.Text.Remove(3, 1).Insert(3, "2"))
                End If

                ow.WriteLine("RM*NA/203/PC1/V10000029")

                If Trim(txtPaymentPF.Text) <> Nothing Then
                    ow.WriteLine("RM*PF/" & Trim(txtPaymentPF.Text) / booking.PaxCount)
                End If

                If Trim(txtPaymentSF.Text) <> Nothing Then
                    ow.WriteLine("RM*SF/" & Trim(txtPaymentSF.Text) / booking.PaxCount)
                End If

                If Trim(txtRefFare.Text) <> Nothing Then
                    ow.WriteLine("RM*RF/" & Trim(txtRefFare.Text))
                End If

                If Trim(txtLowFare.Text) <> Nothing Then
                    ow.WriteLine("RM*LF/" & Trim(txtLowFare.Text))
                End If

                If Trim(txtExpCode.Text) <> Nothing Then
                    ow.WriteLine("RM*EC/" & Trim(txtExpCode.Text))
                End If

                If Trim(txtCommAmt.Text) <> Nothing Then
                    ow.WriteLine("RM*CM/" & Trim(txtCommAmt.Text))
                End If

                If Trim(txtComPercentage.Text) <> Nothing Then
                    ow.WriteLine("RM*CM/P" & Trim(txtComPercentage.Text))
                End If

                If Trim(cboBookerName.Text) <> Nothing Then
                    ow.WriteLine("RM*CD/" & Trim(cboBookerName.Text))
                End If

                If Trim(txtAuthorizedNo.Text) <> Nothing Then
                    ow.WriteLine("RM*PO/" & Trim(txtAuthorizedNo.Text))
                End If

                If Trim(txtCCGL.Text) <> Nothing Then
                    ow.WriteLine("RM*GSA/" & Trim(txtCCGL.Text))
                End If

                If Trim(txtLineNo.Text) <> Nothing Then
                    ow.WriteLine("RM*GRP/" & Trim(txtLineNo.Text))
                End If

                ' Non Air Transactions
                '=======================================
                '==Convertion for Non-Air Transactions
                '=======================================

                If DGW1.Rows.Count <> 0 And DGW1.Columns.Count <> 0 Then

                    For i = 0 To DGW1.Rows.Count - 1

                        For x = 0 To DGW1.Columns.Count - 1

                            If x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                NoPax = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                NoPax = ""
                            End If

                            If x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFPCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFPCode = ""
                            End If

                            If x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFVCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFVCode = ""
                            End If

                            If x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCPercentage = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCPercentage = ""

                            End If

                            If x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCurr = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCurr = ""
                            End If

                            If x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFCostAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFCostAmt = ""

                            End If

                            If x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                TFSFAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                TFSFAmt = ""
                            End If

                            If x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                DIn = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf (x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "") Then
                                DIn = ""
                            End If

                            If x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                Dout = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                Dout = ""
                            End If

                            If DIn <> "" And Dout <> "" Then
                                DTvl = "/TVL" & Trim(DIn) & "-" & Trim(Dout)
                            ElseIf DIn <> "" And Dout = "" Then
                                DTvl = "/TVL" & Trim(DIn)
                            Else
                                DTvl = ""
                            End If

                            If x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSRf = "/R" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSRf = ""
                            End If

                            If x = 10 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSLf = "/L" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSLf = ""
                            End If

                            If x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                MSEc = "/E" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                MSEc = ""
                            End If

                            If x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                proType = "*" & i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                            ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                proType = ""
                            End If

                            If x = 12 Then

                                TF = Trim("PC" & TFPCode & "/V" & TFVCode & "/CP" & TFCPercentage & "/A" & TFCurr & TFCostAmt & "/SF" & TFSFAmt & MSRf & MSLf & MSEc & DTvl & "/NP" & NoPax)
                                ow.WriteLine("RM*MS/" + TF)

                                If proType <> Nothing Then
                                    ow.WriteLine("RM*FF5/" + proType)
                                End If

                            End If

                            If x = 13 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then

                                FSegmentType = "*" & Trim(txtNoofTkt.Text) + i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)

                                If Trim(FSegmentType) <> Nothing Then
                                    ow.WriteLine("RM*FF2/" + FSegmentType)
                                End If

                            ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                FSegmentType = ""
                            End If

                            proType = ""

                        Next

                    Next

                End If


                '=====Check Flag Segment========
                If RdDom.Checked = True Then
                    ow.WriteLine("RM*FF1/" & "BSP-Domestic")
                ElseIf RdIntl.Checked = True Then
                    ow.WriteLine("RM*FF1/" & "BSP-International")
                ElseIf RdReg.Checked = True Then
                    ow.WriteLine("RM*FF1/" & "BSP-Regional")
                End If


                '=====Check travel Type Segment========
                If MRdom.Checked = True Then
                    ow.WriteLine("RM*FF2/" & "Non BSP-Domestic")
                ElseIf MRIntl.Checked = True Then
                    ow.WriteLine("RM*FF2/" & "Non BSP-International")
                ElseIf MRReg.Checked = True Then
                    ow.WriteLine("RM*FF2/" & "Non BSP-Regional")
                End If


                If Trim(txtTBSNo.Text) <> Nothing Then
                    ow.WriteLine("RM*FF3/" & Trim(txtTBSNo.Text))
                End If

                If Trim(txtEmployee.Text) <> Nothing Then
                    ow.WriteLine("RM*FF4/" & Trim(txtEmployee.Text))
                End If


                If chkOffSigner.Checked = True Then
                    ow.WriteLine("RM*FF6/" & "Off-Signer")
                ElseIf chkOnSigner.Checked = True Then
                    ow.WriteLine("RM*FF6/" & "On-Signer")
                ElseIf chkOffline.Checked = True Then
                    ow.WriteLine("RM*FF6/" & "Offline")
                End If


                If Trim(cboConventionName.Text) <> Nothing Then
                    ow.WriteLine("RM*FF7/" & Trim(cboConventionName.Text))
                End If


                If Trim(txtHotelName.Text) <> Nothing Then
                    ow.WriteLine("RM*FF18/" & Trim(txtHotelName.Text))
                End If

                If Trim(txtConventionPlace.Text) <> Nothing Then
                    ow.WriteLine("RM*FF19/" & Trim(txtConventionPlace.Text))
                End If


                If Trim(txtDateofConvention.Text) <> Nothing Then
                    ow.WriteLine("RM*FF20/" & Trim(txtDateofConvention.Text))
                End If

                If Trim(txtccDetails.Text) <> Nothing Then
                    ow.WriteLine("RM*FF22/" & Trim(txtccDetails.Text))
                End If



                '==========================================
                ' MIS Information
                '==========================================

                If Trim(txtGlobalCustNo.Text) <> Nothing Or Trim(txtLocalCustNo.Text) <> Nothing Or Trim(txtEmployeeNo.Text) <> Nothing Then

                    ow.WriteLine("RM*FF30/" & Trim(txtGlobalCustNo.Text))

                    If Trim(txtLocalCustNo.Text) <> Nothing Then
                        ow.WriteLine("RM*FF31/" & Trim(txtLocalCustNo.Text))
                    End If

                    If Trim(txtEmployeeNo.Text) <> Nothing Then
                        ow.WriteLine("RM*FF32/" & Trim(txtEmployeeNo.Text))
                    End If


                    If Trim(txtTravellerStat.Text) <> Nothing Then
                        ow.WriteLine("RM*FF33/" & Trim(txtTravellerStat.Text))

                    End If

                    If Trim(txtCostCenterCode.Text) <> Nothing Then
                        ow.WriteLine("RM*FF34/" & Trim(txtCostCenterCode.Text))
                    End If

                    If Trim(txtProjectNo.Text) <> Nothing Then
                        ow.WriteLine("RM*FF35/" & Trim(txtProjectNo.Text))
                    End If

                    If Trim(txtDeptNo.Text) <> Nothing Then
                        ow.WriteLine("RM*FF36/" & Trim(txtDeptNo.Text))
                    End If

                    If Trim(txtOrderRef.Text) <> Nothing Then
                        ow.WriteLine("RM*FF37/" & Trim(txtOrderRef.Text))
                    End If

                    If Trim(txtApprover.Text) <> Nothing Then
                        ow.WriteLine("RM*FF38/" & Trim(txtApprover.Text))
                    End If

                    If Trim(txtApproverCode.Text) <> Nothing Then
                        ow.WriteLine("RM*FF39/" & Trim(txtApproverCode.Text))
                    End If

                    If Trim(txtMgrSuperior.Text) <> Nothing Then
                        ow.WriteLine("RM*FF40/" & Trim(txtMgrSuperior.Text))
                    End If

                    If Trim(txtReasonofTrip.Text) <> Nothing Then
                        ow.WriteLine("RM*FF41/" & Trim(txtReasonofTrip.Text))
                    End If

                    If Trim(txtMajorClass.Text) <> Nothing Then
                        ow.WriteLine("RM*FF42/" & Trim(txtMajorClass.Text))
                    End If

                    If Trim(txtStopOverTRF.Text) <> Nothing Then
                        ow.WriteLine("RM*FF43/" & Trim(txtStopOverTRF.Text))
                    End If

                    If Trim(txtTourCode.Text) <> Nothing Then
                        ow.WriteLine("RM*FF44/" & Trim(txtTourCode.Text))
                    End If

                    If Trim(txtReasonCode.Text) <> Nothing Then
                        ow.WriteLine("RM*FF45/" & Trim(txtReasonCode.Text))
                    End If

                    If Trim(txtRCodeDenied.Text) <> Nothing Then
                        ow.WriteLine("RM*FF46/" & Trim(txtRCodeDenied.Text))
                    End If

                    If Trim(txtFFLYR.Text) <> Nothing Then
                        ow.WriteLine("RM*FF47/" & Trim(txtFFLYR.Text))
                    End If

                    If Trim(txtHotelBookedF_N.Text) <> Nothing Then
                        ow.WriteLine("RM*FF48/" & Trim(txtHotelBookedF_N.Text))
                    End If

                    If Trim(txtAirNoReasonCD.Text) <> Nothing Then
                        ow.WriteLine("RM*FF49/" & Trim(txtAirNoReasonCD.Text))
                    End If

                    If Trim(txtHotelReasonCD.Text) <> Nothing Then
                        ow.WriteLine("RM*FF50/" & Trim(txtHotelReasonCD.Text))
                    End If

                    If Trim(txtCarBookedFlag.Text) <> Nothing Then
                        ow.WriteLine("RM*FF51/" & Trim(txtCarBookedFlag.Text))
                    End If

                    If Trim(txtSalesChannel.Text) <> Nothing Then
                        ow.WriteLine("RM*FF52/" & Trim(txtSalesChannel.Text))
                    End If

                    If Trim(txtRecordType.Text) <> Nothing Then
                        ow.WriteLine("RM*FF53/" & Trim(txtRecordType.Text))
                    End If

                    If Trim(txtCSData1.Text) <> Nothing Then
                        ow.WriteLine("RM*FF54/" & Trim(txtCSData1.Text))
                    End If

                    If Trim(txtCSData2.Text) <> Nothing Then
                        ow.WriteLine("RM*FF55/" & Trim(txtCSData2.Text))
                    End If

                    If Trim(txtCSData3.Text) <> Nothing Then
                        ow.WriteLine("RM*FF56/" & Trim(txtCSData3.Text))
                    End If

                    If Trim(txtCSData4.Text) <> Nothing Then
                        ow.WriteLine("RM*FF57/" & Trim(txtCSData4.Text))
                    End If

                    If Trim(txtCSData5.Text) <> Nothing Then
                        ow.WriteLine("RM*FF62/" & Trim(txtCSData5.Text))
                    End If

                    If Trim(txtCSData6.Text) <> Nothing Then
                        ow.WriteLine("RM*FF61/" & Trim(txtCSData6.Text))
                    End If

                    If Trim(txtCSData7.Text) <> Nothing Then
                        ow.WriteLine("RM*FF59/" & Trim(txtCSData7.Text))
                    End If

                    If Trim(txtCSData8.Text) <> Nothing Then
                        ow.WriteLine("RM*FF60/" & Trim(txtCSData8.Text))
                    End If


                    If Trim(txtCSData12.Text) <> Nothing Then
                        ow.WriteLine("RM*FF58/" & Trim(txtCSData12.Text))
                    End If

                    If Trim(txtTripType.Text) <> Nothing Then
                        ow.WriteLine("RM*FF80/" & Trim(txtTripType.Text))
                    End If

                    If Trim(txtNetTicket.Text) <> Nothing Then
                        ow.WriteLine("RM*FF85/" & Trim(txtNetTicket.Text))
                    End If

                    If Trim(txtCustSpecLowFare.Text) <> Nothing Then
                        ow.WriteLine("RM*FF86/" & Trim(txtCustSpecLowFare.Text))
                    End If

                    If Trim(txtCustSpecHighFare.Text) <> Nothing Then
                        ow.WriteLine("RM*FF87/" & Trim(txtCustSpecHighFare.Text))
                    End If

                    If Trim(txt_eticket.Text) <> Nothing Then
                        ow.WriteLine("RM*FF88/" & Trim(txt_eticket.Text))
                    End If


                End If


                ow.WriteLine("ENDX")
                ow.Close()

                MsgBox("Air File sent! ", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":: Air File ::")

            Else


                Dim ow As StreamWriter = File.CreateText(LabelAirPath.Text & "\" & uniqFilename)

                ow.WriteLine("AIR-BLK207;IM;;")
                ow.WriteLine("MUC1A " & Trim(LabelBookingRef.Text) & "002;0101;MNLPH27FB;28303144;MNLPH27FB;28303144;MNLPH27FB;28303144;MNLPH210M;28300974;;;;;;;;;;;;;;;;;;;;;;")
                ow.WriteLine("A-")
                ow.WriteLine("B-")
                ow.WriteLine("C-")
                ow.WriteLine("D-" & Format(booking.BookingInfo.BookingDate, "yyMMdd") & ";" & Format(Date.Now, "yyMMdd") & ";" & Format(Date.Now, "yyMMdd"))
                ' Itinerary
                ctrsegment = 2


                For jo = 0 To booking.Journeys.Count - 1

                    For j = 0 To booking.Journeys(jo).Segments.Count - 1

                        DepStation = Trim(booking.Journeys(jo).Segments(j).DepartureStation)
                        DepSTDate = Format(booking.Journeys(jo).Segments(j).STD, "ddMMM")
                        DepSTTime = Format(booking.Journeys(jo).Segments(j).STD, "HHmm")
                        FlightNo = Trim((booking.Journeys(jo).Segments(j).FlightDesignator.FlightNumber))
                        Carrier = Trim((booking.Journeys(jo).Segments(j).FlightDesignator.CarrierCode))
                        ArvlStation = Trim((booking.Journeys(jo).Segments(j).ArrivalStation))
                        ArvlSTDate = Format(booking.Journeys(jo).Segments(j).STD, "ddMMM")
                        ArvlSTTime = Format(booking.Journeys(jo).Segments(j).STA, "HHmm")
                        BookingClass = Trim(booking.Journeys(jo).Segments(j).CabinOfService)
                        Confirmed = Trim(booking.Journeys(jo).Segments(j).ActionStatusCode)

                        If (FlightNo.Length) = 3 Then
                            ow.WriteLine("H-00" & j + 1 & ";00" & ctrsegment & "O" & DepStation & ";                 ;" & ArvlStation & ";                 ;" & Carrier & "    0" & FlightNo & " " & BookingClass & " " & BookingClass & " " & DepSTDate & DepSTTime & " " & ArvlSTTime & " " & ArvlSTDate & ";" & Confirmed & "01")
                        ElseIf (FlightNo.Length) = 4 Then
                            ow.WriteLine("H-00" & j + 1 & ";00" & ctrsegment & "O" & DepStation & ";                 ;" & ArvlStation & ";                 ;" & Carrier & "    " & FlightNo & " " & BookingClass & " " & BookingClass & " " & DepSTDate & DepSTTime & " " & ArvlSTTime & " " & ArvlSTDate & ";" & Confirmed & "01")
                        End If

                        ctrsegment = ctrsegment + 1
                    Next

                Next

                ow.WriteLine("U-")


                'Name of Passenger

                For t = 0 To booking.PaxCount - 1

                    If booking.Passengers(t).Names(0).LastName <> Nothing Then
                        LName = booking.Passengers(t).Names(0).LastName + "/"
                    End If

                    If booking.Passengers(t).Names(0).FirstName <> Nothing Then
                        FName = booking.Passengers(t).Names(0).FirstName + " "
                    End If

                    If booking.Passengers(t).Names(0).MiddleName <> Nothing Then
                        MName = booking.Passengers(t).Names(0).MiddleName + " "
                    End If

                    If booking.Passengers(t).Names(0).Suffix <> Nothing Then
                        SName = booking.Passengers(t).Names(0).Suffix + " "
                    End If

                    If booking.Passengers(t).Names(0).Title <> Nothing Then
                        TName = booking.Passengers(t).Names(0).Title
                    End If

                    ow.WriteLine("I-00" & t + 1 & ";0" & t + 1 & LName & FName & MName & SName & TName)

                    ow.WriteLine("K-")
                    ow.WriteLine("KNTI; " & booking.Payments(0).CollectedCurrencyCode & (txtPaymentTax1.Text / booking.PaxCount) & " ; " & booking.Payments(0).CollectedCurrencyCode & (txtPaymentTax2.Text / booking.PaxCount))
                    ow.WriteLine("L-")
                    ow.WriteLine("M-")
                    ow.WriteLine("O-")
                    ow.WriteLine("Q-")

                    ' Ticket Number Info
                    ' Ticket Number Info

                    ow.WriteLine("T-K203-" & t & txtTransactionID.Text)
                    'If (txtTransactionID.Text).Length <= 8 Then
                    '    ow.WriteLine("T-K203-" & ClientSelect & txtTransactionID.Text)
                    'ElseIf (txtTransactionID.Text).Length = 9 Then
                    '    ow.WriteLine("T-K203-" & t & txtTransactionID.Text)
                    'ElseIf (txtTransactionID.Text).Length = 10 Then
                    '    ow.WriteLine("T-K203-" & txtTransactionID.Text)
                    'ElseIf (txtTransactionID.Text).Length > 10 Then
                    '    ow.WriteLine("T-K203-" & (txtTransactionID.Text).Substring(txtTransactionID.Text.Length - 10))
                    'End If

                    ' Air Transactions
                    If Trim(txtClientNo.Text) <> Nothing Then
                        ow.WriteLine("RM*CN/" & strClientNumber)
                    End If

                    If Trim(txtDiv.Text) <> Nothing Then
                        ow.WriteLine("RM*DIV/" & Trim(txtDivNo.Text))
                    End If

                    If Trim(txtBA.Text) <> Nothing Then
                        ow.WriteLine("RM*BA/" & BA.Remove(3, 1).Insert(3, "2"))
                    End If

                    If Trim(cboTicketingAgent.Text) <> Nothing Then
                        ow.WriteLine("RM*TA/" & cboTicketingAgent.Text.Remove(3, 1).Insert(3, "2"))
                    End If

                    ow.WriteLine("RM*NA/203/PC1/V10000029")

                    If Trim(txtPaymentPF.Text) <> Nothing Then
                        ow.WriteLine("RM*PF/" & Trim(txtPaymentPF.Text) / booking.PaxCount)
                    End If

                    If Trim(txtPaymentSF.Text) <> Nothing Then
                        ow.WriteLine("RM*SF/" & Trim(txtPaymentSF.Text) / booking.PaxCount)
                    End If

                    If Trim(txtRefFare.Text) <> Nothing Then
                        ow.WriteLine("RM*RF/" & Trim(txtRefFare.Text))
                    End If

                    If Trim(txtLowFare.Text) <> Nothing Then
                        ow.WriteLine("RM*LF/" & Trim(txtLowFare.Text))
                    End If

                    If Trim(txtExpCode.Text) <> Nothing Then
                        ow.WriteLine("RM*EC/" & Trim(txtExpCode.Text))
                    End If

                    If Trim(txtCommAmt.Text) <> Nothing Then
                        ow.WriteLine("RM*CM/" & Trim(txtCommAmt.Text))
                    End If

                    If Trim(txtComPercentage.Text) <> Nothing Then
                        ow.WriteLine("RM*CM/P" & Trim(txtComPercentage.Text))
                    End If

                    If Trim(cboBookerName.Text) <> Nothing Then
                        ow.WriteLine("RM*CD/" & Trim(cboBookerName.Text))
                    End If

                    If Trim(txtAuthorizedNo.Text) <> Nothing Then
                        ow.WriteLine("RM*PO/" & Trim(txtAuthorizedNo.Text))
                    End If

                    If Trim(txtCCGL.Text) <> Nothing Then
                        ow.WriteLine("RM*GSA/" & Trim(txtCCGL.Text))
                    End If

                    If Trim(txtLineNo.Text) <> Nothing Then
                        ow.WriteLine("RM*GRP/" & Trim(txtLineNo.Text))
                    End If

                    ' Non Air Transactions
                    '=======================================
                    '==Convertion for Non-Air Transactions
                    '=======================================

                    If DGW1.Rows.Count <> 0 And DGW1.Columns.Count <> 0 Then

                        For i = 0 To DGW1.Rows.Count - 1

                            For x = 0 To DGW1.Columns.Count - 1

                                If x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    NoPax = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 0 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    NoPax = ""
                                End If

                                If x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFPCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 1 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFPCode = ""
                                End If

                                If x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFVCode = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 2 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFVCode = ""
                                End If

                                If x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFCPercentage = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 3 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFCPercentage = ""

                                End If

                                If x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFCurr = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 4 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFCurr = ""
                                End If

                                If x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFCostAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 5 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFCostAmt = ""

                                End If

                                If x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    TFSFAmt = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 6 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    TFSFAmt = ""
                                End If

                                If x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    DIn = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf (x = 7 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "") Then
                                    DIn = ""
                                End If

                                If x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    Dout = Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 8 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    Dout = ""
                                End If

                                If DIn <> "" And Dout <> "" Then
                                    DTvl = "/TVL" & Trim(DIn) & "-" & Trim(Dout)
                                ElseIf DIn <> "" And Dout = "" Then
                                    DTvl = "/TVL" & Trim(DIn)
                                Else
                                    DTvl = ""
                                End If

                                If x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    MSRf = "/R" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    MSRf = ""
                                End If

                                If x = 10 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    MSLf = "/L" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 9 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    MSLf = ""
                                End If

                                If x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    MSEc = "/E" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 11 And Trim(DGW1.Rows.Item(i).Cells(x).Value) = "" Then
                                    MSEc = ""
                                End If

                                If x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    proType = "*" & i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)
                                ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    proType = ""
                                End If

                                If x = 12 Then

                                    TF = Trim("PC" & TFPCode & "/V" & TFVCode & "/CP" & TFCPercentage & "/A" & TFCurr & TFCostAmt & "/SF" & TFSFAmt & MSRf & MSLf & MSEc & DTvl & "/NP" & NoPax)
                                    ow.WriteLine("RM*MS/" + TF)

                                    If proType <> Nothing Then
                                        ow.WriteLine("RM*FF5/" + proType)
                                    End If

                                End If

                                If x = 13 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then

                                    FSegmentType = "*" & Trim(txtNoofTkt.Text) + i + 1 & "/" & Trim(DGW1.Rows.Item(i).Cells(x).Value)

                                    If Trim(FSegmentType) <> Nothing Then
                                        ow.WriteLine("RM*FF2/" + FSegmentType)
                                    End If

                                ElseIf x = 12 And Trim(DGW1.Rows.Item(i).Cells(x).Value) <> "" Then
                                    FSegmentType = ""
                                End If

                                proType = ""

                            Next

                        Next

                    End If


                    '=====Check Flag Segment========
                    If RdDom.Checked = True Then
                        ow.WriteLine("RM*FF1/" & "BSP-Domestic")
                    ElseIf RdIntl.Checked = True Then
                        ow.WriteLine("RM*FF1/" & "BSP-International")
                    ElseIf RdReg.Checked = True Then
                        ow.WriteLine("RM*FF1/" & "BSP-Regional")
                    End If


                    '=====Check travel Type Segment========
                    If MRdom.Checked = True Then
                        ow.WriteLine("RM*FF2/" & "Non BSP-Domestic")
                    ElseIf MRIntl.Checked = True Then
                        ow.WriteLine("RM*FF2/" & "Non BSP-International")
                    ElseIf MRReg.Checked = True Then
                        ow.WriteLine("RM*FF2/" & "Non BSP-Regional")
                    End If


                    If Trim(txtTBSNo.Text) <> Nothing Then
                        ow.WriteLine("RM*FF3/" & Trim(txtTBSNo.Text))
                    End If

                    If Trim(txtEmployee.Text) <> Nothing Then
                        ow.WriteLine("RM*FF4/" & Trim(txtEmployee.Text))
                    End If


                    If chkOffSigner.Checked = True Then
                        ow.WriteLine("RM*FF6/" & "Off-Signer")
                    ElseIf chkOnSigner.Checked = True Then
                        ow.WriteLine("RM*FF6/" & "On-Signer")
                    ElseIf chkOffline.Checked = True Then
                        ow.WriteLine("RM*FF6/" & "Offline")
                    End If


                    If Trim(cboConventionName.Text) <> Nothing Then
                        ow.WriteLine("RM*FF7/" & Trim(cboConventionName.Text))
                    End If


                    If Trim(txtHotelName.Text) <> Nothing Then
                        ow.WriteLine("RM*FF18/" & Trim(txtHotelName.Text))
                    End If

                    If Trim(txtConventionPlace.Text) <> Nothing Then
                        ow.WriteLine("RM*FF19/" & Trim(txtConventionPlace.Text))
                    End If


                    If Trim(txtDateofConvention.Text) <> Nothing Then
                        ow.WriteLine("RM*FF20/" & Trim(txtDateofConvention.Text))
                    End If

                    If Trim(txtccDetails.Text) <> Nothing Then
                        ow.WriteLine("RM*FF22/" & Trim(txtccDetails.Text))
                    End If



                    '==========================================
                    ' MIS Information
                    '==========================================

                    If Trim(txtGlobalCustNo.Text) <> Nothing Or Trim(txtLocalCustNo.Text) <> Nothing Or Trim(txtEmployeeNo.Text) <> Nothing Then
                        ow.WriteLine("RM*FF30/" & Trim(txtGlobalCustNo.Text))

                        If Trim(txtLocalCustNo.Text) <> Nothing Then
                            ow.WriteLine("RM*FF31/" & Trim(txtLocalCustNo.Text))
                        End If

                        If Trim(txtEmployeeNo.Text) <> Nothing Then
                            ow.WriteLine("RM*FF32/" & Trim(txtEmployeeNo.Text))
                        End If


                        If Trim(txtTravellerStat.Text) <> Nothing Then
                            ow.WriteLine("RM*FF33/" & Trim(txtTravellerStat.Text))

                        End If

                        If Trim(txtCostCenterCode.Text) <> Nothing Then
                            ow.WriteLine("RM*FF34/" & Trim(txtCostCenterCode.Text))
                        End If

                        If Trim(txtProjectNo.Text) <> Nothing Then
                            ow.WriteLine("RM*FF35/" & Trim(txtProjectNo.Text))
                        End If

                        If Trim(txtDeptNo.Text) <> Nothing Then
                            ow.WriteLine("RM*FF36/" & Trim(txtDeptNo.Text))
                        End If

                        If Trim(txtOrderRef.Text) <> Nothing Then
                            ow.WriteLine("RM*FF37/" & Trim(txtOrderRef.Text))
                        End If

                        If Trim(txtApprover.Text) <> Nothing Then
                            ow.WriteLine("RM*FF38/" & Trim(txtApprover.Text))
                        End If

                        If Trim(txtApproverCode.Text) <> Nothing Then
                            ow.WriteLine("RM*FF39/" & Trim(txtApproverCode.Text))
                        End If

                        If Trim(txtMgrSuperior.Text) <> Nothing Then
                            ow.WriteLine("RM*FF40/" & Trim(txtMgrSuperior.Text))
                        End If

                        If Trim(txtReasonofTrip.Text) <> Nothing Then
                            ow.WriteLine("RM*FF41/" & Trim(txtReasonofTrip.Text))
                        End If

                        If Trim(txtMajorClass.Text) <> Nothing Then
                            ow.WriteLine("RM*FF42/" & Trim(txtMajorClass.Text))
                        End If

                        If Trim(txtStopOverTRF.Text) <> Nothing Then
                            ow.WriteLine("RM*FF43/" & Trim(txtStopOverTRF.Text))
                        End If

                        If Trim(txtTourCode.Text) <> Nothing Then
                            ow.WriteLine("RM*FF44/" & Trim(txtTourCode.Text))
                        End If

                        If Trim(txtReasonCode.Text) <> Nothing Then
                            ow.WriteLine("RM*FF45/" & Trim(txtReasonCode.Text))
                        End If

                        If Trim(txtRCodeDenied.Text) <> Nothing Then
                            ow.WriteLine("RM*FF46/" & Trim(txtRCodeDenied.Text))
                        End If

                        If Trim(txtFFLYR.Text) <> Nothing Then
                            ow.WriteLine("RM*FF47/" & Trim(txtFFLYR.Text))
                        End If

                        If Trim(txtHotelBookedF_N.Text) <> Nothing Then
                            ow.WriteLine("RM*FF48/" & Trim(txtHotelBookedF_N.Text))
                        End If

                        If Trim(txtAirNoReasonCD.Text) <> Nothing Then
                            ow.WriteLine("RM*FF49/" & Trim(txtAirNoReasonCD.Text))
                        End If

                        If Trim(txtHotelReasonCD.Text) <> Nothing Then
                            ow.WriteLine("RM*FF50/" & Trim(txtHotelReasonCD.Text))
                        End If

                        If Trim(txtCarBookedFlag.Text) <> Nothing Then
                            ow.WriteLine("RM*FF51/" & Trim(txtCarBookedFlag.Text))
                        End If

                        If Trim(txtSalesChannel.Text) <> Nothing Then
                            ow.WriteLine("RM*FF52/" & Trim(txtSalesChannel.Text))
                        End If

                        If Trim(txtRecordType.Text) <> Nothing Then
                            ow.WriteLine("RM*FF53/" & Trim(txtRecordType.Text))
                        End If

                        If Trim(txtCSData1.Text) <> Nothing Then
                            ow.WriteLine("RM*FF54/" & Trim(txtCSData1.Text))
                        End If

                        If Trim(txtCSData2.Text) <> Nothing Then
                            ow.WriteLine("RM*FF55/" & Trim(txtCSData2.Text))
                        End If

                        If Trim(txtCSData3.Text) <> Nothing Then
                            ow.WriteLine("RM*FF56/" & Trim(txtCSData3.Text))
                        End If

                        If Trim(txtCSData4.Text) <> Nothing Then
                            ow.WriteLine("RM*FF57/" & Trim(txtCSData4.Text))
                        End If

                        If Trim(txtCSData5.Text) <> Nothing Then
                            ow.WriteLine("RM*FF62/" & Trim(txtCSData5.Text))
                        End If

                        If Trim(txtCSData6.Text) <> Nothing Then
                            ow.WriteLine("RM*FF61/" & Trim(txtCSData6.Text))
                        End If

                        If Trim(txtCSData7.Text) <> Nothing Then
                            ow.WriteLine("RM*FF59/" & Trim(txtCSData7.Text))
                        End If

                        If Trim(txtCSData8.Text) <> Nothing Then
                            ow.WriteLine("RM*FF60/" & Trim(txtCSData8.Text))
                        End If


                        If Trim(txtCSData12.Text) <> Nothing Then
                            ow.WriteLine("RM*FF58/" & Trim(txtCSData12.Text))
                        End If

                        If Trim(txtTripType.Text) <> Nothing Then
                            ow.WriteLine("RM*FF80/" & Trim(txtTripType.Text))
                        End If

                        If Trim(txtNetTicket.Text) <> Nothing Then
                            ow.WriteLine("RM*FF85/" & Trim(txtNetTicket.Text))
                        End If

                        If Trim(txtCustSpecLowFare.Text) <> Nothing Then
                            ow.WriteLine("RM*FF86/" & Trim(txtCustSpecLowFare.Text))
                        End If

                        If Trim(txtCustSpecHighFare.Text) <> Nothing Then
                            ow.WriteLine("RM*FF87/" & Trim(txtCustSpecHighFare.Text))
                        End If

                        If Trim(txt_eticket.Text) <> Nothing Then
                            ow.WriteLine("RM*FF88/" & Trim(txt_eticket.Text))
                        End If

                    End If

                Next


                ow.WriteLine("ENDX")

                ow.Close()

                MsgBox("Air File sent! ", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":: Air File ::")

            End If

        End If

        'impersonator.EndImpersonation()

    End Sub

    Private Sub txtReloc_keydown(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtReloc.KeyDown
        Call Clear()
    End Sub

    Private Sub btnClearDetails_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClearDetails.Click
        Call Clear()
    End Sub

    Private Sub btnProcessAir_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnProcessAir.Click

        If (Not IsDBNull(logonResponse) And Not IsDBNull(logonResponse.Signature) And (logonResponse.Signature) <> String.Empty) Then
            rsponse = MsgBox("Process Air File ?", MsgBoxStyle.Question + MsgBoxStyle.YesNo, " ::: Air File :::")
            If rsponse = MsgBoxResult.Yes Then
                validateMISfields()
                processair()
            Else
                Exit Sub
            End If
        Else
            MsgBox("Connection Time Out..Please logIn.", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, "Time Out")
        End If

    End Sub

    Private Sub btnResetSession_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnResetSession.Click

        Dim request As NewBookingManager.ClearRequest = New NewBookingManager.ClearRequest
        request.Signature = signature

        If Not IsDBNull(request.Signature) And request.Signature <> Nothing Then
            bookingAPI.Clear(request)
        Else
            MsgBox("Please log-In...", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":: Time Out ::")
        End If

    End Sub


    Private Sub btnPWreset_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPWreset.Click

        UserID = Trim(txtUserId.Text)
        Password = Trim(txtPassword.Text)
        OrgCode = Trim(txtOrgCode.Text)

        If Trim(txtPWreset.Text) <> Nothing Then

            changePwRequest = New NewSessionManager.ChangePasswordRequest

            changePwRequest.logonRequestData = New NewSessionManager.LogonRequestData
            changePwRequest.logonRequestData.DomainCode = Domain
            changePwRequest.logonRequestData.AgentName = UserID
            changePwRequest.logonRequestData.Password = Password
            changePwRequest.newPassword = txtPWreset.Text
            changeresponse = sessionmanager.ChangePassword(changePwRequest)

            If (Not IsDBNull(changeresponse)) Or Not (changeresponse Is Nothing) Then
                MsgBox("You have successfully change your password", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":: Security Info ::")
            Else

                MsgBox("Connection Time Out", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":: Time Out ::")
            End If
        Else
            MsgBox("New Password is empty..", MsgBoxStyle.OkOnly + MsgBoxStyle.Information, ":: Security Check ::")
            txtPWreset.Focus()

        End If

    End Sub


    Private Sub btnClearPax_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClearPax.Click
        'Pax Info
        LabelPaxCount.Text = Nothing
        txtTitle.Text = Nothing
        txtLastName.Text = Nothing
        txtFirstName.Text = Nothing
        txtMiddleName.Text = Nothing
        txtSuffix.Text = Nothing

        'Birthday
        TxtMonth.Text = Nothing
        txtDay.Text = Nothing
        txtyear.Text = Nothing
        txtPaxType.Text = Nothing
        rdFemale.Checked = False
        rdMale.Checked = False

        ClientSelect = Nothing

    End Sub

    'Private Function t() As Integer
    '    Throw New NotImplementedException
    'End Function

    Private Sub btnAddClient_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddClient.Click

        Call FrmSpecSettings.SpecClients()
        Call FrmSpecSettings.SelectClientList()
        FrmSpecSettings.Show()
    End Sub

    Private Sub RD_PartnerAgent_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RD_PartnerAgent.CheckedChanged
        Dim OrgCodePartner As String
        OrgCodePartner = "28300974"

        check_RS_CAPI()
        SQL_QUERY = "Select * from TAIS_SERVER..CAPIAccess where OrgCode='" & OrgCodePartner & "'"
        RS_CAPI.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS_CAPI

            If Not RS_CAPI.EOF Then
                txtUserId.Text = Trim(RS_CAPI.Fields("UserID").Value).ToString()
                txtPassword.Text = Trim(RS_CAPI.Fields("Password").Value).ToString()
                txtOrgCode.Text = Trim(RS_CAPI.Fields("OrgCode").Value).ToString()
                LabelAirPath.Text = Trim(RS_CAPI.Fields("Path").Value).ToString()
            End If

            RS_CAPI.Close()
        End With

    End Sub


    Private Sub RD_CEBBiz_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RD_CEBBiz.CheckedChanged

        Dim OrgCodeCeBBiz As String
        OrgCodeCeBBiz = "33347757S"

        check_RS_CAPI()
        SQL_QUERY = "Select * from TAIS_SERVER..CAPIAccess where OrgCode='" & OrgCodeCeBBiz & "'"
        RS_CAPI.Open(SQL_QUERY, CNN, ADODB.CursorTypeEnum.adOpenDynamic, ADODB.LockTypeEnum.adLockOptimistic)

        With RS_CAPI

            If Not RS_CAPI.EOF Then
                txtUserId.Text = Trim(RS_CAPI.Fields("UserID").Value).ToString()
                txtPassword.Text = Trim(RS_CAPI.Fields("Password").Value).ToString()
                txtOrgCode.Text = Trim(RS_CAPI.Fields("OrgCode").Value).ToString()
                LabelAirPath.Text = Trim(RS_CAPI.Fields("Path").Value).ToString()
            End If

            RS_CAPI.Close()
        End With


    End Sub


    '--For GK Transactions Entry
    Private Sub btGK_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btGK.Click

        If booking.PaxCount = 0 Then
            MsgBox("No Details for GK transactions...", , ":::TAIS:::")
            txtReloc.Focus()
        ElseIf (Trim(txtRF.Text) = Nothing Or Trim(txtRF.Text) = "") Then
            MsgBox("RF Element Must Not Be Empty...", , ":::TAIS:::")
            TabCAPI.SelectedIndex = 0
            txtRF.Focus()
        Else


            For i = 0 To booking.PaxCount - 1

                If booking.Passengers(i).Names(0).LastName <> Nothing Then
                    LName = booking.Passengers(i).Names(0).LastName
                End If

                If booking.Passengers(i).Names(0).FirstName <> Nothing Then
                    FName = booking.Passengers(i).Names(0).FirstName
                End If

                If booking.Passengers(i).Names(0).Title <> Nothing Then
                    TName = booking.Passengers(i).Names(0).Title
                End If

                objSession.Send("NM1 " & LName & "/" & FName & " " & TName)

            Next


            For jo = 0 To booking.Journeys.Count - 1

                For j = 0 To booking.Journeys(jo).Segments.Count - 1

                    DepStation = Trim(booking.Journeys(jo).Segments(j).DepartureStation)
                    DepSTDate = Format(booking.Journeys(jo).Segments(j).STD, "ddMMM")
                    DepSTTime = Format(booking.Journeys(jo).Segments(j).STD, "HHmm")
                    FlightNo = Trim((booking.Journeys(jo).Segments(j).FlightDesignator.FlightNumber))
                    Carrier = Trim((booking.Journeys(jo).Segments(j).FlightDesignator.CarrierCode))
                    ArvlStation = Trim((booking.Journeys(jo).Segments(j).ArrivalStation))
                    ArvlSTDate = Format(booking.Journeys(jo).Segments(j).STD, "ddMMM")
                    ArvlSTTime = Format(booking.Journeys(jo).Segments(j).STA, "HHmm")
                    BookingClass = Trim(booking.Journeys(jo).Segments(j).CabinOfService)

                    objSession.Send("SS" & Carrier & FlightNo & "Y" & DepSTDate & DepStation & ArvlStation & "GK" & booking.PaxCount & "/" & DepSTTime & ArvlSTTime & "/" & booking.RecordLocator)

                Next

            Next

            objSession.Send("AP MNLPH BCD PHILSCAN 6692100 A-" & Trim(txtRF.Text))
            objSession.Send("TKOK")
            objSession.Send("RF" & Trim(txtRF.Text))

        End If

    End Sub

    Private Sub TxtTravEmail_TextChanged(sender As System.Object, e As System.EventArgs) Handles TxtTravEmail.TextChanged
        '====CHANGE @ to .AT.====

        TxtTravEmail.Text = TxtTravEmail.Text.Replace("@", ".AT.")
    End Sub

    Private Sub cboSegment_SelectedIndexChanged(sender As System.Object, e As System.EventArgs) Handles cboSegment.SelectedIndexChanged
        
    End Sub

    Private Sub btnRetrieveFare_Click(sender As System.Object, e As System.EventArgs) Handles btnRetrieveFare.Click
        Dim temp() As String
        Dim Fare As String = Nothing
        Dim Equivalent As String = Nothing

        objSession = New k1aHostToolKit.HostSession


        If cboSegment.Text <> Nothing Then
            objResponse = objSession.Send("TQT")

            objResponse = objSession.Send("TQT/T" + cboSegment.Text)

            temp = objResponse.Text.Split(New String() {Environment.NewLine}, StringSplitOptions.None)

            For x As Integer = 0 To temp.Length - 1
                If temp(x).Contains("FARE") Then
                    Dim tempFare() As String

                    tempFare = temp(x).Split(" ")

                    cboCurrAir.Text = tempFare(3)

                    Fare = tempFare(tempFare.Length - 1)
                End If

                If temp(x).Contains("EQUIV") Then
                    Dim tempFare() As String

                    tempFare = temp(x).Split(" ")

                    Fare = tempFare(tempFare.Length - 1)

                    cboCurrAir.Text = "PHP"
                End If

            Next

            If Equivalent <> Nothing Then
                txtSFSegment.Text = Equivalent
            ElseIf Fare <> Nothing Then
                txtSFSegment.Text = Fare
            Else
                txtSFSegment.Text = Nothing
            End If

        Else
            objResponse = objSession.Send("TQT")

            temp = objResponse.Text.Split(New String() {Environment.NewLine}, StringSplitOptions.None)

            For x As Integer = 0 To temp.Length - 1
                If temp(x).Contains("FARE") Then
                    Dim tempFare() As String

                    tempFare = temp(x).Split(" ")

                    cboCurrAir.Text = tempFare(3)

                    Fare = tempFare(tempFare.Length - 1)
                End If

                If temp(x).Contains("EQUIV") Then
                    Dim tempFare() As String

                    tempFare = temp(x).Split(" ")

                    Fare = tempFare(tempFare.Length - 1)

                    cboCurrAir.Text = "PHP"
                End If

            Next

            If Equivalent <> Nothing Then
                txtSellingFare.Text = Equivalent
            ElseIf Fare <> Nothing Then
                txtSellingFare.Text = Fare
            Else
                txtSellingFare.Text = Nothing
            End If
        End If


        Dim PNR As New s1aPNR.PNR

        PNR.RetrieveCurrent(objSession)

        '====GET NO OF PAX====
        Dim NameElements = PNR.NameElements

        Dim noOfPax As Integer = 0

        For Each item As s1aPNR.NameElement In NameElements

            noOfPax = noOfPax + 1
        Next

        txtNoOfPax.Text = noOfPax.ToString()
        txtNoPax.Text = noOfPax.ToString()

       

        objSession.Send("RT")

        If txtSellingFare.Text = "0" Then
            cboSegment.Text = Nothing
        End If
    End Sub

    Private Sub cboClient_SelectedIndexChanged(sender As System.Object, e As System.EventArgs) Handles cboClient.SelectedIndexChanged

    End Sub

    Private Sub MRdom_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles MRdom.CheckedChanged
        If (cboProductCode.Text = "2" Or cboProductCode.Text = "3") Then
            If (MRdom.Checked) Then
                If (checkboxBoxLCC.Checked) Then
                    txtCostAmt.Text = SF_DOM_LCC.ToString()
                    cboCostCurr.Text = SF_DOM_LCC_CURR
                Else
                    txtCostAmt.Text = SF_DOM.ToString()
                    cboCostCurr.Text = SF_DOM_CURR
                End If

                cboProdTYpe.Text = "SF - Domestic Ticket"
            ElseIf (MRIntl.Checked) Then
                txtCostAmt.Text = SF_INTL.ToString()

                cboCostCurr.Text = SF_INTL_CURR

                cboProdTYpe.Text = "SF - Internationl Ticket"
            ElseIf (MRReg.Checked) Then
                txtCostAmt.Text = SF_REG.ToString()

                cboCostCurr.Text = SF_REG_CURR

                cboProdTYpe.Text = "SF - Regional Ticket"
            End If

        End If
    End Sub

    Private Sub Panel2_Paint(sender As System.Object, e As System.Windows.Forms.PaintEventArgs) Handles Panel2.Paint

    End Sub

    Private Sub MRReg_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles MRReg.CheckedChanged
        If (cboProductCode.Text = "2" Or cboProductCode.Text = "3") Then
            If (MRdom.Checked) Then
                If (checkboxBoxLCC.Checked) Then
                    txtCostAmt.Text = SF_DOM_LCC.ToString()
                    cboCostCurr.Text = SF_DOM_LCC_CURR
                Else
                    txtCostAmt.Text = SF_DOM.ToString()
                    cboCostCurr.Text = SF_DOM_CURR
                End If

                cboProdTYpe.Text = "SF - Domestic Ticket"
            ElseIf (MRIntl.Checked) Then
                txtCostAmt.Text = SF_INTL.ToString()

                cboCostCurr.Text = SF_INTL_CURR

                cboProdTYpe.Text = "SF - Internationl Ticket"
            ElseIf (MRReg.Checked) Then
                txtCostAmt.Text = SF_REG.ToString()

                cboCostCurr.Text = SF_REG_CURR

                cboProdTYpe.Text = "SF - Regional Ticket"
            End If

        End If
    End Sub

    Private Sub MRIntl_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles MRIntl.CheckedChanged
        If (cboProductCode.Text = "2" Or cboProductCode.Text = "3") Then
            If (MRdom.Checked) Then
                If (checkboxBoxLCC.Checked) Then
                    txtCostAmt.Text = SF_DOM_LCC.ToString()
                    cboCostCurr.Text = SF_DOM_LCC_CURR
                Else
                    txtCostAmt.Text = SF_DOM.ToString()
                    cboCostCurr.Text = SF_DOM_CURR
                End If

                cboProdTYpe.Text = "SF - Domestic Ticket"
            ElseIf (MRIntl.Checked) Then
                txtCostAmt.Text = SF_INTL.ToString()

                cboCostCurr.Text = SF_INTL_CURR

                cboProdTYpe.Text = "SF - Internationl Ticket"
            ElseIf (MRReg.Checked) Then
                txtCostAmt.Text = SF_REG.ToString()

                cboCostCurr.Text = SF_REG_CURR

                cboProdTYpe.Text = "SF - Regional Ticket"
            End If

        End If
    End Sub

    Private Sub cboProductCode_SelectedIndexChanged(sender As System.Object, e As System.EventArgs) Handles cboProductCode.SelectedIndexChanged
        If (cboProductCode.Text = "2" Or cboProductCode.Text = "3") Then
            checkboxBoxLCC.Enabled = True
        End If
    End Sub

    Private Sub checkboxBoxLCC_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles checkboxBoxLCC.CheckedChanged
        If (MRdom.Checked And (cboProductCode.Text = "2" Or cboProductCode.Text = "3")) Then
            If (checkboxBoxLCC.Checked) Then
                txtCostAmt.Text = SF_DOM_LCC.ToString()
                cboCostCurr.Text = SF_DOM_LCC_CURR
            Else
                txtCostAmt.Text = SF_DOM.ToString()
                cboCostCurr.Text = SF_DOM_CURR
            End If
        End If
    End Sub

    Private Sub btnEditMode_Click(sender As System.Object, e As System.EventArgs) Handles btnEditMode.Click
        If (SF_ADMIN) Then

        Else
            LoginForm.ShowDialog()
        End If
    End Sub

    Private Sub DGServiceFee_DoubleClick(sender As System.Object, e As System.EventArgs) Handles DGServiceFee.DoubleClick
        If (SF_ADMIN) Then
            '===========ASIGN VALUES IN SERVICE FEE FORM=============
            txtBoxSFProfileNo.Text = DGServiceFee.CurrentRow.Cells(0).Value 'PROFILE NO

            txtBoxSFProfileName.Text = DGServiceFee.CurrentRow.Cells(1).Value 'PROFILE NAME

            txtBoxSFCurrDomestic.Text = DGServiceFee.CurrentRow.Cells(2).Value 'SF_DOM_CURR

            txtBoxSFDomestic.Text = DGServiceFee.CurrentRow.Cells(3).Value 'SF_DOM

            txtBoxSFCurrLCC.Text = DGServiceFee.CurrentRow.Cells(4).Value 'SF_LCC_CURR

            txtBoxSFLCC.Text = DGServiceFee.CurrentRow.Cells(5).Value 'SF_LCC

            txtBoxSFCurrRegional.Text = DGServiceFee.CurrentRow.Cells(6).Value 'SF_REG_CURR

            txtBoxSFRegional.Text = DGServiceFee.CurrentRow.Cells(7).Value 'SF_REG

            txtBoxSFCurrInternational.Text = DGServiceFee.CurrentRow.Cells(8).Value 'SF_INTL_CURR

            txtBoxSFInternational.Text = DGServiceFee.CurrentRow.Cells(9).Value 'SF_INTL

            txtBoxSFCurrAOH.Text = DGServiceFee.CurrentRow.Cells(10).Value 'SF_AOH_CURR

            txtBoxSFAOH.Text = DGServiceFee.CurrentRow.Cells(11).Value 'SF_AOH

            If (DGServiceFee.CurrentRow.Cells(12).Value = "Y") Then
                checkBoxIFConvert.Checked = True
            End If

            If (DGServiceFee.CurrentRow.Cells(13).Value = "Y") Then
                checkBoxWithVAT.Checked = True
            End If

            btnSaveSF.Text = "Update"

            PanelServiceFee.Visible = True
        End If       
    End Sub

    Private Sub txtBoxSFDomestic_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFDomestic.KeyPress
        Dim FullStop As Char
        FullStop = "."

        If e.KeyChar = FullStop And txtBoxSFDomestic.Text.IndexOf(FullStop) <> -1 Then
            e.Handled = True
            Return
        End If

        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> FullStop) And
               (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = True
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFRegional_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFRegional.KeyPress
        Dim FullStop As Char
        FullStop = "."

        If e.KeyChar = FullStop And txtBoxSFRegional.Text.IndexOf(FullStop) <> -1 Then
            e.Handled = True
            Return
        End If

        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> FullStop) And
               (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = True
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFInternational_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFInternational.KeyPress
        Dim FullStop As Char
        FullStop = "."

        If e.KeyChar = FullStop And txtBoxSFInternational.Text.IndexOf(FullStop) <> -1 Then
            e.Handled = True
            Return
        End If

        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> FullStop) And
               (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = True
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFLCC_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFLCC.KeyPress
        Dim FullStop As Char
        FullStop = "."

        If e.KeyChar = FullStop And txtBoxSFLCC.Text.IndexOf(FullStop) <> -1 Then
            e.Handled = True
            Return
        End If
        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> FullStop) And
               (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = True
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFAOH_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFAOH.KeyPress
        Dim FullStop As Char
        FullStop = "."

        If e.KeyChar = FullStop And txtBoxSFAOH.Text.IndexOf(FullStop) <> -1 Then
            e.Handled = True
            Return
        End If

        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> FullStop) And
               (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = True
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFCurrDomestic_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFCurrDomestic.KeyPress
        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = False
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFCurrRegional_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFCurrRegional.KeyPress
        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = False
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFCurrInternational_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFCurrInternational.KeyPress
        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = False
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFCurrLCC_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFCurrLCC.KeyPress
        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = False
                Return
            End If
        End If
    End Sub

    Private Sub txtBoxSFCurrAOH_TextChanged(sender As System.Object, e As System.EventArgs) Handles txtBoxSFCurrAOH.TextChanged

    End Sub

    Private Sub txtBoxSFCurrAOH_KeyPress(sender As System.Object, e As System.Windows.Forms.KeyPressEventArgs) Handles txtBoxSFCurrAOH.KeyPress
        If Not Char.IsDigit(e.KeyChar) Then
            If (e.KeyChar <> Convert.ToChar(Keys.Back)) Then
                e.Handled = False
                Return
            End If
        End If
    End Sub

    Private Sub ClearSF()
        txtBoxSFAOH.Text = ""
        txtBoxSFCurrAOH.Text = ""
        txtBoxSFCurrDomestic.Text = ""
        txtBoxSFDomestic.Text = ""
        txtBoxSFCurrInternational.Text = ""
        txtBoxSFInternational.Text = ""
        txtBoxSFCurrLCC.Text = ""
        txtBoxSFLCC.Text = ""
        txtBoxSFRegional.Text = ""
        txtBoxSFCurrRegional.Text = ""
        checkBoxWithVAT.Checked = False
        checkBoxIFConvert.Checked = False
    End Sub

    Private Sub btnSaveSF_Click(sender As System.Object, e As System.EventArgs) Handles btnSaveSF.Click
        Try
            Dim convert As String = "N"
            Dim vat As String = "N"
            Dim message As String = ""

            If (checkBoxIFConvert.Checked) Then
                convert = "Y"
            End If

            If (checkBoxIFConvert.Checked) Then
                vat = "Y"
            End If

            UPD_QUERY = ""

            If (btnSaveSF.Text = "Update") Then 'Update Service Fee Profile
                UPD_QUERY = "UPDATE BCDMIS..ClientSpecificFee SET SF_DOM_CURR='" & txtBoxSFCurrDomestic.Text.ToUpper & "'" _
                    & ",SF_DOM=" & txtBoxSFDomestic.Text _
                    & ",SF_REG_CURR='" & txtBoxSFCurrRegional.Text.ToUpper & "'" _
                    & ",SF_REG=" & txtBoxSFRegional.Text _
                    & ",SF_INTL_CURR='" & txtBoxSFCurrInternational.Text.ToUpper & "'" _
                    & ",SF_INTL=" & txtBoxSFInternational.Text _
                    & ",SF_AOH_CURR='" & txtBoxSFCurrAOH.Text.ToUpper & "'" _
                    & ",SF_AOH=" & txtBoxSFAOH.Text _
                    & ",IF_CONVERT='" & convert & "'" _
                    & ",WITH_VAT='" & vat & "'" _
                    & ",SF_DOM_LCC=" & txtBoxSFLCC.Text _
                    & ",SF_DOM_LCC_CURR='" & txtBoxSFCurrLCC.Text.ToUpper & "'" _
                    & "WHERE ProfileNumber='" & txtBoxSFProfileNo.Text & "'"

                message = "Successfully Updated service fee profile of " & txtBoxSFProfileName.Text

            Else 'Save New Service Fee Profile
                UPD_QUERY = "INSERT INTO BCDMIS..ClientSpecificFee(ProfileNumber, FullName, SF_DOM, SF_REG, SF_INTL, SF_DOM_CURR, SF_REG_CURR" _
                    & ", SF_INTL_CURR, IF_CONVERT, WITH_VAT, SF_DOM_LCC, SF_DOM_LCC_CURR, SF_AOH, SF_AOH_CURR)" _
                    & "VALUES('" & txtBoxSFProfileNo.Text & "','" & txtBoxSFProfileName.Text & "'," & txtBoxSFDomestic.Text & "," _
                    & txtBoxSFRegional.Text & "," & txtBoxSFInternational.Text & ",'" & txtBoxSFCurrDomestic.Text.ToUpper & "','" _
                    & txtBoxSFCurrRegional.Text.ToUpper & "','" & txtBoxSFCurrInternational.Text.ToUpper & "','" & convert & "','" & vat & "'," _
                    & txtBoxSFLCC.Text & ",'" & txtBoxSFCurrLCC.Text.ToUpper & "'," & txtBoxSFAOH.Text & ",'" + txtBoxSFCurrAOH.Text.ToUpper & "')"

                message = "Successfully Added service fee profile of " & txtBoxSFProfileName.Text
            End If

            If (UPD_QUERY <> "") Then
                CNN.Execute(UPD_QUERY)

                MessageBox.Show(message, "Success")
            End If
        Catch ex As Exception
            MessageBox.Show("Error on Saving/Updating Service Fee", "Error")
        End Try       
    End Sub

    Private Sub btnCancelSF_Click(sender As System.Object, e As System.EventArgs) Handles btnCancelSF.Click
        PanelServiceFee.Visible = False

        ClearSF()
    End Sub

    Private Sub btnAddNew_Click(sender As System.Object, e As System.EventArgs) Handles btnAddNew.Click
        If (SF_ADMIN) Then
            PanelServiceFee.Visible = True

            btnSaveSF.Text = "Add"
        Else
            LoginForm.ShowDialog()
        End If
    End Sub

    Private Sub rdDoktors_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles rdDoktors.CheckedChanged

    End Sub

    Private Sub rdEmployee_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles rdEmployee.CheckedChanged

    End Sub

    Private Sub txtSalesChannel_SelectedIndexChanged(sender As System.Object, e As System.EventArgs)
        If (txtSalesChannel.Text.Contains("NOT")) Then
            txtSalesChannel.Text = "NOT"
        ElseIf (txtSalesChannel.Text.Contains("MEDT")) Then
            txtSalesChannel.Text = "MEDT"
        ElseIf (txtSalesChannel.Text.Contains("NORT")) Then
            txtSalesChannel.Text = "NORT"
        End If

        txtSalesChannel.Refresh()
    End Sub
End Class
